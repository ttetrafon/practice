(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    321548,       6842]
NotebookOptionsPosition[    239029,       5338]
NotebookOutlinePosition[    286938,       6341]
CellTagsIndexPosition[    285468,       6292]
WindowTitle->01 Times series: The Basics
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
/w/qQILY
     "], {{0, 100}, {450, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{268.015625, Automatic},
   ImageSizeRaw->{450, 100},
   PlotRange->{{0, 450}, {0, 100}}], "Title"]], "Title",
 CellChangeTimes->{3.785141470231607*^9, 
  3.785141924332955*^9},ExpressionUUID->"059f49ae-49fc-4f44-80e6-\
ab700841b96e"],

Cell[TextData[StyleBox["Time Series",
 FontTracking->-0.75]], "Title",ExpressionUUID->"1243965a-40ce-482a-9c91-36878f955d76"],

Cell["The Basics", "Subtitle",ExpressionUUID->"abd2714b-c40b-491d-9b98-1f3d249655e3"],

Cell[BoxData[""], "Input",ExpressionUUID->"3f05ebf1-e1d1-40c2-8c71-4ec5435a69a2"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[{{{}, {
     {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[3], CapForm[
      "Butt"], GeometricTransformationBox[InsetBox[
        GraphicsBox[
         {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[3], CapForm[
          "Butt"], 
          {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
          {AbsoluteThickness[1.5], Dashing[{}], 
           CircleBox[{0, 0}, 
            Offset[{3., 3.}, {0., 0.}]]}}], {0., 0.}], CompressedData["
1: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
       
       "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445],
       Thickness[0.0025], LineBox[CompressedData["
1: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
Aqw1MrsVs9Na91/OMVgl
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.006944444444444445],
       Thickness[0.0025], LineBox[CompressedData["
1:eJw11gs4lGkbB/A3bZEohyGFGjrY6KBESupPjqUwIzROMxhjHLelteuTnUpt
+khHFdZOm1KklNLRNh0WnY9bqd1trJJONkUk5eu75n66LlfXz+15/897P8/7
vK9VdKpAqsVxXO+Xn///r/n3Zt5d8x0Tiw/en0e/gGKag/la2yayDop4p3Si
Nv5FNoB/YsOj/Dn/kHmYk73v8sjyVrIZ9sivHh827hXZApLXxfUedh1kPrKP
lgri/ttJtkaF2sbYfVgPeRwW2bTsvi/5SJ6A2a3TGgsln8lfI0aq43WuiIPG
tvAp2t7o2jKAPAk/3V150LFPizwF6Xkb73nfGki2h4fPneLhQV+Rp6F/ot9s
p0Lm6chrrwkxOcjsgBUrh7qM2cs8A8aCZ/sdapgdsXj07tpFF5idcIj3r21V
A/NMeHTUNSW/Z3ZG1bx1MgfRIPIs3Cy8brBg6mDybCjHZjmUxWmTXfDBwqvE
7ash5Dl4URp2vaxNl+yKU9U/DHDX0SfPxY1Cf0WW43DyPLg3XWlPvWlABi6e
Ch7Xam2ksQIIcvouLzHDmOpu4AbZ6j25zaO6G8I79HyOGZpS3R1mTmum6TiM
oLo7tFYvvxA43ozq8+GWKXT9z1uyYj5s5jpPjCkdSXUPVOh9rlNPH0V1D2QZ
zs+t2kHmPNHVf9nq0lVW90SyllnWi2us7oXG6KnV5ptZ3Qvr1I08XWdW90bU
j2kJhdcpT+GNoZnOkrLvWL4P7iYtz2uwZXUfxAz8/ZvJz9n8feGbllHrepjN
3xf2AmFs7VZWX4CAcrP88m2svgAZsbM/nbnI6guxunTj4DR7dv2F8LBcO1m7
keX7oW3U6hmfstn8/TB1WZruWphTfRHyR624/E7bguqLUL3BSJJyh8wthoGZ
85307ZZUXwz9i7+5Fi0eTXV/zAw4sUe7l6zwx5vRrqvSS8ZQPQBCq0+TLUby
NUYAjI9NOH9UTFYEYFPOWR+3crIqAL2nu3m/vSRzgcj7XfbVYHsrGh+Igjan
TZn/ISsC0eOSUfPpDlkVCN/9j4IcplvTeAHUbwrCnxeSIUDW+7ITFz6SFQJs
eiQ4u2HpWBovwPUcXvOTfWROiGXllUecWsgQIv5KTuaP2uNovBAndr6u5FuQ
VUL0ndSfuZNH5oIQuqbPcd97Nj4ICc8u1TvWkxVBELSZN7jksPwgrDFb22Tq
yPKXIP+pacjeR2z+S3D16eaPmSvZ/JegpsLmXfdksmoJ9o4ZLvFspn5wwfg+
MbJ35FbWv2D8GQBzy4Wsf8FIyftcV/mB9T8Yvspzp1qVrP8h0O2bGhk6j61f
CFYdGaj8WEjrqwhBQka68loJrb8qBFkKXxPrtbRfuFDkhIk3jF5M+wmhSBg+
TH5vCO0/RSgeSNf/+PAw7VdVKHj1pn/eW8L291IcHhftvGcQPf9YikadMw+r
b5vQ+KWQL974k7Cezg/VUriN+KdH3sXOFxG2vuzI9F5IhgjSXsG73dfYeSSC
eN03JycWkFUilCdm1yVlkbkwuN70PLDlVzLCcH7L7tSCbjY+DJfrbbzO5ND1
VWH4ZWLTvqSpNB8uHNe9D32e9JSMcFw9Ennj691s/uHYfkvmtzedzjtVOMoe
R4hTfOl+uQgkn/hXFctRPxCBuwbVpwfuYedBBIKfVwh/ncv6F4GovNPv9K6w
5z8SjpdT1aH29PwjEtIpfsvSM9h5EIknmyO9jx8lqyKhNUh98N8H7HyLgmzA
yw+iP9n4KOh0iNOe3mbjo3DV3/T6rltsfBT8+z/FCS+y8WJsu9S6Y2MxmS+G
vqe+8pCIXU+MitMfQlabkMVixP5inJPF5q8Qw2/a0C6hlKwU42jBhQyPd3T/
KjFSDzciOYOsFsP60UyP++2sfxLECY39tQPJfAlqHv0wP2ov9RsS+JVPPje+
m9ZDLMGqyrOGB6az9ZGgJbB0pmcgrZ9SgkHTBjydJmPrLQGXPc9Tkkv7QS3B
pB1jx7qXG1J+NB6KjWYIj9P7kB+NEO1wmzABvS8RDYMXktYZA+l9Ko7G487i
7tZCet8qorFqc7Px8VE6lB+NyZt5xr9W0ftcFY3vdfjN2e70vaGOhjTiven6
cva9EoOGlx/tRZvp+4YfA/fABunS9C6NEYNrt9rGp37brrE4BlUPnKaMMqfv
LUUMXp3O18kY36ixMgb7BSkvLN41nNXkx2CbR8eUDfhHY3UMpjoX3r15rF1j
Lhad26+0X07o0pgfiwOvw9OsHD5qjFiM6PraQy+KU2nyY7FhaWZcbpeWxopY
OLsNCbmcOUhjZSx0Pq/ufN6srbEqFnN2i+6cctDVWB375fur//AbmZ7GnBRH
Bv985eeCYRrzpejZ3rb3ZYiBxpCiXB6m+zbJkPKlOL4iSPi6wIjypbBpV9x/
dciY8qV4X3nmyaEHPMqXws5ixK1X700oXwrtoIUDinRGUH4czgVsa/bimVF+
HAKX5W2NtB5J+XGIqrpa5T55FOXHQS/okG7SDHPKj4OovnCdiYsF5cch5MnN
puV2lpQfh61Di680m42m/Dh8+ywcrz+RORl2BK/uWPdiDOXLYFH6rHj6cj7l
y5DmIVI2d5PFMpwUnv/7fIYV5cuwyefAmWGvyUoZXPJrlx8NtKZ8GVqsBIK5
u8hqGYbmtrRZqslcPGy3WOtv0h5L+fF4sGfSQW9DMuLxi27Cufk99PfieOzk
T7DcfZKsiMfbz1dtLMPIyngMGe36wfcvmo8qHqeLt4X0epPV8Whb0JE+dBfd
DyfHqxMmtdwf7P7l4BnmWtUGU38gx/RNdnYmTdRfsRzxufxseznrvxxrjDxu
j+PR+ijlX74nxAnrW2k9VXJcuN238v5jWm+1HKq36b0n+k0pPwFF+tV2EV5k
fgJEOztL22tovyAB19baLngVRhYnYIin1fbgCWRFAipq9bVa+mi/KRNQElWQ
N/gp238J2GTxONXyEln95Xo9BjtsishcInquidbMWETmJ+Kip3iXopv2MxJR
63W8X1VMFieiUdSU4eVGViRixfc+N3bdpudBmYiCOxWzLFLIqkREV9288d0U
sjoR5hOz3HcZkbkkRBhUyursyPwklIzs59p/ICMJu872/HF9EMtPwk9WlWrV
SZafBBO51p7OXHb/Sag+pjOyLon6o0qCqKF/434J9VedBItZRztzFrDnLxkX
5cbnsszY85eMrU51QcFXyEhGu+2oVEkUPY/iZDwrqTx76wZZkYybJXkP/x7N
1j8Zd41yDSAgq75c3y9sbnUMWZ0M5azq5nsSMpcCfafXace8yPwU9PBqyrZY
kpGC9fkPKia0sPwURCxfVGpYyPJTEPRbWWmfM1mZgraCivieFrb/UvAgZU7b
041kdQpGbPsU+NiFzKXC4kBXzFiO3X8qwtWnhn1zl/qDVDza96F7aP0I1f8A
1fpyHA==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.006944444444444445],
       Thickness[0.0025], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.006944444444444445],
       Thickness[0.0025], LineBox[CompressedData["
1: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
FPAsk4oUk8hIgdT5lN3FyYbyfwEL/mXZ
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.006944444444444445],
       Thickness[0.0025], LineBox[CompressedData["
1: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
05CubT5az+JIQ8KpkvcFY/4PwQBsyg==
       "]]}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->None,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->None,
  GridLines->{None, {-10., -5., 0., 5., 10.}},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageMargins->{{224., 225.}, {9., 1.}},
  ImagePadding->All,
  ImageSize->{722., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 250.}, {-10.268664283355545`, 11.24432177574599}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {
     Identity, 
      Identity}]& \
}]],ExpressionUUID->"9e56127f-0a83-4085-a4cd-3f5c77a909b8"]], "Text",
 CellChangeTimes->{3.714383691173235*^9},
 TextAlignment->Center,ExpressionUUID->"7397c74f-fd3f-4818-b16a-88faac3abecf"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"d7d6d0b3-d203-40df-afc6-25eef238649e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"5e1b7bef-b164-4a48-99aa-6bd141aae90a"],

Cell[CellGroupData[{

Cell["Outline ", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, 3.7270211412216473`*^9, {3.7851429534588127`*^9, 
   3.7851429570669117`*^9}},ExpressionUUID->"84dc8a8f-439c-4a50-a8af-\
5aefc862d9fd"],

Cell[CellGroupData[{

Cell["What Is a Time Series?", "Subsection",ExpressionUUID->"abdc45a6-e948-46bc-9530-147ca5395de1"],

Cell["Definition of a times series", "Item",ExpressionUUID->"813f243c-e7a4-4ee0-8414-c331deb7b656"],

Cell[CellGroupData[{

Cell["Times series in the Wolfram Language", "Item",ExpressionUUID->"8d35fb59-4127-4c86-baa7-b5c72a106963"],

Cell["TimeSeries", "Subitem",ExpressionUUID->"03df6af6-53d7-4947-b196-09da21ad770c"],

Cell["TemporalData", "Subitem",ExpressionUUID->"e891f57c-05e2-4483-b31d-1a97d01d1891"],

Cell["EventSeries", "Subitem",ExpressionUUID->"3143b847-ba5b-4e33-933c-084f74b33d06"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constructing Time Series", "Subsection",ExpressionUUID->"1aba4352-b863-4a77-932c-35583e2760b0"],

Cell["Lists of values and times", "Item",ExpressionUUID->"d6a7cf52-7d56-4f43-82f7-fa2582030223"],

Cell["Dates", "Item",ExpressionUUID->"2a8e0f2c-31ec-47ec-8d02-cc643d809d4a"],

Cell["External data", "Item",ExpressionUUID->"f420079f-3c5d-4dbf-bb41-ac71fe86fac4"],

Cell["Random processes", "Item",ExpressionUUID->"0af3c7f3-6a6c-4245-85e1-2891e38e5b80"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extracting Data from Time Series", "Subsection",ExpressionUUID->"41ed0197-fb5a-4ad4-85ab-99a21bbc7da0"],

Cell["TimeSeries properties", "Item",ExpressionUUID->"4af6fbff-d9a4-4308-a77b-468d9a40ee91"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cleaning Time Series", "Subsection",ExpressionUUID->"dfe5073b-5c3e-4519-9876-c18b4eee1140"],

Cell["Missing data", "Item",ExpressionUUID->"95a9483a-08b0-4d96-9a15-d99593f786c8"],

Cell["Irregular data", "Item",ExpressionUUID->"93264688-3769-441d-8031-72ec60ab16d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operations on Time Series", "Subsection",ExpressionUUID->"3c5d7cf0-6bc7-4afe-88d0-978e76d32e52"],

Cell["Direct arithmetic", "Item",ExpressionUUID->"ad38ac04-cfdd-4e22-8c4a-41bcc65f377e"],

Cell["TimeSeriesWindow", "Item",ExpressionUUID->"078eb629-dfa9-4d57-ae3f-73535a517322"],

Cell["MovingMap", "Item",ExpressionUUID->"e1e53d40-22c7-466c-aa8f-973f7dc6f613"],

Cell["TimeSeriesResample", "Item",ExpressionUUID->"37174ec3-4168-4c1e-8a75-7dc5143493fc"],

Cell["TimeSeriesMap", "Item",ExpressionUUID->"4b5431df-c127-48b2-b994-f08493bdfb0a"],

Cell["TimeSeriesThread", "Item",ExpressionUUID->"8c7b91e3-23b8-4284-a058-437b7b6e8730"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"1ba8e886-9754-4254-ab1b-9841e8dc0396"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a4834203-c5b6-4ebc-9a63-fa4db5773568"],

Cell[CellGroupData[{

Cell["What Is a Time Series?", "Section",ExpressionUUID->"00702c5e-711a-4916-8ac8-17827ecfb5f6"],

Cell["\<\
Time series are tightly integrated into the Wolfram Language\[Trademark], \
allowing for seamless workflows with absolute or calendar time, regular or \
irregular sampling, scalar or vector values, single or multiple series and in \
the presence of missing data. The Wolfram Language offers an extensive \
collection of tools for processing time series. These tools range from \
descriptive statistics, filters and visualisation to forecasts, simulation \
and highly automated modeling frameworks.\
\>", "Text",ExpressionUUID->"29eb7540-21df-4729-9c03-7afa23bec2c8"],

Cell[TextData[{
 "Guide: ",
 ButtonBox["Time Series",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/TimeSeries"],
 "."
}], "Text",ExpressionUUID->"9790fa2b-cefa-41af-a2dc-b67aa8bb7873"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{}, {}, {
       RGBColor[0.368417, 0.506779, 0.709798], 
       PointSize[0.004583333333333334], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGDQB2IQzcDQwOk++7XjrJkgoOkA5J/2QOX3egH5aWCgDuL7
+8DltUB8QT+4vAaIf9kfJi9pAOJPDYTJPzMC8cODgXxjMDAD8SVDgfyzZ4DA
xxzEvx0GN88CxJ8bAbfPEsSPj4KbbwXiK8bAzNsM5j+OhZtvDeIvjUflpyfC
7DsD5r9OQdW/Ng3V/vwMuLwpiG+YBeSDg47BBMT/nA13P9h/W3Ph9hmC+OX5
qHzLQtTw+V0Ed48OiL+3BJVfXwbna4P4jhWo4c9cBZcHm3+0Gm4+2L3ttfDw
B4evZz1q+HE3oobH2SZUfn8L3H82IH5gG9w8MF+4Ax5etiD+1U5U/vRueHjZ
gfiRvah86X5U9XcnoNo/fxJcPTj+E6fA5cHpR3kaqn+fToebZwziL5+JlP4A
CqM0gw==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQkDl79mvHNBB4ZuQA5GvPBfLPngECHzD/7TwY
/4whiL9+Aap84SJUeeMlQP6smSBgAuJ/XQpXbw7ib18Ol7cE8StXwvVbg/jW
q4F8sNMY7ED8v2tg6iXtQfz961D5jRuAfGMQ2AzmO2+CyzuA+KxbUPnHt6Ly
vXei6ufdDQuPNFsQ//weuPttQPyJ+1DdG3wAbp4ViC96CO5+sP+uH0biAwBr
MqLu
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzcDQMPPo7NeOaWBg4QDkRx8H8s+eAQIfcxBf9iSM
f8YMxL9/Csg3BoHNpiD+wjOo/ORzqOpVLwD5YKsYLEH85xdh6o2tQfyVl+H2
2YD42Vfh7rEF8XWvA/mzZoKAHYj//gbcPnsQf+MtmLwkmF98B1Xe9B4q//t9
VP7Oh6j2Vz+Gux/sPtuncPOtQPz/z1DD6+ALGP8ZOLyaX6GGn+sb1PBgfwf3
v5kDACi0qWg=
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQcPL97NeOxiCw2dQByO/+COTPmgkEkmC+72cY
f6YJiM//FcgHa2UA8y9+Q+VP/oGqPvQXkH/2DAiYgfjif+DqLUH8m3/h8tYg
/uz/cHk7ED+WcQ7MPfYgvjzzHJh7wfyHLEB+GggscwDxF7PB+GlgfioHqrw6
F6r+1bxw861A/Fz+OVD3+JiD+PqCc1DC46MQ3HxjEH+zCFy9EYhfKgYz39gQ
xDeXgNtn4AAAkAiOFg==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzcDQ8FNyzmtHYzDQdwDyd0sD+WfPgIAOiF8rC+dr
g/j28kB+GhhogPiMiqj8w0qo+ltVYOZvNgDx3dVg8j5GID6nBpA/ayYQSJqC
+Kc14frNQPxebZj5z8xBfH9duH0WIL6gPkz/TEsQ/7IB3D4rEH+qESo/3ARu
H5gvaQbkg4OCAaz/tjmqfXMt4eEDdk+8NVy9CYivaAtXD/bPYzu4+w1B/KUO
cP1gfroT3H4DBwAUF5So
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQoOky57WjMRjoOwD5r12BfLAUgx6Iv9YdyD97
BgR0QPx8TzhfG8Q39EaV/+yDat5WPzjfEMQvDwDy00DgmRGIbxkE5M+aCQIm
IP7vYLh6MxB/byjMfB9zEL8+HKY/zQLEd4yE67cE8ZmjUflHY1D57XGofO4k
uHvA5p9Nhtm/2RTE70+F2w92b2A6Kl84E+5/sP+uZsH1G4D403OQwhMAaMGW
aQ==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQEJk357Xj2TMgoOMA5EsXAPmzZoKAJoh/txDI
TwMDDRB/fjEqP7EUzlcH8ZXLYfolDUD8pxUw+WdGIP7yKiDfGAQ2m4L4mTVw
+81AfO06uHkWIP7berh7LEH89Y2o/MJmuH1WIL5xKyr/axvMPmNrEH97Byrf
ugfuHrD6v71w95qD+Pv7Ud3XOBFuPtj9zpNR+axTgXxw0DKYgPjHp8H0+xg5
AACZs5pL
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQ0DljzmtHYzAwdADyvWeh8nnnAPmzZgKBpAGI
f34uKn/ifJj6zWB+8EIgPw0EnhmB+KKLgfyzZ0DADMS/vgTIB1vNYAniz1wG
128F4kevgKn3sQHxZVfBzEuzBfHvr4brtwPxF65FlU9eD3PfTLC86kZU/vNN
qPzsbaj6dXfA/W8N4r/fierejbvh/jMH8Yv3ws0zAfFN98PVg/nfDyCFBwCP
+5Ax
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQzcDQsPPQnNeOaSDwzMgByK8+gsq3PQbknz0DBD5g
/v/jMP4ZQxD/4ElU+ebTMP1pxiC+61m4ejMQn/08kA+2msESxD95Acg3BgNr
EL/7Etx+GxDf9wrcPFsQn/8aKv/idSB/1kwQsAPxJ9+EmbfZHsQPvY3KF78L
Uy8J5sc+QrVf/gncPLD7Hj6Fu8ccxF/8HNU/qS9R+eqv4faZOgAA/4ia4Q==

        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQzcDQ8PLNnNeOs2aCgIkDkL/6HZAPlmIA83M/APlp
YGAM4ut/gvGfGYH4Hz+jym/+CuQbg8BmUxC/9Dtc3gLEN/8Jl7cC8X/+gptn
A+Lv/gNXbwvi1/6DuU/SHsS3Z5gL4zuA+IxMqPzDzHOh+peB+a2sMH4amO/O
jqq+l2cuiv3+fHOh7jO2BvEFBeDqwe69LAjjz7QE8acKz4WFF5gfLgrXb+YA
ALgtiEw=
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzcDQICk+97WjMQhsNnUA8m9LAPlnz4CAGYg/Vwom
bwzmx8ugqleUA/JnzQQCSTD/sTxMv485iL9UES5vBeKnKwP5aSDwzAbE11QF
8sFOYbAD8V+rofLXasDtswfx87Vg+tMcQHxDHbj7HEH8z7ow/mew/FZ9VPly
Q5j5DWC+pTGq+t8mMPOXgfl7zVDtr7dAdb+jFdy/YD6zDdw+axD/qC1cP9j/
7faw8Jhp6QAAvguIUg==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQzcDQ4Ok497XjrJkgYOkA5HM7A/lgKQYw/6wLkJ8G
BhYgfr8bkH/2DBD4mIP4gR6ofGEvVPOuesPkz1iD+NN94ebZgviR/nD1diC+
dCCML2kP4t8NgvMdQPz5IUC+MRg4gviJYah85QiY+xvA/KeRqPzl0aj8zFhU
/drxMPctA9v3NgEmvxnsnvVJqO43S4a7zwrEL0pGDb/CFNTwM05DDa+v6fDw
MQPxt2fC3WPmAADivJ3T
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcDQUJk997VjGgg8M3cA8q1zgXxjMDAD8f/mofL3
F8D4m01B/MYiIH/WTCCQBPOdS1DNYy2D67cG8Y+Xw+TTbEH8zkq4fnsQ37sa
zncA8XlrYeqXgfnn62DmfQbzJzagygc3AfkQrzmC+KItcPvA8tdbgfyzZ0AA
7J6Z7TC+jw2IH90J089gB+LLdqO4nyGwB+a+mZYg+fs9cPUgPkN8L9x8UHgx
9PSihtdbNH5qHyp/IRq/qR+V/xqNnzwBlb8Xja86CSl+ADG2uRE=
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDQ8GzK3NeOs2YCgaSpA5C/ciqMP9MEyGd4Mw2F
35A9HZWvOxPIBxvFAOa/n4XK3zgHVX3xPFT7TBcA+cYgsBnM/74Qlb9zMZB/
9gwQ+JiD+NVL4eZbgvi2y+HqrUD8/ytg6s9Yg/gHVwH5aSDwzAbEb14D46fZ
gviu6+Dm2YH47Bvg7gXzuzejyvtuRTWffzuqey7ugJtvAeJP3gW3H+z+0D2o
/hHfBzfPzAEAhjCiMw==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDQcHP/3NeOxmBg5gDkzz4I4282BfFjDwP5aWBg
DOLLH0XlPzyGyl98AsgHG81gAuKnngLyz54BAh9zEF/9DFy9BYj/8ixcvSWI
v/o8kD9rJhBIWoH4uRfh+m1AfP3LcP22IP7HK3D9diD+5msw/TPB/NIbcP/Y
g/gbbsL0PwObZ34LRT2Dwm1U/clwviRY/+67qPbV3kd1n/1DuH6wfxgfo/r3
8BO4/eDwaH2GJA8AJAKj2g==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzcDQwPlq7mvHs2dAwMwByD/9GpXf+xbINwYDMN//
PSpf8COMv9kUxL/8CVV+6hdU88K/AflpIPDMHMSX/AHkg53CYAni3/4J5M+a
CQJg/tzfcP3WIH78X1S+4n8Y38cGxH/MMA9qfpotiL+UaR7MPDsQP51lHsw+
MF+TDZX/mh1V/1rOeSjm53PPg/kPbL8hL8x8SSsQ/zMfKn85P1w/yL8MEgLz
kP3PMF8Abj84PLYKoKhv4BechxJ+skLzEOELALYhtZ8=
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzcDQcFFo3mtHYzAwcwAKsAkD+WfPgACI32ApAuSn
gYEFiP9bFCbvYw5Sry8Ok38G4jcUiaPq3yuOor6hXhJm32ZTEN9RGsifNRMI
JMF8ZllUfhca/6gcqvntCih8htMKqPZ5KqG6b6MyKp9bBcgHBwWDJYh/VhXu
PisQv18dlR+oCQ8vaxBfWBuVf1UHVf10PVR+pAHMPzPB9kkbofLvGqP6b74p
3H0mIH6iOTw+jB0AKCStPQ==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQkGk377WjMQhsNnAA8rUdUPlvHYH8s2dAwBDE
X+8M4/sYgfiFrjD1xmB5Y3dU+a8eQP6smUAgaQrib/eCm2cG4lf6APlpYGAB
4lv7wdTPtATx//rD9VuB+PsD4e4D8xuDUfnOoXD3WIP4rOGo/OMRqHzvGFTz
eePg5oHdez4eNTwmJqLyg5Ph5umD+KKpqPzraUA+OKgZ9BwAXhWIJQ==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQMDNj3mvHs2dAQMcByI/OQuXL5qDy7+cC+bNm
goAWiL8wH1U+uRDINwYDQxBftRjIB1vFYALiPy+BqfcxB/FXlsHMk7QC8bMr
4PqtQXzdKiA/DQSe2YD476th/DRbEH9jLdx8OxC/uB7uPjDftBGV/70JVX11
G1we7D7bDpj9m01B/P+dcPuMQfyD3XD3GIH4zb2ofNd+VPXsE5H8DwC9iJSm

        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQzcDQcHLSvNeOs2aCgIkDkN89BcgHSzGA+b7TgPw0
MDAG8flnAPlnz4CAIYh/cSYqf/JsVPWhc4F8YxDYbArii8+HqzcD8W8ugNtn
CeLPXgRXbwXixy6Bq7cG8eWXwfg+NiD+w+Wo/MUrUfmpq1H1q6+Fue8ZWD53
E6q8/hZU+z9uhYWPJJi/eTvcfxYgfulOuHnmIL75biQ+ACy0nEA=
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQzcDQ8HPPvNeOZ8+AgJkDkL97Hyq/9gCQbwwGYL79
IRh/symIz3gElX/4KKr+1uNAfhoYWID47ieB/FkzQcASxA89BddvBeJznobb
Zw3inz4DM8/HBsTvPQcz7xmY738Bbh9YveAluH22IP7ly6jyH66gmj/1Kqr5
4deBfHDQMIDdd/46qntv30Llz70D128O5DNcQuU3xN9DCQ+GjfdR5RUfoPIf
P0TlL32MxAcAM/XKAQ==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQzcDQoPl83mvHs2eAwMfcAch//QKVf+YlkJ8GAs/A
/LWvUPmBb4B8sFEMFiB+/huYfBqYb/gOld+Nymfgfo/KP/ce1bzPqPINWz/C
5S1B6l+h8YM+o/AbylH5DKu/oPpP6ytcHsy3/AqTP2MGUj/7K6r682jy/t9Q
+A2/v6Gq3/sD1X+fUPkNBb9Q/Vv/CzV8Hf+g+of5H5BvDAKbrUD8o/9R+e2M
81H4Z9nmo7ivnwPInzUTCCRNwfHHBVcP5gvzzIe5zxjEv8oL12/oAABizt+6

        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzcDQECk4/7UjmMmg5wDkSwsD+WfPgIAOiH9XBFV+
vhhcXhvET5RA5StLAfmzZgKBpAGI/1QayE8DgWdGIP5yWZj8TBMQP1MeyDcG
gc2mIL62Itw8MxD/rRIqf70KjO9jDuIXqsHMT7MA8Y01UPlfNVH527Xh7gHr
r9RFNc9aH+YeY7B9fw1Q3bvfCC5vCOI3mqCGl7MZaniwWsD1a4H4xy2R+ABQ
1p/9
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQzcDQ0Gk9/7XjrJkgoOUA5HvbovJ57VH55x2A/DQw
UAfxJzqh8oNdgPyzZ0BAG8QXdQPyjcHAEMS/7g7kg61mMAHxZ3rCzJc0BfGj
veH6zUB8WV8Y38ccxL/vh8pfGACz/xmYnxwEd48FiK8agsp/HopqfnYkzH2b
wfbrRsP9C3bf+xhU92+Mg7tfD8QvTkDyLwAbvYlf
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQzcDQ0Jw3/7VjGhhoOAD5rgVA/qyZQCBpAOKzF8Hk
nxmB+CeL4fKmIH53KSrftxzINwYDMxCfvxJV/mIVKn9yDar5oXWo8uINqOaZ
NAL5Z8+AgCGIP7sZLg/mx7aiul++Ha5eG8R/2AGTn6kJ4i/uQvV/ag+crw7i
q/ch8QGBK3xZ
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQzcDQ8LJ//mtHYzBQcwDyV08E8sFSDCogfu5kIP/s
GRBQAvH1p6LyP06D8xVB/M0zgPxZM0FAE8QvnQU33xDEN58D5KeBgTGI/3Mu
TL2kKYi/ez5M/WYwv3Yh3HwzEN9+MSqfcSmM72MO4h9eBjffAsRvXYHKd1+F
yu9dj2qf/0ZU9wpuhrvPAMS/vAVuvzaIP3Ubqnz4Drj/tRwAwBOY6A==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQILlr/mvHs2dAQMcByL+9G8ifNRMENEH8uXvh
8togfvx+IB+slUEPxFc8iMp/fAjINwaBzQYg/tIjQH4aCDwzAvHTj8HNNwHx
NU/AzTcD8V+fhKlPswDx156Gq7cE8fPPwsw3tgbxDc/D9PvYgPifL6Dyt15C
5ZdfQeX/vg63H2ze3psw+yStQPz623D/ge13vIvqPub7cPPMQfyjD1D57Y/g
/jd3AAAG06f3
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzcDQ4Plk/mvHs2eAwMfcAcjnfobKP/scld//EsY/
YwbiB75G5Qu/RVV/9R2QD7aKwRLEn/4ByJ81EwgkrUD8yE9w/dYgvvQXIN8Y
DMD8u1/h5tmA+PO/w82zA/ETf8LUb7YH8ZV/w80H85/+gfFngtW/ZV6AbB+D
PwsKv2EDiA8xD+y+9awLUNz7GsRH8o8aO5CfBgLPwP4tZF+A4n9jTph5xuDw
+coFN9/UAQAv3Kb9
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQzcDQUMm34LWjMQhsNnUA8q0FUPl/BVH5+4VhfGMz
EL9RFJXvLA7knz0DAmA+qySQnwYCz8xB/ONSQP6smSBgCeJ3ysD4klYg/jJZ
uH1gvq4ckA92KoMtiO8tBzfPBshnmCcHt98aJP9QDlW/lzyq+zPQ+O/l4eaD
3cerAHO/D4jPUKcAsy/NAiS/SQHV/dKKqO4/r4hqv7sSKr9YGW4f2L0TlVHd
H6wKtx/kvwZRdXh4WjsAANdrluA=
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzcDQ0GO+4LXjrJlAIGnqAOQbWsD4M01A/JVo/Gwr
ID8NDIxBfF0bVP57Wxj/mRGIv9EelV/sCOSDrWYAm2fqjGr/dxcg/+wZIPAx
B/F3usHttwTxqz2AfGMQ2GwF4tt6wdSfsQbx/3vD5I3B/IO+cPNsQPxmf7h7
wHzXQFQ+ezAq3zcCzge7hz8K1b0Xo1H9MzkW1b+h8ah88UQkPgDntplo
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQcDNpwWtHYzAwdADyZ6eg8mPTYPzNBiC+fAaQ
D9bKoAfiP8yEq9cH8RdnA/lnz4AAWH9qLpA/ayYImID46vlAfhoIPDMH8V8W
wOQlrUD81UVw/dYgfm4JXL0NiK9fBuOn2YL4H8vh7rED8TdXws2zB/FLq+H2
g+XNa1H5uxtg9vmAza9tgvsX7B77Frh7zEB8xjZU/uF2uH6wf1o74eEBlnfv
RuIDALiylak=
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQwNm74LXjrJlAIGnqAOSf7kPl906A8WeagPj+
k1D5glOA/DQwMAbxL08F8o3BwAzEnzodLm8B4ofPhMlvtgLxJWcD+WfPAIGP
DYh/ew6QD3Yagx2IP3ceKj9+Adx+MF9xEdy99iD+48VwvgOIv3Qpqnz6clT+
61Vw99mC+GvXoLovfx2q+w03oPrv80a4enB4bd2MGn7lW5HCCwCfsJUM
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQzcDQYLl9wWvHWTNBwMQByP+9A8hPAwNjEH/vLlR+
/R5UvuM+GP+ZEYjPfADIP3sGBMxA/KMH4eZbgvjth+Hy1iC+51EY38cGxOc+
DjffFsQ/ewLIBzuVwQ7E7z8FNw/MDzyDyhc+B+NL2oP4V8+j8qdfRLXv7jVU
982/AbcPzE+8BXePBYivfAeu3xzEf3oX7n9zBwDAaZcc
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQkPlwwWtHYxDYbOoA5Gs/RuW/fYLKX/8MyJ81
EwgkwfzCF6jyxq9Q+V9fA/lnz4CAGYi//S2QnwYGFiB+5Xu4eisQ3/ojXL01
iP/3E0z9MxsQf/8XuH5bEL/xG6q88w9UPusvVP7x36j8zr8w+3zAfO//qPbz
Mi5Ecd95JiAfHHQMliD+RBZUfjDbQph55iC+KAcSHwDnupr7
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQzcDQMJN74WtHYzAwcwDyo3lR+bL8qPz7AjD+ZlMQ
30IIyJ81EwgkwfyFaPy7QijqGaqFUfUni6CaryoG5J89AwJg/nNxuHlWIP5K
Sbi8NYifLQ3kp4HAMxsQX1cWxk+zBfHfy6HyNyoA+WCvM9iB+MVKcPPtQXxT
FVT+d1VU/k51VPOqNVH5ttow9/mA3fNfB9X9B/Xg6i1A/GYDuPvNQXxXI6Tw
AADJsJqv
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzcDQcNJ04WtHYxDYbOoA5HebA/mzZgKBJJjva4nK
57dG5V+0QeVPtgPyz54BATMQP9QBJj/TEsQXd4LZZ2wN4t90BvLTwMAWxJ/t
CldvB+LHusPdZw/iy3vC7QPzH3rB+Q4g/mIfmHnLwPxUP7j5YP56f1T96gEo
7mGYEYDqntXBqPzcUFT364fD/OtjDuJ/jIDLg/2/OQrIBwc1gwmIXxqDFF4A
7byUQg==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQ8DN+4WvHNBB4ZuQA5O9OBPLPngEBQxC/NhnI
NwYDMN8+FcbfbADiM6YD+bNmAoEkmH84A1V/axZc3hTEd8+B22cO4nPmweRn
WoL4p/Ph5luB+L2FcP1gvn8x3D3WIL5gKdw+MP9yGSp/agUqP7wKVf/tWlTz
59bD1PuA3RffCHefCYiv2Izqv8ctqOGztA2Vn94B5+s7AACMaZvh
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQzcDQoNm18LXjrJlAIGngAOS/7gbywVIMeiD+2l4g
/+wZENAB8fP7UeUNJ6LyP08C8tNA4JkRiL91Ctx8UxC/fBpMPs0CxLecAZe3
AvF/z4TbZw3i750N4/vYgPj1c+H6bUF8x/mofOaFMPNm2oH4RxfB3Qfmty9B
5Z9dCeQbgwHYvv7VcHlLED9wLSpfeD0q/+oGuH/NQfzpm+DuNXcAAOLvhPE=

        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzcDQELll4WvHs2dAwMwByJfeBuQbgwGYf3c7TN7H
HMSfvxOVn7gbVb/yXlT5p/uA/DQQeAbmLz8AM3+zKYifeQjInzUTCCTBfO0j
qPa/PYqqf/1xuLw1iF94Ei5vA+Ibn4aZN9MOxP96Bm6fPYi//RzcPjC/8gIq
3/oSqnl/L8P9A+bvvwr3L9j+X9dQ1TdeR5V3vgl3jyWIz3obpj7NwgEAIVKw
Ww==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQzcDQ0Hlv4WvHs2dAwMwByPd+AOP7mIP4vI9Q5c8/
RpWf+BSVH/wclS/6EsifNRMELEH866/g5lkD+QznXwP5xiCw2Qokb/8GyE8D
AwsQvxrEBzuVAczvQvDB5s98g+I+hv1v4OaZgviSb+H2m4DU26Hxs9H4M+B8
SZD+huh3KHyGn2j8hveo+mU/oOq//xHFPQ0LP6OGT/JXVP+qfkcNj+c/UMKr
IfsPTP0zGxBf9x9MvTFY/v1/ePiAw3sj4yIUfjHzIph+sP2mrEh8AA3b55k=

        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQzcDQsJNj0WtHYxDYbOoA5FdzAfmzZoKACYhvywPj
S4Ll//Oiyh/kR5VvFkQ1z1UYyE8DAwsQn10Urt4KxD8pBuSfPQMEPjYgfrcE
XL0tiO8rBbfPDshnmC8N128PkueXQZUvlIHbD5bfLAvkg73K4ADiX5RF1W8l
h8rfJIein0FZHi4P1j9ZHtX8UEVUvrgyqnmz1eD2g9zXEKsBVw/2v7wWang8
1Ib7xxLEX6wL1w/mp+qjyqsbIskDAKhUqAk=
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQzcDQ8NJo0WtHMJPB0gHIX20C5KeBgQWIn2uGKq9v
gSr/0RKVv9kaVb2MDSo/ApXPMMcGRT/DSTj/mTmI/w3EP3sGCHxA/AZpWxj/
jBmIX2qLKn8PjW9uj+q+nw5A/qyZIAB2z24nGF/SCsSvdQHyjUFgM5gf5wrj
G1uD+PZuqPxP7nD/2ID4jB5w+8H8w56o/FZvVL67Lyq/NwjVPf4hqO4XDEMJ
n4bL4aj8qZFI/gcA5wK3UQ==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQIBm76LWjMQhsNnUA8m/HAfmzZgKBJJg/NwHG
n2kC4scnofIVU4B8sFEMYP7jVFT9S9Nh5hubgfjpmUB+Ggg8MwfxNbPh+i1B
/Nc5cPPB/LV5cPOsQPz8AlR5wyK4+8Hyn4tR+VtLUfWXl6Pyf1eh2r+3Bsg/
ewYEwO6tr0P1n2MD3P1GID5zE4yfZgziH21GlW9vhZtn6AAAUeSQgQ==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzcDQ4Nm+6LWjMQhsNnAA8rk7Uflnu2B8Y30Qv78H
yD97BgR0QPzAPlS+8ARU/UIT4fKGIP5VON/HCMSfPhnITwMDYxA/ciqQP2sm
EEiagvjS01H5d2fAzTMD8efPgptnDuInzoGZ9wzMV54H5IO9ymAJ4j+dDzNv
Jpi/fCEqX3spqvq3y+D+B9u3fgVc3gTEL1wFtw/sH+M1qP79uhauH8zfvh6J
DwCWnp3o
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzcDQULlx0WtHYxDYbOAA5FtvhvGN9UH8v1uA/Fkz
gUASLL9/GwqfgWkHinoGux2o6htR+QzRO1Htc94F5J89AwQ+RiA+6x64elMQ
//heID8NBJ6Zg/id+4F8sNMZLEF874Nw9VYgPu9hmHlnrEH880fg+m1A/InH
UPnBJ+D2g/mip2DyabYg/vXTMPNn2oH4shdR7Gfouwi3zwwkvwSVz/ACTT79
Ejy8wPz7aPyFV1D5ydfg9puA+Ko34PabOAAAJni4ww==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGDQB2IQzcDQsPL2oteOZ88AgY+RA5CffRfITwOBZ2C+7n1U
/vsHqOo3PoLxzxiC+MVPUOVNnwH5YKsYTED878+BfGMwMAPxd76Em28O4le/
BvJnzQQBSxDf9i1M/WYrEP//O7h91iD+wQ+o/OZPcPNsQHzXL3D3gPns31D5
J7+jqu/+iWqe72+YfJoFiM//F9X9F//B3WcK4k9mWIzi31CmxTD/gPniLKj8
m6yLUcJ3NjsqP5ZzMUr4PuRZDLPPAMRfzIdqX6rAYhT3qAstRgnfl8KLUcJ3
tehilPDNFV+M4n99ycUo4fVRajFKeG2WgdtvB+KXyqHyzRXg9oH5PxVh+tNs
Qfzdyqjm16qius9eHS4Pdj+jJqr/DmvB1EuC+a06qOHrrockDwBxTjwN
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQzcDQwGmw+LXjrJlAIGnqAOSfNgTyjUFgM5jfa4zK
9zeF8Y3NQPwcM1S+oDmQf/YMCID5vuYo8gxnzVHMYzCzQDW/EpXPsBfEBzuV
AWzeZTT1upao9rdboto/1QrG9zEH8cNt4OZZgviSdnD91iD+bXu4ehsQf64j
XL0diB/vDAuvmWC+ois8/OxB/MduqPylHnC+A4if7gV3P1j+tS+q+Wv9Ue3P
D4SrtwLxDYPh9oPd/zkEyE8DAwsQf2sYkv8AXV6qGA==
        "]], 
       LineBox[{{3.70952238*^9, 21.7}, {3.70952598*^9, 21.7}, {3.70952958*^9, 
        21.7}, {3.70953318*^9, 22.2}, {3.70953678*^9, 22.2}, {3.70954038*^9, 
        23.3}, {3.70954236*^9, 24.4}, {3.70954284*^9, 24.4}, {3.70954398*^9, 
        24.4}, {3.70954758*^9, 26.1}, {3.70955118*^9, 25.}, {3.70955478*^9, 
        27.2}, {3.70955838*^9, 28.3}, {3.70956198*^9, 29.4}, {3.70958358*^9, 
        31.}, {3.70958718*^9, 28.}, {3.70959078*^9, 27.}, {3.70959798*^9, 
        26.}}], 
       LineBox[{{3.70962318*^9, 23.}, {3.70962678*^9, 22.8}, {3.70963038*^9, 
        24.4}, {3.70963398*^9, 26.7}, {3.70963758*^9, 28.3}, {3.70964118*^9, 
        30.}, {3.70964478*^9, 31.1}, {3.70964838*^9, 32.2}, {3.70965198*^9, 
        32.2}, {3.70965558*^9, 33.3}, {3.70965918*^9, 32.2}, {3.70966158*^9, 
        31.1}, {3.70967358*^9, 28.3}, {3.70967718*^9, 26.1}, {3.70968078*^9, 
        26.1}, {3.70968438*^9, 26.7}, {3.70968798*^9, 27.2}}], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDQMHPd4teOxiCw2coByI/eAOTPmgkEkmC+7CZU
/v3NqPyFW2H8mZYgfvJ2IP/sGSDwMQfxVXcC+WlgYAHiP98F128K4q/cA7cf
zP+8F8Y3NgPxs/fBzDsD4jOs249qn+4BVP77g3D11iD+xsMw+5/ZgPjFR4F8
sNcZ7EB80+Nw99iD+N9PwM0Dy+88hSpffQbuH1sQ3/Ycqvn/z8PdD7b/4EXU
8G2+jBp+rleR+AA7XK7Y
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQzcDQcPLG4teOaWBg4QDkd98C8s+eAQIfcxD/yW1U
vu8dFPUM+1D5Dfz3UPkX76PyJz9E5Yc+BvLBTmGwBJm3/AmQP2smCID4DeJP
Ufk3nwH5xiCw2QqkXvY5Kn8qKr9h9gu4+21A/NhXcPttQXz5N3D77UD8h29h
9knag/iL36PyUz+i8tU/o/JXf4OZ/wxkH8OF7zD3GFuD5HN/oLrv6Q+4fjDf
/ieqf1f8RFWv/wtFnkHiN9x8M5D8RzT+5r9w/aYgful/uH4TBwAjFtWS
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDQ8JNpyWvHNDAwdgDyd7MA+bNmgoAJiF/LBuSD
lTKA+fYcqHxGLlT9h7lR9bfyAvnGILDZFMhn2IXGj+eD8Y3NQOrd+VH5nIIw
85+Zg/inheD2WYD4vSJw91iC+P5iqHxBCbh9ViD7QiRR5S9Lwt0L5k+VBvLP
ngEBaxA/XBZFf8NtBVT75yrB1PuA3RevguK/BkU11PB4rI4aXks14fqNHAAI
6ImH
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzcDQoKm75LXj2TMgYOgA5L/WA/KNwQDMX2sA4282
APHzjYD8WTOBQBLMNzRB5X82RdW/1RzITwMDYxC/3BJunimIb2kNt98MxP9t
A1dvAeLvtYOZP9MSxK93gNtnBeI7OqHymV3g9luD+EddUfnt7nD7wHxub1T9
Z31g8j7mIH6/H9x+ExA/MADVP8JBMP4zIxD/ajBcP5g/PRQpfAFfn5eP
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDQEBm+5LWjMRgYOgD50pGo/LtRMP5mAxB/fgyq
fGIcKl85Acg/ewYIfIxA/KeJQP6smUAgaQriL0+Gy5uD+JmpcHkrEF87HW6e
NYj/NgPITwOBZzYg/vosVH5hDpAP9gqDHYhvnAczbyaY/zUfbr49iL+9EFX9
3zJU+/ZXwP0Ldk9jFar7nGtQ+adqYP45YwbkM/DVws0D8RsSUPkMS9DkWeuQ
+ABpl5NB
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQzcDQ0Nm45LXj2TMgYOYA5DM0A/nGYADme6PxeVtR
+S1tqPzzqHwGlnZU8/ej8Sd2oPAZlneiygd3wfg+5iC+aA8Kn2FKL6r8dTT+
zH4gPw0MLED86IlAPtjrDJYg/kcQf9ZMEADxGUwnofJvTYLpfwY2j28yXD/Y
PNnJKOYzFExG0d8wZQosPDZbgeRPToHrtwHJ34fLG1uD5FdNhemXBKlvWDgN
Vf/26fDwAalvSJ6BKr9tBqr7j6LyG27PQPE/g8BMVPX8s+DyYPtVZ6G65zsa
//lsFPc36C5EcU/D+0Wo4b9xCWr8FC9DTT+mK+D6TR0APcEKcg==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQzcDQsHP1kteOYCaDiQOQX70WyE8DA2MQ33Y9Kv//
Bhj/mRGIf3ATKr95C6p6121A/qyZQCBpCuI3ovHZdwD5Z8+AgBmIf3InjO9j
DuJ370blb98D0z/TEsRn2gs3zwrE90Xj8+8H8o1BYDOYf/EAjG9sDeJPPgS3
H8wPPYIqL34MlX/zOKp5s0/Cww/sntjT8PAAu1f+LFw/2H8Pz6H6f/EF1PBP
vYQUfgCRrKlt
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzcDQ8PLqkteOZ88AgY+RA5C/+jqMf8YQxM+9CeQb
gwGYr38bxt9sAOJ/vAPkz5oJBJIgPgPHXRR+Az8af/M9VP2lD1DtM38E5KeB
wDOwe34+humfaQLi734Kd48ZiF/7HK4fzLd/CddvDuIzvobx0yxA/MNvgHyw
1xksQfzWd3DzwXz3D6jypz+jmtf7Fe5+UxDf/zvcfGMQX/Ananhe/oUqP/UP
kv8A1m+mmw==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQzcDQIMmw9LWjMRgYOgD5txlR+XOZUfnxrDD+ZgMQ
X5Edlf+YA8g/ewYIfIxA/KVcQD7YKgYTED+dB67eFMTX5APy08DAAsR/zQ/k
z5oJApYg/lpBuHorED9fGGb+GWsQ31AUVf6zGKr8VglUfrkUKt9SBu4/MH+v
PMw9z8xB/HpFuLwZiO+oDHOfJNj9zKpw94L9d1QNyb8Ad7WA4A==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQzcDQ4Km19LVjGgg8M3IA8rl1gPyzZ4DAB8w/q4vK
79dH5QcaouoXNkblXzUB8mfNBAJJUxB/uhlc3hzEj7SAyc+0BPGlrYB8YzCw
BvHvWqPy59vC9duA+In2MPecAcsrO8LdB5Z/6oTKX+6Cqj7TDZWv7QGzb7MV
iP/WE8gHBxUD2H3rveHyYP8U+sLlTUB8Y3+4f8D8rwGo8tuDkOQB0eycMg==

        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzcDQUBmy9LXjrJlAIGnqAORbh8H4M01A/L/hQD5Y
KQOYvz8Sld8YDeSngcAzIxDfORbGTzMG8VnjgXxjENgMNv94AlzeAsTvTILb
Zwnie6eg8nnT4PqtQPzz6TC+sTWIPzETbr8NiB+cjSr/IxvVPtFcVPPr0PjX
8+DhAbZvZgGq/dFFqPKyJUD+2TNA4GMO4t8vRQ2/heWo/ORK1PBTrUYJPwa+
Gph5ZwxB8oFo/LoauP8MHQAlV7Bd
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQzcDQYFS79LXj2TMgYOgAFPBE5TecAPGNwQAsL12H
wm9YicpneIsmr1iPyo9F4zM1oOo3R+U3ZKPJr0fjmzXC+JsNQOor0fjLGlHV
30aTl2sC8sFBwQC2T7cJ1X6dZlT+EjT+e1Q+w5wWIH/WTCCQBJt/vwXFPoba
VlT5jWj8t2j85jZU/StR+Q0p7XD3G4H4xe2o8WfaCTfPFMT/3gV3rxmIv7MH
yE8DAwsQv7oPbr4ViG87Aa7eGsT/PxFmvo8NiJ8xCZXfOhmVfxDOPwPW3zwV
le86HdV89pmo8idnofK756C6z3cezP3PzEF8/gVwebB/Ly6E+X+mCYg/eTEq
P3QpXD84/MSXw8PTxAEAgocsew==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQzcDQcHPF0teOaWBg7ADkz14F5J89AwQ+RiB+7BpU
vvw6mPpnYP7D9aj8xRtRzUvdDOQbg8BmUxBffStc3gLEf7kNyJ81EwgkrUD8
1Ttg6o2tQfzcXXD7bUB8/T1w+8D8j3tR+Zv3w9SfAeln6D0Atx9s/jsQH+x1
BksQv/QgzP6ZJiD++YNw/WYg/ls438ccZF7uIVT3mx9GNa/2BNw9IPUN9qdQ
9DfYnUaVZzyDwmdwPQP3P9j+6WdQwo/hFSq/weYsPPzA8mvPwt0Dlj+MKt/Q
eh6V73EByf8A/prelg==
        "]], 
       LineBox[CompressedData["
1:eJxV0k8ow2EYB/A3RNLkb1qTMMNYY37Y/EnERSlxkZMoE5flJCdzkoOcJEpO
Xic5SE5y2sl2mn9ZS/4tWov8TWvyPm+9b75vrfXpeX/P87zv+1RM+IYn0xhj
feJH/4z5s8M78Z5QUKyBpm7h0zNhQy4XuepCeHNDLHMjeeVCxxuEmelSWKZi
TooPXql8wXpy/rX6fqOOHI6g16J6v4M8cgP5/eZbqM+W76A/FrjT9WW/EYz7
q+9x/wzav/WAHosJe2nF5H1UPOH93D9jfCeu7DXIUwmV76CFbH/R/UvHX/X5
m8l7b/r8sr7vA+/T9aX328nv37peLfnwB+NzSYy3pdDJX+0a8jHj6vzV5IU0
dE+Gto2cnsmhXiCLw3wsZXO4j/4c/X0rOcek4jE3OZSr93vIq3nooQJ0YRH6
vBi9XsLVe8n8o2asZ7GoeFD2Ey3FfrfLOLzHeDmH+bBW4nkfrRzmddeG8eka
dL1d7T+QTtRh/n0HetaJNhqxv08X+sjgMK/zLRzmtcON5015uJo3OY8n7Rzm
dbET76u36997/gE+fqoc
        "]]}}, {}, {}, {{}, {}}, {{}, {}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
    AxesLabel -> {None, None}, AxesOrigin -> {3.70528554*^9, 0}, 
    DisplayFunction -> Identity, Frame -> {{True, True}, {True, True}}, 
    FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> 
    FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, {{
       Automatic, Automatic}, {{{3.7025856*^9, 
          FormBox["\"May\"", TraditionalForm], {0.0125, 0.}}, {3.705264*^9, 
          FormBox["\"Jun\"", TraditionalForm], {0.0125, 0.}}, {3.707856*^9, 
          FormBox["\"Jul\"", TraditionalForm], {0.0125, 0.}}, {3.7105344*^9, 
          FormBox["\"Aug\"", TraditionalForm], {0.0125, 0.}}, {3.7132128*^9, 
          FormBox["\"Sep\"", TraditionalForm], {0.0125, 0.}}, {3.7064736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.0075, 
          0.}}, {3.7090656*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.0075, 
          0.}}}, {{3.7025856*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.0125, 
          0.}}, {3.705264*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.0125, 
          0.}}, {3.707856*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.0125, 
          0.}}, {3.7105344*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.0125, 
          0.}}, {3.7132128*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.0125, 
          0.}}, {3.7064736*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.0075, 
          0.}}, {3.7090656*^9, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.0075, 
          0.}}}}}], GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    ImageSize -> {360.328125, Automatic}, 
    Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, 
    PlotRange -> {{3.70528554*^9, 3.71103798*^9}, {0, 35.}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> {{}, Automatic}], 
   RowBox[{
     GraphicsBox[{{}, {{}, {}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
bdhY8oep2Lgs5X2LyV+/wvby6M/ZRMZTjPxVr8l/6mtDhXMlxJ8/pPwm4svJ
1lTGs554qNNU7JOIh0FNZT5iE88rm8r6zcj6ytxMxlOfeK7VTPJlFuK5fzNp
vyT5bJnYNzVkPZ6W+r51rLfqv0v7J4nnPmEm/v1Lfg/vR8TzCeFpDvrf/y75
ivVl9Wwu5S+SHxY2F30j0H+0ucTTVPSHmst4m6E/TQvRO4X1Nq+F+Jf1rh1u
IfXJ5xGvW0g+8hAfKf+Q8XEe8pf7Q+zNiYcXYea8YyVrKf21IZ7LtJT5K8/6
69hS1tsv/Pm0peglf9qJTYl/zmfBUqb0X4x4bm9Ke4VZf35T/PEcfyZsJf4m
H4aKt5LxviAe2rSS8uQL75SwfTn+3hnmqPizaGtpLzH+NMOcA/0TW8v6YT+z
t7eWeGmE/rvw/877nHdbtJH1wvnUP66N5OsF3N+2tBF9uxWHbok98h/2k5ht
RV9B5n9TW2kvFnpvtBU96DOitZP206A3n3Bkd+Z/QzvRt5v5vxou/4j41dpL
PjxNPs7dXuKR+XMatBd//MSfl9pLexOIh5/CVSYRDzk6SHyvJR7qdhD7TPLb
kA6ij/OI/b2DzDf5KJi1o+TDjcRDnY4y3vPEw8COEj+cn8wVYd6j8kkoUyfx
b6wJyp81O8l8aYq9/cTe/Av5ze4Ujh/y26lO4XhU5Y1qncU/uRT7eoe5lGJ7
cWfZfyooDh7vLP4pp1h731n8WVyx39dF1k9+xc4C4TFxFIeOCDfPg/63XURf
CvSn7ir++cn+Mber9PeU8/mhruKPR+TnV11l/Z4hP6foJnrwl210E/+eZP84
IPZpdznvPu8meg5w3kzaXdrbxHk9srvo2Yv/O4j90xP86ekh82so/W7JHuKv
soo97XqIXsZnTJPy11awXyTwiZ7P7BfFfaJ3FXpb+8Sf29A72Sf18ad/R7j8
W2XXi/SU9XSL+0XLnhKPv4iHCWHOqeoHtvUU/w5H/52e0l9/4qF5Lxl/cuJh
bC/pvyHxEOgl+c9LPNzqJf1TPiJGb7HrxMOo3rLeohEPG8VeF//o13v/Z3ze
qH1kvaVSbOXtI/pi4N8/hZv3xL9X+og/a6L/3z4yP3+gP1dfaQ89wfp9Zb6z
KjYv9pX5Kop//+kr8/kn+rP3E/tV9Hv7yXg2on9wPxmvg3+/9ZP66Scq/2bp
L/H5CP21+0v/AfQPCPNE9C/vL+0twr+ZBsh81MG/NQaIv1hPZt8B4g/iy79U
eAz3L+fkAGm/I/FRdaDEgwf/9hoo7bVE/6KBMt68xMexgTJfrVmP76S8loH1
1mOQxCP5Mzh/kORH7rPakUHh9onvN2H7dOI71WCpX5b1Nmew+Gss8X1wsPQ3
Hv0vw9yE9Vh2iLTfivywf4jonUp+eDZE/PEnepMMlfmjv2DpoRIfnBe1DkMl
3h5yfng8VPTVxZ+Jhkk+LYfeEsPETr7Q2w6T+biB3qlSfn4N/Bl/uMyn5Iti
w8Xfg4iHVsNlPU0jHiaFyw8lnv8Kl69NPBS2xB9tiYc/LOlvIPE8PsytiOet
wr5axPNtS/xdhvkfM0LsxJu7eYSsL9aL5+YI8V9K9EYfKe0fZr43jpT9mPwY
cW2krEfaN6OMEu6IvjyjxN8nWU/rR0n/N8gHl0dJe0Hi9Rds3H+D3pyjJZ5f
obfeaJnvL/jrh/CmW6z/bGOk/2esL+8Yye+H0DtojMzfffz1dYzoaaPWcyjz
WOlvsmK91lgZ/yXF3v5jJR6PK7aWhct3VOzRx0m87cd/1ceJ3mXMd59xkj+Y
P3uJcLIZ6D8xTvxPebPKeNG/AX/2HC/9P0f/wvFS/i3zfXS85JcQ/g5J/TMp
lL5A9wnir2Lkr3kTRL+B/sMTJB5yKzZeS/nmdRX7Uk6UeOqjOMKZKP6eqNh8
MVHmb4Fif7JJEr/zFDtlJom+Yfjz70nS/hT8+XSSzEcH9CaeLPWPobfUZBnP
VPS2nyz+Hq/YfiTlcw1SHEw4RdbXfMVaiSmy/jaiv80UWW/n0D9liuSvl8RD
vKnSfvRJyp9Fp4o9kWKvOVXay6LYmjhV9EYoDmwX+6fyio1C06R+RsW+FtOk
/nT0j5sm/mV8wS3TRH8k+m+Hy6fGv838Ej+F8e9ov8RDJfRv8kv/tKff8Ev8
TML/0aZLf8yHO2L6f/zt2SD2aSuJh6vTRf844kGbEd5/0J87zF78u26GrJ9a
+PfSjHB+Rv/PGRKPNdCfY2Y4/xIPwZlSfjfx8H2mrJ/N6M06S8Z/BL11Zsl8
uegdOEv6v4Y/vwj7+iv/a5lny/wfUxxRc7b496Ris99sWb+3FPvt2RJfjyYr
f2acI/7JPkX5s5rwrqqKrd5zpP8VigOL58h+ckWxe1w4cqtiX+W50t8nxbZP
eNNjxcEFc6X9q4q1o3NF7z3FEW/DfEOx022e9PdNcWjuPFmfWacq/Yfmyfrr
if5X82T+t6M/xXyJP/R6Zs+X8eqqvnFAuH0Dxb7nUv7+ZMV20gXCvxQHIxeI
/+JOU/58skD6z6TY8SyU8V1X5UMlF8p+/wC97RZKPOuqfODhQomPlordBItk
frMp9hRfJOOpqdhovUj83Vqxb/Iiac+r2tfiLZb8lFBxRJHFUp/xmS0XS/tl
FfsnhDmKYmfbYmnvI/4suET8P1DZrebCL6soDoxdIuOdpdgNLJH6oxV7boXt
QfzZdKmwiT9HhdkmHjYtlfUQG/3XxT6ttrKbUW3Rm4B4sGyJr70qnr1XbKmf
mfn/V+xjfip7INcy8U97ZTfWLhP/7CJ+Ly4T/54hfv9ZJvkiEr3Zl0t+qIy/
6y4P5xP8eX656BmOP78tD69f4iHLComfmGr+9NorRF8Uxd4BK8QfCYmHzytE
b0HiIdNK0VeV+K2xUuy5id++K8P5BP1Lxb7iPesrwyoZ72T8WXWV1J+l2N9r
lay/xay/RatkfbTG38ekfN2p+LfSamkPDvRYLeMZQX6Yv1r6N1l/R1bL+G6r
+TDehNlDfui6Rua3MfEwd43U96L/4Brx30j0v5TyVZhff/K1Uv8d+W3WWonH
Y8TH/rWSD9qg/9laab8P+pOsk/FXmWL8P7jANwo=
          "]]}, {
         RGBColor[0.880722, 0.611041, 0.142051], 
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
8V/Xhz4CO+d+ir0b8H/Ph5Kvm30J+f6MIXFPfWwlLyA2hmH35S3qexmbc+Jy
fdWxOV6JcmJzsP3X+fKvwnadkGwf+o6dNXXl+NaApcQ315L8A8uxE/05+Z1f
quanNmLPVxX/dllspF9GvH9lzreN7XRn5PjaWawtnki+n7AR4a3kY6ZdjgPd
xP4q2JybTex9j53LyaXfrFQrGD+sqsQDFbHTeif96fvbvrdYXxxT8rOTryS/
hnXItxw2NhXifHfDzq6nEg+bq8bf5npykqzi/KwfTb8a2G73RKx3xs6zWLI/
7yzltmfp10Or/upHT6nV1G94Y67/DticlIl+nY61JA+Zv/ar8TVG0a9PsBF/
CP05dQ3bt61Of+7B+t0y9OdDbHeuTr5x1zK+Qg+un0nYWtCYeu5U8SPMF577
2F7ejfMfax2/L8Jr6l0QG08/cv63q7gzn/N/F5uxd9Gv0dfz+6p3Z77Kh+1v
VyXuhGM9+mv64RZ2XoaLrSgb2D7rKRkfyIP1tcwnbmPsZD0mv98zaoOaf9dQ
z4gbyffzGHEwJ9a+LmK+bajcLJmcn7Dh2HyXRmyux/rXVNwPsm1if203yHyv
18O6x+R+PBQ77VuIrTUqfqkk9+NL2ErWT+JG7c3U49wt2b9vELbKRJG4vRKb
OUPi4AWsbf8q+9O+K08Iyv3f3z9Afp16ynqHswzbbaZKPHRO2Xgi1r9gLfV+
Ge8u2cLxHjwRe85gJ39H1k8+YjdVSdZ/0mzl910uLOstdmWs9dkjDjuJnVrf
ZLz5TsWLVpe4P+U28jleXOxUwO691KyfdMd6rJus77zB5pVorKcl2/5X3C2L
7dqJeT7ris0oOcXGHKx1asL6TuIduN43ns8M7LSKK89zYZ2wOyCa2JyJzWqz
eT47iI3p83k+K7mT8QlWs77WHltlf5D/NGzc3Cn1COzbqe7/88n/sdp+VT+x
r80ujqdVYn1qinId1vOCu7HTIBf5P1Txfi+pf5zd7P/lYNbTdmD7wT/k62Jn
enL5fd6Ye4hHD2f9sgA2W/YWe7Yp//uM5907yn1es74abS/7G5qa9Z+82Kw6
gOfhplh7NEds/qv8fDDrU5H3Ua99DcVObvy/9a9QI+zM+SnH00cqT5zP+lqE
/fzeuUN4Xs+BtcxjyL+BcrAL+VvKm/uS/zpspuP3aNkOEN+xmn6oe0DNN0Xp
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
0ti5a5JvR2xd+k39nmKj4WaJ6wlSs786IfItgQ07Gfm2w3ryuOKAH1vp+H1G
vDQ4xT9iX1Fsx8gp4+3W2Gmqk/9kNf5+fLG2G5tFyov9hdKq+89CsWMqN7ws
Dk3AVozIlST/HdgcfEri3nsqPvgN9Wym83suJpLxnnHYWquLja3K5+qLfbfV
+IZRxXbUdPRnxLGyP3MzNrsc4fzfxEabyOQbKT31Wh+dfHNhY2wL6rkBmwu2
Us9r2O7Zk3y1DOSzweb858B2/JTkW1/Fa6YXBy+r+Ler1PM31qfcFodlzUj9
uq0i/zrYiFyJeg/G7rjFYv2HijfbTT0zZWJ/i/ORfy1svC9A/w7AbqrhYnc5
ts+Xph/SZ+b3njgvtqtjPfprcbAvdj+fpZ+XYi1ODvI/q+Lp5lDfKln4PTFG
U99e2JwzmfwXY7dse/I/peJV2pL/e2zXzEh9e2Rlf3de0c8LsBXtJPkfx1rs
PeT/FpvbcTB5NuJRx3G9zcXmuzL0xxFslwtnfnilxttcP6Ek2TneHOJ6Gaz9
iUl9DykXrkt9n2M78U6xJ1EOtn+rye8xSmHbO55+eIod72bqGT8n8R2j6Ifi
WCtv0Q9tletXpt5T1fi3w6hn3FzUd55BPYtgLcykn1thc09f+nlSrr/259mF
rX8rMj8UzE0/1G7A/NACa05v8p+A7WJe8t+uxreoQP53lUfdp57hedT9vDP1
HIu1M2o+3oLtzNfF1i1sRnxAvaOEUa/VE+iHUdjIPoR+2KR8oRH9cAObtVfQ
DxHzEo8xln7OpbxpE+f/qnLyJvTvH+y+yU//Zs9HvitKUu96+f6aL91L+f7q
R8+vfGq+akC+WfLjpY3JtzbWq9Ug30HYrP+O54XvavzNn9yPMxbg97+kH/01
C6jz84f7cf8Cf9+Pl2F30kyeF9IVpL6Vy3F/roaNvtx/3T4qXnAf92cb65Gr
kP8ZbO7/yvNC5UJ//T6tFza9E7nfLcJaqX5cfyexE3c6+b/D1kvuX975hRnf
hf6yjmHHmU//vsF2qY/UO1kRth+fmvvDHGzMP0T/HsbmkH3070us7Y8g47Uk
RfGSX/SvUVTtv5fEnYNYrxelstTzmfLwwmI9YTG2v3Zb7C2JTeOh2GqP7TQV
q0g9n6jx6xaIDU9x8vW9EvuKYcdXTGy3we7xXOLgFGzvTSo245QgH3eo2F8Y
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
77DxeTfPuyn3Ee/ZkHwrYqv5U+ZjH7YXFOf5cr7ytV0S9yTfz/6uHqAfymH3
TGLuz12xlmY79+c52IxYUPYXPIydag/oB+MA4xfzfOrvdEDNP1nJf+YB1S8X
ZfvQQTW+hIf8n6v4icd8X2l/kPwq83zsTsPWhzT0w35sDqJfjCfYfRuS8T7P
ITzihVibip2cqanvHqxlPSlx8yHWmyUk/zgO47PmIv/CWP9aiX7Yie0qrekH
11H3Y85nIOZhjp99Cv1QAFvX1pF/C+x8uUB/3MF2t6K8f0Q7wvZXeD/T8mHr
fkPeP8KxuZb3F3OMijcweX+LfJT9DxnO+1serP8bn/e3xthqwf6skSp+rDzv
yxuxmSc370c5j7G/yLw/+xpgM2o478sWNrrXIv91yrt5X9KuKreozvtn3ePs
b0xp3j+HYHNLJfJfrfyF8fol5aiTyf8n1uL15P1u4An8sTjvdyuxebIc+V/A
VoLU5P9Nja9Zm/wznMTPKlDfZdjswu81z51U95895P9ZuWdG3vernmL73gN5
nz+NrUq1WV//cErdL1nPdlOf5nx3PsF6amWsJ2X92+ipHJf1kmAIO7NYL9dS
nqGeyc+yflIBm71Xsx7RHVsDbdZP5ilbXVhfT3aW7RezXuEti91yPci/C9aa
1yD/2cqBpOTvYGdgKdbXS5/j+Lv53md3xG461ne0g8rxDpDvM2yv4vc57c6z
ffmu1NOP3akryO8x1nuwnm/F+4fxib9zvqco50pI/XZjI8l7zvcDrOeOR36x
L1CPjFfo10LYCOzgfO/AWpfznO97WE+ZlXxjBDle19Hkmz+o5odO1Lc5Nnp+
oT+jXmT8U+rlyYuNtXXJtym2Wg+inqNVvFUm6hf5EvH41ahfbuWjV7ifNcLm
zeXMXyOwNm8B89cGbE9fxvyV4zL1HcR8ZNXHTqlnzF/DsDmd713uWhX/yfdj
zxW1faMWXD91rpBvlM3UczC21r/g+l+Nnbo47KIanyU//fpDxVvnoX4rrrL9
cL4ne//B9v7PzFdfsTn8MPNV+mvEI03lel+qvHUZ5/8sNnf1It9Pyh2qkW/a
64zfs5x8qyoPnsP5P4WdoSuYr94rVzzCfJXqBuNvn2W+qnRD9edB5qse2OjG
eqX7Vo0ff4h6prjJ+Tr1kvzLY7N4iPy7Yb0Y63n2XDW+6ATqmfRfxh9bQP+W
wdrKo+TfGVs9ydeZpeITNpD/IWwXDVLfUrf4fbX4nhjogI33hbn+p2MzPBb9
fECNH06/G0+x3oLrL9j2Nsdr9I76+rEbnpJ+3qvsyUA/PMLmw4jMX3HvkF/J
k9R3MrZODaO+u5THYOs+NtvvpT9i3SX/u8Tdgtg51Jz6bsd2Xx/1vavitpf8
o9/j9yxqTP75sRPOeqlzC9sb6cdQFBcX4nuyHobN/ZwvbxNsPP7OfDYKOzP5
fuaJdJ96ZbjNenourCc8z/pvQ+w+5fuiPRyb54/z/W29Gl/4Auv92R9wvDdJ
WO+vhy33Luv9Qx/8tf/QGjU+5jHWry9j9+Mm1qdrP8SB13zfHISdLZ/IfxXW
Vnwm/yC2c58l/+8P1f09Md/XBjxif4/q8PcPy7H5ui5//3Aea1tbkv8X5U8d
xU66x/j3Cr6fnHms8o3G95+PKh75O3+fkeYJ+d5uyverKthuqb7/nMT6+3R8
/3mHzV7d+P6T6ilOvpHvPxWxdu8I39982Jm8je9rb7DRKzbfr5I/43gzc/H9
qpxykiRiqyvWR+4i/znYXD+Q74FJnrO/pFv5fmU8V7+H71N2J+UHAfKfid0F
i8j/kIq3bMP3wZIv8NQWfL9q/0LNV6XIfxr+70WB75n7sXWyNd8zn2D72gq+
r7V5qa7nu9R3KjYWROD74B5s5/tD/g9VvJ7O98BJr8gn7yy+B+7E5o3ufA90
sVGmp9iJ+Zr95WgmDhVQjtSBem7Dbsqt4sAd5RjdxG60N+xvRA2xJx/Wtz+l
3uHY7VKE75n/YutZCr5nRnnL+MdVyD8PdjbfJf/G2Ip9lfxHqvi8H/RDxBD5
vqreUOqZE7vNM4utBtgYlUwcsNT4p0PJfx3Wry4W+7K9I16DuF0XW79akv8Q
7DZuRP5rsH6oIflfws7g9tTX+57xWbdR34HY/LCF/Fdi++pv+vkCNmbEJf9v
WF+WQ+zp/wEn6CU2lmEj4gmx75xyt1Ni+7MaH+O0OKh/VMf7JDaXYCtLpEZS
39Mqfv6WxJ0P2LiXWeKh1J/4felzi/XK2KhQUuyGPqnz31XsSfmZ3+u0Jd8K
n1U/FSDf7tiY1l6svcHW8rLisGRf2L5kTvItq9z3gdjfBdtDf5LvbKx3jinH
9yb+yvHmRRdbpbH18yb90BHrM6KQ/ww1vkoC8j+IzZgu9SzxjXyTPaGe7bB7
sIKM16Yp34knDtuH7W8Zyf+xite9LA61/s78MGuDWJ/y/a+4dzd2KvWmHx5g
6+4S8o/9g/xfTqG+E/+2bwd2Sjch/3vYanKN/GP85PgbHlL/AthJfYn6blXu
PJ/63v751/5CUX9xvD8e8s+LneFH6eemyne4/tyb2G0zh36O/Jt69i4u9TJy
Y+ttE7GvEdbqnRHbI7Dz9j71jfCH7SvdEps5/qj7W8nGkn/9P6p+rcTOMOXB
1cWhtdguMUFsZdVeSn6/7ooDdbA1dZPYHYy1GgfFntVYz3xRbFzE5p+H4mCt
CGI7zk2xNhAbH+I0kfxXYCtvF7H5D9ZXnxX7v2KtUZqmUt9+Edn+TAKxdyl2
TnQRW2exm76EOPBJxW8uEbtpI7H/mWvFvsVYe54zXOp7CjuV30g8+B4bHcpJ
PKxSZPLNXFrsHFfuXU/Gh95ifXtR8k0Rhf0fGke+5bHxuyv5dlPO7xV7XmM7
9Vb5/UbSqPyeLSnItwzWD8+WuN1ZxQMjxMFZ2DoRj3omisb+pm+nH0phd1YT
+qEDtmr/pB+mq7j3sGyvH8Ba50niQPHo1Of9JbHbFrv2XrHHj43288W+R9H/
Ol9a6xjk/zqOOGyycsc95LsL29UKi51YMdm+9xfJzzsBm3lK0K/bsXYWB+6q
eOs59Gv0WOw/5Qzyyx/rr/zsLSo+5z39egub03JJXIsam/1HT0S/hmHrenMZ
bzbBpplTrEeKQ7zZJfLNhZ0rkWV7q2Gcv85vYLhyy6ucby0u+W28Tf2yY/fJ
S9mfXQ9bsVvTn0NVvG5J6UdtLdbHXZa4P0u8v/rbqY0NPbc4NAi7vduK9VXY
ajhP7A1iM9BU7Nb0EH8+UewZgN2ayZpJ/sux/vCE2Hdeja+fpbnk/wVruWuI
TTs+9fk0UOw/g90qW8TOR2z+Y4tDaRIw/okrthYpT9zZQup5Uvn+SLH7Tnnq
DhnvSZWQ48dLLnGjonLnpRIPHsPWvZNi7S12mtwQhyVPhKuvIv9y2Kickfy7
Yu1+HrH+KpHqF6/YmyQxv6dGQOpjGdjen0kc6ISt5RvE7kzsZOxPPRMmYf/Z
zortktjZX5X826t4tGXkPx0bF9uR/35sZ45CfYslJZ/U9alvG2y3KEj+U1W8
bmc5nneP8qUl5P8Qu61biz2tknH+r6eT7Y1Jyp3Xk/9ObHWzyd9NpubH+2Jz
fHK8thn13IbtO7HI9w62rr2X8aFoKRjvy0W++bDVrqY4EMBuhtJi919sTEtN
P0RJSfxOMfLNg+2licW+xtj5cFCOp91QftmFekZMxfjzZemHnFjPs578G2Ct
0kvyt5RHeqT/vH+wmXup2MqWmnzmp6Of62K7/QbyH4LN5tep9xrs1D3E9ZU5
Db8vfoB+8GIn1h/yH4TtS/+Iw1ZiK8pv6n8Bu5um0A810uLfpahvf+x0zEA/
L8P27xxcj+fU+AJcn4HP2Mx5lfr20alP4Zzy+3xLsHMro9g+jd1SOPgBG8f7
iLU06Rhfdr/YOYHNijHEoRDWFi0S6ynTs78Nk6l3Bazvy8v8cBRr68uIPW+U
06RhfkiWgf2/ykK+ZbHd4Bv17qLiF8/TDy+xvmse/ZA4I+4ygn4oja0Xt+iH
jsoZzlDvGdhI3ot6JsiET7SmniWw03sy/dAO6/EH0c/T1PjFi6n3PjU+K/NP
sGhm8o/P+dXaYGNUJ/KfouK76DdzN7bqjiX/B8pNGtMPLbOwfcWLzA8Tsd4j
OvnvyPLX8QP3sNu4ItfXuKzq/kf/2Fux3jIZ+d7GRvrG9G+0bNT70SGex/Ji
a/UoiTubVXxCEup5E9sDEpJv5Oyc35XML97c2CpxnHwbZf+rnzzXsd57Cf0Q
IQf5TKhJP+TA7rQfzGf1VfzRF3FwGHa6X+D6+o2tNm3F/qw5iZ+aQP51lN2e
zG+DsXuvulhfjc0qsbhfZMqFv6v7cy2sxenF8+RA5eVLxcYKbEfbwvPkP2r7
WKd5PquRm+OvPkt9+2EjdnWJm0uxdX4XzxdnsVZuq9j5hN30j3je7Z2H/UXl
ecNarNwqijhwCusreB533+dR/ZaM/FOHkW8iH88/C7A15ry87wSPY2PbB94/
Q2HqemjF81qKvIz/kJX8y2NnX2me14+oePK0PK+/xtqxZzy/Jc3H+BJReF4v
g923E3l+64ztApV5XkuUn+3bRJLxdqn/eSjP5x2w0S4h9Z6RX/V/f+oZvwD7
T7WfehbH2vUv5NsWmzf+kK9feUw76r1XbT+rCvUsUpD9f9xBPVsrD69IP0zG
TpZh9MMubEXlfNj3sZFjDs/rZiGO1zYW9ZyArYrFeV/bjm17LM/vd7Ferak4
FL0w4yfzPmGNxU7uldRzC9YuHuf94tbfcU/UIuyveQOel8OwtuUL9d2EjQ3X
eX6/ic0WD+mHSEXZX2Lel8xcRdX97in5N8Ra3h28/1zD5sZ7Yq9WjPFVmtEP
2bG5IZz3zXpYD56k/kOxVXqF9LvvFzbK76W+WYozvvZknudrY+P9Zp7nB2Nn
7C+ux1VYS3WQ5/mMJaj3ZJ4fQzWxmXEQ88UA5ViNmJ+XY71TQZ7fzqt4glI8
T1QvSb7H0/I83xc7pwuQv638LRbvy2ewe+sD+X9U8Rvp6Y9epch36Uz6exHW
6/Wlv09i+1093kfeqXjiLbyPpCrN9iUvMl/Mx3brHsx3x1S8/C7eR95iY/sI
8i1nqOu7D/U8gs12M6jnK6zHaCQ2k5Th9wxOIvYbWNvO+5TTCdsTHN6PnmMn
23Tmt4RlOX6CqeRbErsbXtMP7bG1OR75TsfOmQb0g6cc+Q3PQT2LYatngH5u
q+IRH9PPU7GToC79vAfbqxbyPl+4PNvHfM37aSts33rC/DYJG3lLcD3uxE7d
ZFxfLSrw+4efl/G+8dgoXp73523KXV7x/nwHmzG6st4wpiLbz+/JekMA240v
sJ76L7bi1mU9NUol6lVKrWfnwfapzqyfbcTm3XOsn91Q46tlYv0sYmXybzGG
9b+c2EjCeqjdQMWr9WU98g+2ijdmvS9bFVyhJet9dZW/sh4bGoKNmcNYT/2J
tYysnwYyV2X/mbOwnurFruvn+8AgbNTay/eMlVirPJL1yAzVOF7EaqxH1sR6
10usr/dX9lQk/2Vq/Ns+5H8Om2P5XqBXq67unwmpZx+sX4vPeuoSbCV4zPeN
09hYdpjvAx+wtu4y3wMW1lDnuz/5nsCm7wr5vsP6OZP165Q12X+autRzHtYb
jaWeR7GZ5w/5vlG+2YB8k9XieA+GkW9Z7BQcz/k/jPVxg1j/fYntip1YP03s
5fgf+3H+S2N71iqeHzpis19k1nOeqfjsA3wPSFCb8xc+XuyUwNanKfRvO6zH
n07/TsPatav0Q7w67F97Qj8UxXqidqyftsHusP2sn05Rfr2F62031trsYf20
cF1+/7Hd4rCW2NVZHzInYrPnCa6/HWr8jbVc783rsb8Ik1g/G4edYGbuv1ux
tW0B99/bWC/Xn/tvtPrsv/tOrv/R9dX99yf3380qXmo989W/ygffM19FbsD4
KuHMV7mxc7A1zwcbsKUP5P57HbsdWW/0RmjI9o8Kcv/Ngd3FrLcG6mN930bm
ryvYbJmC57Pf2Hj3mefJrI0434tZnwvWafTX+dCGYK3/Our5AxvZRzOfZWrM
8U42ZL6the3Th/keMFD5YTT6eQXW0h7j+krfhP09PcD8UAObq1LTz/1UPLnL
97mlTdT98xTX41nl8/z/j2FVm+LcG/h+2Bubs7l+/YuxtW4+3+dOYft1Ar7P
vcdaWBq+f/YIJx4eYn5YgM0v18n/uIo/TsH1GMKOGZn8UzTjeLnLM1/Mxcbd
qcwXR7F26SXzxWtsd2jI94ykzTne5XFcj2Waq/vraL5vvcBu53bMx4lacLyb
cbn+SilP5fuV2wFrCV5zf3iq4oOSMz/EN8nfysf8UFz5Xk7eL9qZqn8b8/3F
j/Xf3H+cuC3J9wzfH0NFsF49SD+0xm6l/fTDZDX+9VXmt13Yicf87ynUCm8o
QT1NbDfsTv4TsHupEd+3tmOtGPNh8C42GnD/MJu1xuWH0A9jsVOE783OFmw9
5HtW6BY2PzQl/6ht2D5pN+q5CetnC5LvTWxNb0i+kdqST5Ee5JsLO8P5fqdt
wHaFrZz/a9g6e577m9aO47dZz/0tO3aHZKDe9bB9Jz39cBlbE9vQD7+wFrs9
/ZClPflv7MJ8XFt5TDW+dw7GWnhK+uF7+7/OZzBjB453fzH518Lu9izMxwOw
vnoo8/FybI3uy/yQriPjFz3neaw61juOZX7ui60mfC+zbGwXj8j8fAabg9sz
v1XpxPg+S5jfeimn28f8vEg5bBzz20nl0yOZn98rj+D7iN/XGZfn+dKZj83v
d5mfj2H7xRXm57fKqc4xPyfvwva773D/mKNcbg33jyPYXHmA/F+peMIJ5J+k
K87UlfwN5TEVuH8cUv5ekvvHc2x2iEn+CbvhrR7yL4nt2kXIv71ywX7U09Od
8XX6kG8xbF1ZTL5tsV2E51tjqhr/vD7Pu3F8qr5PuV8UUY41mnxbYbNKH96H
Jql4hTa8X+xUblOc952CPXCap7zPt1Ae8oT73Xjl4o+5323D9pisvA/dUfH2
Ad7nw3ty/GT7eL8Yo1zjFO8XAWy1/s16xC3lBFN534/SS93PjvP+MxKbvVew
HrERWyuOsB5x4+/x3oi9iS/6Tv45lWuy/uNZj+0+vK8ZV1U8N+9Tvj/Ksy/z
vpmtD36/Xxysq3z5Me9vl7B91qW+P5WP3uJ9OXNfxjvHed/0Kn8/TP0HYTP2
St7fviknfkp9M/Rjfxdj875cE1tj+X5m9Ffx3WnJf5nyq7fUN11/xs9nfSys
mvJGvueZfZS/dOR9eQnWD/L92zmNjWwu11vlAbhDOerbEztD+R4eWIi1NC15
/zwxQF3/i+jvd9gsdYLrrftA4jV4XgrOw8b5nswXx5RvsZ4W9gZr9TKTf7JB
5Fs5F/0xGxs3Z9Mfh7FWcQH98VK5VD/yLT2Y8Svmsz51EGv7J9HPz5RPjaaf
EwxhfHhV+rkE1owY1Lu9co4M1PMxtou9Y36IN/Sv/ENFsTGvE/m2wZa1mXyn
YCd3Bvoh9jB+bzL621MYG9NYnzBa/m3fxGHqfsb3VXsHdu4tYz2igMX+ip2n
n5tj55Lq53HYPUE/OluxkYL1j9Bttf0K+jswejjH6/yRfDdjPXiF6+/f4Wo+
v0S+kUf8lZ+2EdvGJvK7jt3oq8gvwkji9Vgv9ufAxojUrD+tw+bJlqw/XVHx
Zh1Zf/qtfGka69lZR7H/Qqx/u3WwFWrD+voPFV+ylPX1TKM5f7/5nqh5sb1r
Bt+3Bo7+a7zzFVubVrFeln4M3sv3TL0GNvrx/cHbD5tlU/F9YCnWHmGPPpbt
1/K9w6iq/Pkz3zt7j1XX7xm+by3G7lW+XwVPqfHz74nNSuM437GSmFLPHlgr
WVLsLMB20xri0HHlkZ3Fekht/6ulONBtPPtPN1bszh2v5reDYs9RbMw/LzZe
Y23MKbEv6QTyLX9FHOZgx/wgNl9MUPcvraXkm2gi+/vxmnxLYSfle7H3gPLG
72LrKbZm/STf+JNU/evL/tzik9T9sLjY0w5rmYnbj1Q8dyVxMO5ktn9cXawV
nazubyXEYa2xWyyf2JyM9auGOBRrCvntLyvWC2EjAdt7Tazv7yS2JijH6CkO
bMd2sKnYyD+V4w+cIPY1w3achuQ/FpsFx5P/Fqw3GED+t7HT00d9m/jJJ35/
sTNK+cgV8t/kV9fzXfK/qfzgBvlHmoa9Qeo7XHnWReq7AWuTP5D/tWmqf2+R
vzb9r+3t7FjPeoL6rlXxIw71vYw1dyr5/8JWhVnkn2UG4/sOoZ5BbBSdTT2/
Y6voCPLNOJPzt6sH+dbCxuy15DtAxcNWUM8vWNt0gXqmn8X+3rwk3+pY+8Dv
Mfsq96Cefhvrf9heTzubfCPkaiX1rIKNsVXFVq/Z6n5aQhxYpNw5h9g9qbaf
0l/sqzhH9fc3se1TLpasteQ/H+txI4i149hIl0Mc9lZ5bXex03Uu45+3Eofm
YHNmU7F+RDnvDvJ/he08v8k/yTzqdySujPfMwnb7nGLjEDYaZxb7nqv45qRi
O+F8dbys5F8Su1V1sf+JihdIT76eBcTzRSHfYlibnYB822L9XRNx4KGKD80u
duMsVNdDcfItslDdvxqRbytsV6pOvpPU+J2T5PdqsRZxfZVIKQ4riN2xhths
gY0PCcT+8Vgr8oX+3aZ8dSfXV77F2F+EeoZjPUdc+mEMdmZmox8Ci1U/phN7
bmFzVSH6ofES8vmZRRwcia3mj+nnTdismZX8byifeEg/R7TZfuEb5gcLOzGY
H7xXsXYjxPX3B1tDj3P9ZVvK/naq+WANNo7Gk+P5Lqn4wTTk+xNrvkzkm3kZ
x8vYjnrXVl4yhXpewFr+JWLnGzZObBaHMizn/O0/L9ZrYifebrG3v4pfoZ/d
z8rX31LPdCsYPzUy/VANuyNS0g99sJbwEPkvwWaVRdQzzUryOThKbFbG5sVN
5N8TWxf89PNCFT/WnH4+oeJP+4utCqvIL+YJ+rk7dka/oZ/nYetInDaS/zHl
kp3I/w3WwzdzfXVZTX75fzA/zPmf88v2YYex2S6N2HyJ9dH7uB4Tr+H3awGu
t5nY3L1K7D2InU9fyf/ZGnX8P+SfYC31XP6stfF/7q6xjg==
          "]]}}, {}, {}, {{}, {}}, {{}, {}}}, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {3.4082208*^9, 0}, 
      DisplayFunction -> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> 
      FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, {{
         Automatic, Automatic}, {{{3.3450624*^9, 
            FormBox["\"2006\"", TraditionalForm], {0.008333333333333333, 
            0.}}, {3.4081344*^9, 
            FormBox["\"2008\"", TraditionalForm], {0.008333333333333333, 
            0.}}, {3.4712928*^9, 
            FormBox["\"2010\"", TraditionalForm], {0.008333333333333333, 
            0.}}, {3.5343648*^9, 
            FormBox["\"2012\"", TraditionalForm], {0.008333333333333333, 
            0.}}, {3.5975232*^9, 
            FormBox["\"2014\"", TraditionalForm], {0.008333333333333333, 
            0.}}, {3.6605952*^9, 
            FormBox["\"2016\"", TraditionalForm], {0.008333333333333333, 
            0.}}, {3.7237536*^9, 
            FormBox["\"2018\"", TraditionalForm], {0.008333333333333333, 
            0.}}, {3.3450624*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.3765984*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4081344*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4397568*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4712928*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5028288*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5343648*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5659872*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5975232*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.6290592*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.6605952*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.6922176*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}}, {{3.3450624*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4081344*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4712928*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5343648*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5975232*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.6605952*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.7237536*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.3450624*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.3765984*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4081344*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4397568*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4712928*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5028288*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5343648*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5659872*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5975232*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.6290592*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.6605952*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.6922176*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}}}}], GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> All, 
      ImageSize -> {368.07421875, Automatic}, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{3.4082208*^9, 3.7125216*^9}, {0, 1004.280029296875}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {{}, Automatic}], " ", 
     GraphicsBox[{{}, {{}, {}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQQfPFOfOjYdYuCVvm3sCOQnFCx86rhwg6BDuo0Z
iM9w8O5Tx5fJofG/m81B/ILnks8czfUf+kQtsATxH/CGPXOsEVl3XWkOmB9g
MumZo5/WulvsIdYg/oeWc88cLScYfpBXBvMTVnM9dzzzKWrnSn4w/8JFt+eO
2iY9d/ZzgPkOP5qeOwYlrJJ31bEAm++x/7njwr0nzxx8ZQI2P//3c0frWSVP
Ui+B3XtgqvkLR4YTGwPKdMF8gz3FLxw9jPaqvT8FVn+BZ8MLx36ppcGTnoLl
HYzfvHCcKXk2acZ+MH9DpMZLxx33NMTbdhuC+AoNKS8dZz7Naw2abwA2/8KC
l45fTqTnL14JMf/7nZeOGYsmXj8XBTZ/gazkK8ci203b02eC+QIuoa8cp/ey
KRg5mYLNnzLxleOB/u4FG93A4amw++wrx0X1Egbx98DyEx5yvnYszm29p9sC
5jNwuL12VDT99LDtr4kjAM+Fn00=
          "]]}, {
         RGBColor[0.880722, 0.611041, 0.142051], 
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQQfPFOfOk6quiOyO9zAEchPKFj41PEfc8Srrw1G
ID7DwbtPHc+zWJ96fdcUxC94LvnMsVM0oLD3hwWI/4A37JmjyQTVh9z/zUD8
AJNJzxzPX4s8nqlqCeJ/aDn3zFE23udzvLwV2PzVXM8dDx9+IqK0Baz/wkW3
545RVgHf5O+D+Q4/mp47xs+/cXfjRhOw+R77nzumrpNd5WhgCDY///dzx/XP
p9Yu/gl234Gp5i8cGd/MYC8+BeYb7Cl+4Vj7pOOzCQdY/wWeDS8cz5+ZdGVK
kDHYfOM3LxzlQi8oMswH8zdEarx0FHpSoSHFCtav0JDy0rEgdsFPq3Pg8Dhw
YcFLR5t/AraGPWD/G3y/89LxsnSR0rwtYP4CWclXjmaPv5XnuID5Ai6hrxxr
rkxuDmozB5s/ZeIrxx7Zf7eXsoDDQ2H32VeOibFesoftwfwJDzlfO176u0XV
5BqYz8Dh9tqRu/ufSusUC0cAk9qgyA==
          "]]}, {
         RGBColor[0.560181, 0.691569, 0.194885], 
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQQfPFOfOnbNeyeQLenkCOQnFCx86hhwy2TqujgX
EJ/h4N2njjEmJ6Z83uAG4hc8l3zmmLBI4n6xjyeI/4A37JljxKXMmOm+HiB+
gMmkZ459DCwXd9h4gfgfWs49c1z9fd9H+4VgfsJqrueOHrflnz99CNZ/4aLb
c0cn87yX7z+D+Q4/mp473qg/WPc7D2zfA4/9zx2ZtxXvbuR1Bpuf//u541cH
1o0saWD+ganmLxwZolTXfPkNdr/BnuIXjkncyryTMsHuv8Cz4YXj+s/SU4Tn
gNU7GL954Riz3c/JZz2YvyFS46Vj6sML8gEPHEF8hYaUl44tC9v3H9vmADb/
woKXjjOSbcJezQKbZ/D9zktHufuMtdvYXUH8BbKSrxxDJlwRf/UOLC/gEvrK
kcvwbKBTCtj9G6ZMfOW47JrLvtVL3cHm7z77yrEpb6OaYD+YP+Eh52vHRaay
TIZrwXwGDrfXjmIJFcxsJ90cAevjn6w=
          "]]}}, {}, {}, {{}, {}}, {{}, {}}}, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {2.8716768*^9, 0}, 
      DisplayFunction -> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         FormBox[
          TagBox[
           TooltipBox["\"people\"", "people"], 
           Annotation[#, $CellContext`people, "Tooltip"]& ], TraditionalForm],
          None}, {None, None}}, FrameTicks -> 
      FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, {{
         Automatic, Automatic}, {{{2.8401408*^9, 
            FormBox["\"1990\"", TraditionalForm], {0.008333333333333333, 
            0.}}, {3.1556736*^9, 
            FormBox["\"2000\"", TraditionalForm], {0.008333333333333333, 
            0.}}, {3.4712928*^9, 
            FormBox["\"2010\"", TraditionalForm], {0.008333333333333333, 
            0.}}, {3.7868256*^9, 
            FormBox["\"2020\"", TraditionalForm], {0.008333333333333333, 
            0.}}, {2.8401408*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {2.9032128*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {2.9663712*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.0294432*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.0926016*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.1556736*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.218832*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.281904*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.3450624*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4081344*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4712928*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5343648*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5975232*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.6605952*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}}, {{2.8401408*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.1556736*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4712928*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.7868256*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {2.8401408*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {2.9032128*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {2.9663712*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.0294432*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.0926016*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.1556736*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.218832*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.281904*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.3450624*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4081344*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.4712928*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5343648*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.5975232*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}, {3.6605952*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.008333333333333333, 0.}}}}}], GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> All, 
      ImageSize -> {403.6640625, Automatic}, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{2.8716768*^9, 3.6605952*^9}, {0, 3.490431888640364*^6}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {{}, Automatic}]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.7131067733150854`*^9},ExpressionUUID->"62f26a7e-563b-4244-bb7d-\
e722e5637bfc"],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",ExpressionUUID->"b0f3346f-6a9f-4448-9814-7eb8149e1da5"],

Cell[TextData[{
 "A ",
 StyleBox["time series",
  FontSlant->"Italic"],
 " is a series of time-stamped data points in chronological order."
}], "Text",ExpressionUUID->"187f3b47-4d91-4948-8401-87d40665eed0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Time series in the Wolfram Language", "Subsubsection",ExpressionUUID->"101db6e9-722e-4f6f-b41f-9a3591e279b6"],

Cell["\<\
In the Wolfram Language, this time-stamped data is represented using three \
objects:\
\>", "Text",
 CellChangeTimes->{
  3.7126765997719507`*^9, {3.714740208809882*^9, 3.714740209684924*^9}, {
   3.716556490003675*^9, 
   3.716556493915739*^9}},ExpressionUUID->"43b2f3be-2cb3-49f7-a302-\
cc8659ca4f31"],

Cell[TextData[{
 StyleBox[ButtonBox["TimeSeries",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimeSeries"], "Input"],
 " \[LongDash] assumes continuous-time observations and allows only one \
\[OpenCurlyDoubleQuote]path\[CloseCurlyDoubleQuote] (which could be \
univariate or multivariate of constant dimension). By default, the values \
between time stamps are interpolated linearly, but the interpolation method \
can be changed."
}], "Item",ExpressionUUID->"ad9fb8a7-23cf-416e-ac10-b4e025af8e89"],

Cell[TextData[{
 StyleBox[ButtonBox["TemporalData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TemporalData"], "Input"],
 " \[LongDash] assumes continuous-time observations and allows more than one \
path (but the dimensionality of values for all paths must be consistent). By \
default, values between time stamps are \[OpenCurlyDoubleQuote]held from the \
left\[CloseCurlyDoubleQuote] (i.e. zero-order interpolation), but again the \
interpolation method can be changed."
}], "Item",ExpressionUUID->"44239f9c-9a29-41c1-b8d3-18e7672eae92"],

Cell[TextData[{
 StyleBox[ButtonBox["EventSeries",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EventSeries"], "Input"],
 " \[LongDash] assumes discrete-time events, so there is no interpolation \
between time stamps."
}], "Item",ExpressionUUID->"d7b01c0d-ca43-4c90-b236-29566dd2b058"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"653e10c0-2d4a-4055-9286-fe028aa0d43b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e3d5cc3e-09c9-48d3-82fb-afe337bf20e3"],

Cell[CellGroupData[{

Cell["Constructing Time Series", "Section",ExpressionUUID->"aefba4ef-e3e8-46e1-b493-c8324c9d0c27"],

Cell["\<\
A TimeSeries object contains a single path of time-stamped values. It can be \
created in several different ways.\
\>", "Text",ExpressionUUID->"7ef73502-dc86-4214-8528-b1d1414c6d31"],

Cell[CellGroupData[{

Cell["Manual Construction", "Subsection",ExpressionUUID->"d5097763-2914-48cf-a6c8-894ea2e0a2b5"],

Cell[CellGroupData[{

Cell["Lists of values and times", "Subsubsection",ExpressionUUID->"212132be-442b-4769-9ac7-9a08418c9d9f"],

Cell["\<\
Create a TimeSeries from a list of values and a list of times:\
\>", "Text",
 CellTags->{
  "RandomInteger", 
   "TimeSeries"},ExpressionUUID->"7b450fee-efd3-4f3e-9890-429ff64436f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "10"}], "}"}], ",", "10"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"times", "=", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "3", ",", "5", ",", "8", ",", "12", ",", "15", ",", "20", ",", 
      "25", ",", "35", ",", "36"}], "}"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"timeSeries", "=", 
    RowBox[{"TimeSeries", "[", 
     RowBox[{"values", ",", 
      RowBox[{"{", "times", "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{"ListLinePlot", "[", "timeSeries", "]"}]}], "Input",
 CellLabel->"",ExpressionUUID->"e0e710bb-a359-4054-b29a-b5b0f9399b22"],

Cell["Note that the lists must be the same length.", "Text",ExpressionUUID->"c9fe3842-a47e-463f-b27e-eb7592c03f3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A list of time-value pairs", "Subsubsection",ExpressionUUID->"771665d5-210f-4949-9963-61c4bb808fd1"],

Cell["Create a TimeSeries from a list of time-value pairs:", "Text",ExpressionUUID->"f33e5b09-63b2-4979-81dc-08907e249abb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pairs", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"times", ",", " ", "values"}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"timeSeries", "=", 
    RowBox[{"TimeSeries", "[", "pairs", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "timeSeries", "]"}]}], "Input",
 CellID->658325024,ExpressionUUID->"bcb3411e-b00d-4230-b839-d63f7ca69352"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dates: specifying a starting point", "Subsubsection",ExpressionUUID->"d945f4ef-fe6f-4412-a4b5-578a72c012a9"],

Cell["\<\
Create a TimeSeries from a list of values and a starting date:\
\>", "Text",ExpressionUUID->"b010cbd9-5560-4d34-9f7c-e9ebf9d0bc64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"values", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "20"}], "}"}], ",", " ", "10"}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeSeries1", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{"values", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1982", ",", "5", ",", "24"}], "}"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"timeSeries2", "=", 
    RowBox[{"TimeSeries", "[", 
     RowBox[{"values", ",", 
      RowBox[{"{", "\"\<May 24 1982\>\"", "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DateListPlot", "[", 
     RowBox[{"#", ",", 
      InterpretationBox[
       DynamicModuleBox[{Typeset`open = False}, 
        TemplateBox[{"List", 
          StyleBox[
          "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
          GridBox[{{
             RowBox[{
               TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["List", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["3", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Byte count: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox["248", "IconizedItem"]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          Dynamic[Typeset`open]},
         "IconizedObject"]],
       {Filling -> Axis, Joined -> True, ImageSize -> 400},
       SelectWithContents->True,
       Selectable->False]}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"timeSeries1", ",", "timeSeries2"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellTags->{"DateListPlot", "Filling", "Axis", "Joined", "True"},
 CellLabel->"",ExpressionUUID->"3205fcd9-1ac5-4e14-a629-fd8722e34743"],

Cell[TextData[{
 "Note that TimeSeries attempts to interpret dates written in natural \
language (ambiguous dates can be handled with ",
 StyleBox[ButtonBox["DateFunction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DateFunction"], "Input"],
 "). Note also the visual differences between ",
 StyleBox[ButtonBox["DateListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DateListPlot"], "Input"],
 " and ",
 StyleBox[ButtonBox["ListLinePlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListLinePlot"], "Input"],
 "."
}], "Text",ExpressionUUID->"3a2f9d08-ce2f-468e-8a6c-b4da061491f4"],

Cell["\<\
With no starting date provided, the times are assumed to be 1-second steps \
from 00:00:00 on 1st Jan 1900:\
\>", "Text",ExpressionUUID->"81844721-10c0-4aaa-b6a2-429619b7238f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TimeSeries", "[", "values", "]"}], "[", "\"\<Dates\>\"", 
  "]"}]], "Input",ExpressionUUID->"da918eb2-b178-4828-bfe9-94853a2c071f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dates: specifying start and end points", "Subsubsection",ExpressionUUID->"6cded341-aec9-47e5-ba32-bc956f860264"],

Cell["\<\
Create a TimeSeries from a list of values, a start date and an end date:\
\>", "Text",ExpressionUUID->"ee96f071-71e1-485a-8e97-d820b449aa67"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"values", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "20"}], "}"}], ",", " ", "10"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"timeSeries", "=", 
    RowBox[{"TimeSeries", "[", 
     RowBox[{"values", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<2001\>\"", ",", " ", "\"\<2012\>\""}], "}"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{"timeSeries", ",", " ", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", 
       StyleBox[
       "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["3", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["248", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {Filling -> Axis, Joined -> True, ImageSize -> 400},
    SelectWithContents->True,
    Selectable->False]}], "]"}]}], "Input",
 CellLabel->"In[633]:=",
 CellID->11419477,ExpressionUUID->"b71f4ca5-db23-434f-8200-817f28b3b9c1"],

Cell["\<\
Note that the values have been spread evenly over the time interval. These \
dates can be extracted and the differences between them checked:\
\>", "Text",ExpressionUUID->"7b6052b0-6d9e-4987-9f2d-fbf60b962b97"],

Cell[BoxData[
 RowBox[{"timeSeries", "[", "\"\<DatePath\>\"", "]"}]], "Input",
 CellLabel->
  "In[654]:=",ExpressionUUID->"94ea711d-0bd6-4678-b203-bda123fb26bf"],

Cell[BoxData[
 RowBox[{"Differences", "[", 
  RowBox[{
   RowBox[{"timeSeries", "[", "\"\<DatePath\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[655]:=",ExpressionUUID->"563a2890-f699-495e-8a11-8332dab44dd3"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"3674a43b-fb49-4d3b-b869-8d5932043749"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9d9bf01e-40e7-49d3-9f83-04124b8c0ae9"],

Cell[CellGroupData[{

Cell["External Data", "Subsection",ExpressionUUID->"de30355a-94d7-4365-a707-c4a7661eb53d"],

Cell["Get stock data for Google from 2005:", "Text",ExpressionUUID->"db72d870-5cf8-4567-8715-1dd420eb97d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"googleStocks", "=", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<GOOGL\>\"", ",", 
     RowBox[{"{", "2005", "}"}]}], "]"}]}], ";"}]], "Input",
 CellTags->"FinancialData",
 CellLabel->
  "In[657]:=",ExpressionUUID->"55ce1d14-49bb-40fd-8a71-5764406ac379"],

Cell["\<\
While typically external data would need to be cleaned and formatted, \
financial data is integrated into the Wolfram Language, so this stock data is \
already in time series form:\
\>", "Text",ExpressionUUID->"f330adf3-9f3b-409d-85a9-fd1689dd95f3"],

Cell[BoxData[
 RowBox[{"googleStocks", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellLabel->
  "In[660]:=",ExpressionUUID->"5cc05717-3a9c-4bc2-91f7-2203fa6f5ffd"],

Cell["\<\
Nevertheless, TimeSeries can be wrapped around the data to be sure:\
\>", "Text",ExpressionUUID->"e3dd7b29-62ab-4e13-888c-0be9d69f78e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gsTimeSeries", "=", 
    RowBox[{"TimeSeries", "[", "googleStocks", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DateListPlot", "[", 
     RowBox[{"#", ",", "  ", 
      InterpretationBox[
       DynamicModuleBox[{Typeset`open = False}, 
        TemplateBox[{"List", 
          StyleBox[
          "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
          GridBox[{{
             RowBox[{
               TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["List", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["3", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Byte count: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox["248", "IconizedItem"]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          Dynamic[Typeset`open]},
         "IconizedObject"]],
       {Filling -> Axis, Joined -> True, ImageSize -> 400},
       SelectWithContents->True,
       Selectable->False]}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"googleStocks", ",", " ", "gsTimeSeries"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellTags->"FinancialData",
 CellLabel->
  "In[688]:=",ExpressionUUID->"726c30d5-6cc2-4628-914c-b31764736442"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"88474b0a-939a-4fbb-87df-3ce8c479cda7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"7b36dab4-26a0-45a1-973c-59f6cdc72cb1"],

Cell[CellGroupData[{

Cell["Random Processes", "Subsection",ExpressionUUID->"6874d386-1149-4f80-9363-0e6b2da5da7d"],

Cell[TextData[{
 "Simulate time series data with a random process (in this case, a ",
 StyleBox[ButtonBox["WienerProcess",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/WienerProcess"], "Input"],
 "):"
}], "Text",ExpressionUUID->"4740eab7-2d23-47f8-9602-f612e4e8031c"],

Cell[BoxData[
 RowBox[{"wienerData", " ", "=", " ", 
  RowBox[{"TimeSeries", "[", 
   RowBox[{"RandomFunction", "[", 
    RowBox[{
     RowBox[{"WienerProcess", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "10", ",", "0.1"}], "}"}]}], "]"}], "]"}]}]], "Input",\

 CellLabel->
  "In[510]:=",ExpressionUUID->"9f5c49b4-881e-486e-be20-ac1bff204509"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"wienerData", ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[511]:=",ExpressionUUID->"bcd14706-53d4-4ef8-a81e-cc598fe2afad"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"ba8e41fb-e8e8-4ed4-aee4-2bd86d19ad0c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"85efc2cf-7a44-4dd5-ace8-735d30548226"],

Cell[CellGroupData[{

Cell["Extracting Data from Time Series", "Section",ExpressionUUID->"425d7d9e-ee9b-4773-9f2c-cfb1d10c1dde"],

Cell["\<\
Once you have a TimeSeries object, various properties can be extracted.\
\>", "Text",ExpressionUUID->"de8fa702-80fa-4438-bc6a-58ec7072c87b"],

Cell["Create a TimeSeries from a random process:", "Text",ExpressionUUID->"fc661e58-aa65-499d-9774-c4bdc1ce0230"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ouTimeSeries", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{"RandomFunction", "[", 
     RowBox[{
      RowBox[{"OrnsteinUhlenbeckProcess", "[", 
       RowBox[{"0", ",", "0.1", ",", "0.3", ",", "1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "20", ",", "0.1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[294]:=",ExpressionUUID->"36c46544-f113-4016-94b6-3fa92c7197e8"],

Cell["See its properties:", "Text",ExpressionUUID->"009cfca7-f56e-4800-a97c-3faa11094740"],

Cell[BoxData[
 RowBox[{"ouTimeSeries", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellLabel->
  "In[299]:=",ExpressionUUID->"d2281598-0f01-48a8-8f50-e7b3859a9ec8"],

Cell["See the specific values for these properties:", "Text",ExpressionUUID->"8408faab-929f-4b1c-88c9-eed9b3c311eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AssociationMap", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ouTimeSeries", "[", "#", "]"}], " ", "&"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ouTimeSeries", "[", "\"\<Properties\>\"", "]"}]}], 
   "\[IndentingNewLine]", "]"}], "//", "Dataset"}]], "Input",
 CellLabel->
  "In[300]:=",ExpressionUUID->"92fa5ab3-b9a1-47fe-8b74-c85eba9f459c"],

Cell[TextData[{
 "Plot the path (this gives the same result as plotting ",
 StyleBox["ouTimeSeries", "Input"],
 " directly):"
}], "Text",ExpressionUUID->"60f1f4da-7e2d-4800-86c8-637ca9f290b4"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"ouTimeSeries", "[", "\"\<Path\>\"", "]"}], "]"}]], "Input",
 CellLabel->
  "In[305]:=",ExpressionUUID->"712ada33-de03-4d3b-a6c3-c0588990868c"],

Cell["Plot the path using the interpolated path function:", "Text",ExpressionUUID->"3c075a95-d742-4796-906c-a47e80619e17"],

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ouTimeSeries", "[", "\"\<PathFunction\>\"", "]"}], "[", "x", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "20"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[302]:=",ExpressionUUID->"63207406-a954-4e97-8095-33c63fc65510"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"d1698cb2-c9f0-4bd4-99e1-b175c81bc870"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"decc1872-a35a-484f-957c-96a009c3ec86"],

Cell[CellGroupData[{

Cell["Exercise 1", "Subsection",ExpressionUUID->"79ef280e-1fa6-4336-9aa5-2b3cfcce9e66"],

Cell[TextData[{
 "In this exercise, you will obtain some temporal data from a file, clean it \
and obtain a TimeSeries object from it. The data consists of Wisconsin \
employment time series from January 1961 to October 1975 (Labor market, ",
 StyleBox["Hipel & McLeod",
  FontSlant->"Italic"],
 ", 1994)."
}], "Text",ExpressionUUID->"831cf194-a2f6-4c62-9007-79ed4ee1dd35"],

Cell[TextData[{
 "a) Import the data from ",
 StyleBox["wisconsin-employment-time-series.csv",
  FontSlant->"Italic"],
 " into a Mathematica notebook and check its dimensions.\nb) Remove any \
unnecessary rows or columns and check the data types.\nc) Convert the \
date-like data to a ",
 StyleBox[ButtonBox["DateObject",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DateObject"], "Input"],
 ".\nd) Convert the data to a TimeSeries and save it to a variable (you will \
need it for later exercises)."
}], "Text",ExpressionUUID->"be52f87d-e862-4055-9c4d-30942d6e2d39"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"ff94b68f-8d53-46d7-baf1-c7d15155da01"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6c16df9d-b92b-431b-b9bc-feb682a0cd67"],

Cell[CellGroupData[{

Cell["Cleaning Time Series", "Section",ExpressionUUID->"3741569d-faef-4325-81cf-53c7e9d429ff"],

Cell["\<\
To obtain meaningful descriptive statistics from data, it needs to be in a \
computable form. In real-world time-stamped data, some data values may be \
missing or irregularly spaced.\
\>", "Text",ExpressionUUID->"e39f507c-6e02-42b4-a1c3-4590b98c0abf"],

Cell[CellGroupData[{

Cell["Missing Data", "Subsection",ExpressionUUID->"8b2f6281-bab9-4717-847c-00e81b3bf11a"],

Cell[TextData[{
 "Construct a time series from temperature values using ",
 StyleBox[ButtonBox["WeatherData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/WeatherData"], "Input"],
 ":"
}], "Text",ExpressionUUID->"d0b8eb6f-3e50-4c02-9049-95e348d56e53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"temps", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{"WeatherData", "[", 
     RowBox[{"\"\<Champaign\>\"", ",", "\"\<Temperature\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2020", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2020", ",", " ", "2"}], "}"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellTags->{"DateValue", "Today", "Year", "Month", "DatePlus"},
 CellLabel->"In[45]:=",ExpressionUUID->"81828da2-b8e4-4dbe-9363-72682a5dffc1"],

Cell["Several temperature values are missing:", "Text",ExpressionUUID->"4ed300cd-f072-471d-9788-65f536609e35"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "temps", "]"}]], "Input",
 CellChangeTimes->{{3.591356427892191*^9, 3.591356444732191*^9}, {
  3.714823087489459*^9, 3.714823087675583*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"aa3de47c-937a-4e15-95db-ed69322283e6"],

Cell[TextData[{
 "Using ",
 StyleBox[ButtonBox["MissingDataMethod",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/MissingDataMethod"], "Input"],
 " in TimeSeries, the missing data values can be substituted for constants or \
interpolated (first-order interpolation is used by default)."
}], "Text",ExpressionUUID->"d149591f-155e-4f2d-9d3b-0de6cd8818d9"],

Cell["Apply second-order interpolation to the data:", "Text",ExpressionUUID->"a6c76017-96ab-40aa-bbe3-265dc323e1e6"],

Cell[BoxData[
 RowBox[{"tempsNoMissing", "=", 
  RowBox[{"TimeSeries", "[", 
   RowBox[{"temps", ",", 
    RowBox[{"MissingDataMethod", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Interpolation\>\"", ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellTags->{"MissingDataMethod", "Interpolation", "InterpolationOrder"},
 CellLabel->"In[47]:=",ExpressionUUID->"9018d979-b85d-4713-8b6b-f797da083027"],

Cell["Compare with the old data (hover your mouse over the plot):", "Text",ExpressionUUID->"fb53f064-5f80-4051-9600-ee084dc1e1bd"],

Cell[BoxData[
 RowBox[{"Mouseover", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DateListPlot", "[", 
    RowBox[{"temps", ",", " ", 
     RowBox[{"ImageSize", " ", "\[Rule]", " ", "500"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tempsNoMissing", ",", " ", "temps"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0.880722, 0.611041, 0.142051], 
              RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            
            FrameStyle->RGBColor[
             0.587148, 0.40736066666666665`, 0.09470066666666668],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"RGBColor", "[", 
              RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}], 
              "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[0.880722, 0.611041, 0.142051]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0.880722, 0.611041, 0.142051],
         Editable->False,
         Selectable->False], ",", " ", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0.368417, 0.506779, 0.709798], 
              RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            
            FrameStyle->RGBColor[
             0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"RGBColor", "[", 
              RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}], 
              "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[0.368417, 0.506779, 0.709798]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0.368417, 0.506779, 0.709798],
         Editable->False,
         Selectable->False]}], "}"}]}], ",", " ", 
     RowBox[{"ImageSize", " ", "\[Rule]", " ", "500"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[133]:=",ExpressionUUID->"72731b2f-2c30-442d-984d-d4b087b4a184"],

Cell["Get statistics from the new data:", "Text",ExpressionUUID->"0c20afb4-7518-4eaa-a5d5-c4202b3ae0ac"],

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Min", ",", "Max", ",", "Mean", ",", "Median"}], "}"}], "[", 
   "tempsNoMissing", "]"}], "]"}]], "Input",
 CellTags->{"Min", "Max"},
 CellLabel->
  "In[110]:=",ExpressionUUID->"90bf838e-c87b-4aa8-a9ec-32f87f9dba7b"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"30306d95-766d-4427-b70f-70190ecb5c5c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6af3f4c4-dff6-46f5-b2aa-0f1e17ba6d5a"],

Cell[CellGroupData[{

Cell["Irregular Data", "Subsection",ExpressionUUID->"4b1c613d-5a71-4a38-a531-724ab0e2bd21"],

Cell[CellGroupData[{

Cell["Regularising data", "Subsubsection",ExpressionUUID->"ecc5980e-179a-469f-b999-2581147df952"],

Cell["Get the log returns of the S&P 500 index from 2014 to 2018:", "Text",ExpressionUUID->"148f9436-f123-419b-b5e0-79111e4cdc3d"],

Cell[BoxData[
 RowBox[{"sp500Data", "=", 
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", 
    RowBox[{"TimeSeries", "[", 
     RowBox[{"FinancialData", "[", 
      RowBox[{"\"\<SP500\>\"", ",", "\"\<FractionalChange\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2018", ",", "1", ",", "1"}], "}"}]}], "}"}]}], "]"}], 
     "]"}]}], "]"}]}]], "Input",
 CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"},
 CellLabel->"In[13]:=",ExpressionUUID->"a3b2fc5c-3ff0-4d60-b139-c5b317be9ad7"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"sp500Data", ",", " ", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", 
       StyleBox[
       "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["4", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["360", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {Joined -> True, PlotRange -> All, PlotStyle -> Thickness[Tiny], 
     ImageSize -> 400},
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"},
 CellLabel->"In[14]:=",ExpressionUUID->"75807575-bf40-4359-bec5-16e0ff9bd9bf"],

Cell[TextData[{
 "The computation of ",
 StyleBox[ButtonBox["CovarianceFunction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CovarianceFunction"], "Input"],
 " requires a time series to be regularly sampled:"
}], "Text",ExpressionUUID->"167e8fa6-af50-425a-a509-0ed49cc52a86"],

Cell[BoxData[
 RowBox[{"RegularlySampledQ", "[", "sp500Data", "]"}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"44951212-131d-47b2-9d60-90e833fb3187"],

Cell[BoxData[
 RowBox[{"CorrelationFunction", "[", 
  RowBox[{"sp500Data", ",", 
   RowBox[{"{", "10", "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[146]:=",ExpressionUUID->"0a9018aa-f31b-43f9-87d6-e24e161e4efc"],

Cell[TextData[{
 "The irregularity of the data can be accounted for in two ways. One option \
is to use the ",
 StyleBox[ButtonBox["TemporalRegularity",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TemporalRegularity"], "Input"],
 " option in TimeSeries."
}], "Text",ExpressionUUID->"ca87a834-b8eb-4585-bbd5-73408143d304"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Method I: TemporalRegularity",
 FontColor->RGBColor[
  0.7956664377813382, 0.220004577706569, 0.]]], "Subsubsubsection",
 CellMargins->{{120, Inherited}, {
   Inherited, 30}},ExpressionUUID->"4e2925e1-622a-4a04-9865-4e931512d532"],

Cell["\<\
Get the same data as before, but this time assume it is regular:\
\>", "Text",ExpressionUUID->"72e79adb-098c-455f-8c82-7f563266a501"],

Cell[BoxData[
 RowBox[{"sp500DataRegular1", "=", 
  RowBox[{"TimeSeries", "[", 
   RowBox[{"sp500Data", ",", 
    RowBox[{"TemporalRegularity", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellTags->"TemporalRegularity",
 CellLabel->
  "In[333]:=",ExpressionUUID->"fce97705-047a-476a-81a4-c5267095e5ed"],

Cell["The correlation function can now be calculated:", "Text",ExpressionUUID->"41ce0458-758e-4fc3-a9d5-d7b5857b4397"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegularlySampledQ", "[", "sp500DataRegular1", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"corrFunct1", "=", 
  RowBox[{"CorrelationFunction", "[", 
   RowBox[{"sp500DataRegular1", ",", 
    RowBox[{"{", "10", "}"}]}], "]"}]}]}], "Input",ExpressionUUID->"4d98c93b-\
21c4-4e21-b308-c9cc11c644b3"],

Cell["\<\
However, the data has not actually been regularised\[LongDash]merely it has \
been labelled that way to allow certain functions to be applied to it:\
\>", "Text",ExpressionUUID->"2c64d770-07c5-47bd-a033-e691f828bee8"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Differences", "[", 
   RowBox[{"sp500DataRegular1", "[", "\"\<Dates\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellLabel->
  "In[331]:=",ExpressionUUID->"da830b5b-e538-4a51-95e8-883b86301f6d"],

Cell[TextData[{
 "To truly regularise the data, you can sample from it at regular intervals \
with ",
 StyleBox[ButtonBox["TimeSeriesResample",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimeSeriesResample"], "Input"],
 "."
}], "Text",ExpressionUUID->"df15fcf1-0194-4a3b-a9c0-ad501f058045"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Method II: TimeSeriesResample",
 FontColor->RGBColor[
  0.7956664377813382, 0.220004577706569, 0.]]], "Subsubsubsection",
 CellMargins->{{120, Inherited}, {
   Inherited, 30}},ExpressionUUID->"ed0325e6-61e8-4dde-a53b-220b98d96de7"],

Cell["Take daily samples from the data:", "Text",ExpressionUUID->"c81a9303-45f0-42ff-98ba-bf64b85bc46f"],

Cell[BoxData[
 RowBox[{"sp500DataRegular2", "=", 
  RowBox[{"TimeSeriesResample", "[", 
   RowBox[{"sp500Data", ",", "\"\<Day\>\""}], "]"}]}]], "Input",
 CellTags->"TimeSeriesResample",
 CellLabel->"In[26]:=",ExpressionUUID->"d40658b1-8822-4e0f-9178-50156600a770"],

Cell["Again, the correlation function can now be calculated:", "Text",ExpressionUUID->"760c52a4-b4b6-4ef4-82da-d8103277f50d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RegularlySampledQ", "[", "sp500DataRegular2", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"corrFunct2", "=", 
  RowBox[{"CorrelationFunction", "[", 
   RowBox[{"sp500DataRegular2", ",", 
    RowBox[{"{", "10", "}"}]}], "]"}]}]}], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"5ccfd9b0-6ebf-4eff-9c4b-6ff0f70664a1"],

Cell["Compare the two correlation functions:", "Text",ExpressionUUID->"2130f105-0ba4-429a-9ee9-24e7f4a830f3"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"corrFunct1", ",", " ", "corrFunct2"}], "}"}], ",", " ", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", 
       StyleBox[
       "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["4", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["376", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {Filling -> Axis, PlotStyle -> PointSize[0.02], PlotRange -> All, 
     ImageSize -> 400},
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"50402446-e790-4821-9969-0eea9eeca433"],

Cell["This time, the data has actually been regularised:", "Text",ExpressionUUID->"2322d325-000c-4bba-92db-0015f87af427"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Differences", "[", 
   RowBox[{"sp500DataRegular2", "[", "\"\<Dates\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellLabel->
  "In[334]:=",ExpressionUUID->"3c1f8757-9033-4b74-b4f8-8e3649ac29cd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Relative regularity", "Subsubsection",ExpressionUUID->"8b57cbe8-2416-4023-b978-451f0339c9ab"],

Cell["\<\
An important thing to note is that regularity is relative. TimeSeries data \
may be regular relative to calendar time, but not to absolute time.\
\>", "Text",ExpressionUUID->"1fe13dc2-5898-44e1-a00b-b09e264a7c39"],

Cell["Consider the following S&P 500 data from January 2014:", "Text",ExpressionUUID->"a19b6066-bb49-4de3-b587-5bd4bf123218"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sp500Data", " ", "=", " ", 
   InterpretationBox[
    RowBox[{
     TagBox["TimeSeries",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, 
                 TagBox[{
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   Opacity[1.], 
                   LineBox[CompressedData["
1:eJwV0H1Q03UYAPDhGAMDbI0wGdQtmrzYwPlGjV6elWLmok48u6kopEV1HeNt
DHGwOrgVR/O23kB+DxDk4ZmCxoBDUYaCbVYwGZK8DQbIihEhszsw0vX4x/ee
+9xzz/N9nkf4nnLP+6tYLNZL9B7FmQM+78z0umXrJue0c7UIHYNtsvtkleb5
rT01CHqYdgb3uWWRgX380mqEqXgZL5KcbDxXU1+FkBDx8tg2sm3HjeWrFQhl
K+f3ysmMb9x0/TcIqYf2HkojKzRy4UUjQlyz8sl8cvrD5gXDCQQvOyajnBzv
ffe4uhwhZYT/Zi25eGtOgJT++6FONdJC5mpqoxdNCPnz/v9ZyWG7ClpcbQi7
EqTtY+Se0MDJDeSncqaEHvLaxrXGWfLHksvhfja3bHyf4t4z7Qjtk4HXBWRT
1Y0uphOBa1jhSshH6iXTURaE4WuCse3kW/2hRRIzwmlXc+p+cmDssC37PMLS
ieNZmeRqIXR2fo+wPbpjYynZsPhzXL8BwWiuLD9JjsgTOMSfIaSPnlY3kpO+
DYmqyEEQ/ynmdZNT224lKXQImmMzibfJL7wR3vLvWYRf/RN95sgTUZurBq4j
hJZx81g33TLr4wVHRMMId/ScghBy8O9Hdz8YR2gqKYyJJT947MLGccofU+tV
r5J3trZWtNgQLAv9e1LIQ1r57ZhrCDyF3vEh+abfl6J1lxEcSYX3NeQOZ7Lm
c7rHj5s4FwzkTaAyznYh5K7hhjSQM9d0GrXdCOYsacAlsv/CaukszcftvnPW
Rs54pbBXZ0Wwn+yamCaLaub9l39BqM6UNi2Rk0t6VqX2IhzdsiE2qN8tG7Wo
eYM0X1PxWwlCskTavDDUj/DPRdfiNnJw3xbWbqpPvBexU07uOuD1Pn0GgfOT
TpxGduTrsn0+pXsd/uCq6lF9a+WzbgkC/2u1q4xcw/Kzzi8xcLBnfUM12R6p
dBR6GKhzyfkm8mqWMs/4FwMf6U/xLGQFOwKC/mBALMq9MkZuNKfrn5hkwHNp
gu0hr0TXD2weZeDFwaJRjt0tWx483BY7xIDG+VWagGw3PRde9DcDr2UN58eT
l/a5nFYvA76L30l3kNmOM69zRhiwKD2V+8lc3fow9hUGgnK1X2SSF++mhf02
xcDbGSWiUnLAJ3ytL5f2cbanVJKLBxqy7XcZEJx6aD5HNtUVCw9Sv/8BbAr4
tw==
                    "]]}, 
                  Annotation[#, "Charting`Private`Tag$1673363#1"]& ]}, {}}, 
               AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, 
               AxesOrigin -> {3.597609600000008*^9, 1775.2530294436783`}, 
               DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
               GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{3597609600, 3600115200}, {1775.2530294436744`, 
                 1847.7473579173707`}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, Ticks -> {Automatic, Automatic}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"02 Jan 2014\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 Jan 2014\"", "SummaryItem"]}]}, 
                   "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["21", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
               AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
                 ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, 
                 TagBox[{
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6], 
                   Opacity[1.], 
                   LineBox[CompressedData["
1:eJwV0H1Q03UYAPDhGAMDbI0wGdQtmrzYwPlGjV6elWLmok48u6kopEV1HeNt
DHGwOrgVR/O23kB+DxDk4ZmCxoBDUYaCbVYwGZK8DQbIihEhszsw0vX4x/ee
+9xzz/N9nkf4nnLP+6tYLNZL9B7FmQM+78z0umXrJue0c7UIHYNtsvtkleb5
rT01CHqYdgb3uWWRgX380mqEqXgZL5KcbDxXU1+FkBDx8tg2sm3HjeWrFQhl
K+f3ysmMb9x0/TcIqYf2HkojKzRy4UUjQlyz8sl8cvrD5gXDCQQvOyajnBzv
ffe4uhwhZYT/Zi25eGtOgJT++6FONdJC5mpqoxdNCPnz/v9ZyWG7ClpcbQi7
EqTtY+Se0MDJDeSncqaEHvLaxrXGWfLHksvhfja3bHyf4t4z7Qjtk4HXBWRT
1Y0uphOBa1jhSshH6iXTURaE4WuCse3kW/2hRRIzwmlXc+p+cmDssC37PMLS
ieNZmeRqIXR2fo+wPbpjYynZsPhzXL8BwWiuLD9JjsgTOMSfIaSPnlY3kpO+
DYmqyEEQ/ynmdZNT224lKXQImmMzibfJL7wR3vLvWYRf/RN95sgTUZurBq4j
hJZx81g33TLr4wVHRMMId/ScghBy8O9Hdz8YR2gqKYyJJT947MLGccofU+tV
r5J3trZWtNgQLAv9e1LIQ1r57ZhrCDyF3vEh+abfl6J1lxEcSYX3NeQOZ7Lm
c7rHj5s4FwzkTaAyznYh5K7hhjSQM9d0GrXdCOYsacAlsv/CaukszcftvnPW
Rs54pbBXZ0Wwn+yamCaLaub9l39BqM6UNi2Rk0t6VqX2IhzdsiE2qN8tG7Wo
eYM0X1PxWwlCskTavDDUj/DPRdfiNnJw3xbWbqpPvBexU07uOuD1Pn0GgfOT
TpxGduTrsn0+pXsd/uCq6lF9a+WzbgkC/2u1q4xcw/Kzzi8xcLBnfUM12R6p
dBR6GKhzyfkm8mqWMs/4FwMf6U/xLGQFOwKC/mBALMq9MkZuNKfrn5hkwHNp
gu0hr0TXD2weZeDFwaJRjt0tWx483BY7xIDG+VWagGw3PRde9DcDr2UN58eT
l/a5nFYvA76L30l3kNmOM69zRhiwKD2V+8lc3fow9hUGgnK1X2SSF++mhf02
xcDbGSWiUnLAJ3ytL5f2cbanVJKLBxqy7XcZEJx6aD5HNtUVCw9Sv/8BbAr4
tw==
                    "]]}, 
                  Annotation[#, "Charting`Private`Tag$1673363#1"]& ]}, {}}, 
               AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, 
               AxesOrigin -> {3.597609600000008*^9, 1775.2530294436783`}, 
               DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
               GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{3597609600, 3600115200}, {1775.2530294436744`, 
                 1847.7473579173707`}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.1], 
                  Scaled[0.1]}, {
                  Scaled[0.1], 
                  Scaled[0.1]}}, Ticks -> {Automatic, Automatic}], 
              GridBox[{{
                 TagBox[
                  TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"02 Jan 2014\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"31 Jan 2014\"", "SummaryItem"]}]}, 
                   "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["21", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["True", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["None", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["\"BusinessDay\"", "SummaryItem"]}]}, {
                 TagBox["\"\"", "SummaryItem"], 
                 RowBox[{
                   TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TemporalData[
    TimeSeries, {{{1831.97998046875, 1831.3699951171875`, 1826.77001953125, 
      1837.8800048828125`, 1837.489990234375, 1838.1300048828125`, 
      1842.3699951171875`, 1819.199951171875, 1838.8800048828125`, 
      1848.3800048828125`, 1845.8900146484375`, 1838.699951171875, 
      1843.800048828125, 1844.8599853515625`, 1828.4599609375, 
      1790.2900390625, 1781.56005859375, 1792.5, 1774.199951171875, 
      1794.18994140625, 1782.5899658203125`}}, {
       TemporalData`DateSpecification[{2014, 1, 2, 0, 0, 0.}, {
        2014, 1, 31, 0, 0, 0.}, "BusinessDay", "DayRange"]}, 1, {
      "Continuous", 1}, {"Discrete", 1}, 1, {
      DateFunction -> Automatic, 
       ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
       ValueDimensions -> 1}}, True, 13.],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellLabel->
  "In[734]:=",ExpressionUUID->"7bd7d575-6d38-44b8-af1b-ce7a50b11322"],

Cell["\<\
The data has several gaps including weekends and one federal holiday (Martin \
Luther King Jr. day):\
\>", "Text",ExpressionUUID->"11d4b9d8-7251-468a-b410-65473b3073d5"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"sp500Data", ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", 
       StyleBox[
       "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["2", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["168", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {Joined -> False, Filling -> Axis},
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellLabel->
  "In[735]:=",ExpressionUUID->"eccecc76-ca68-4888-a16e-94ea24f5443d"],

Cell["\<\
Despite this, the data is recognised as being regularly sampled:\
\>", "Text",ExpressionUUID->"f996fa84-db3b-43cd-b8b5-ea3ac0a658b0"],

Cell[BoxData[
 RowBox[{"RegularlySampledQ", "[", "sp500Data", "]"}]], "Input",
 CellLabel->
  "In[737]:=",ExpressionUUID->"acfce80a-0553-4315-9f2b-62a836c795bc"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"8b8341aa-ad99-4e14-8fce-1d72dae4c90e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c2f96c6a-f231-4189-960d-f2cc99f98120"],

Cell[CellGroupData[{

Cell["Operations on Time Series", "Section",ExpressionUUID->"c9962473-6704-4de4-93ae-4dc674e70361"],

Cell[TextData[{
 "TimeSeries objects can be manipulated in many ways; as well as regular \
arithmetic, there exist special functions for computing with them. In this \
section, you will look at ",
 StyleBox[ButtonBox["TimeSeriesWindow",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimeSeriesWindow"], "Input"],
 ", ",
 StyleBox[ButtonBox["TimeSeriesResample",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimeSeriesResample"], "Input"],
 ", ",
 StyleBox[ButtonBox["TimeSeriesMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimeSeriesMap"], "Input"],
 " and ",
 StyleBox[ButtonBox["TimeSeriesThread",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimeSeriesThread"], "Input"],
 "."
}], "Text",ExpressionUUID->"66c5688a-085d-40dd-a20c-727979ccf3e3"],

Cell["Get a list of all time series-related functions:", "Text",ExpressionUUID->"7c1c684c-a198-4d68-a4ed-30ef09e34611"],

Cell[BoxData[
 RowBox[{"?", "System`*TimeSeries*"}]], "Input",
 CellLabel->
  "In[739]:=",ExpressionUUID->"5a8e5061-ff34-410f-aabc-b32cb660f871"],

Cell[CellGroupData[{

Cell["Direct Arithmetic", "Subsection",ExpressionUUID->"c7296bae-b493-433e-a7df-6dbaf7f1625f"],

Cell["\<\
Mathematical operations on TimeSeries will act on the values of each \
time-value pair.\
\>", "Text",ExpressionUUID->"822b8034-a279-4c5e-8898-4bf2fd5c166c"],

Cell[CellGroupData[{

Cell["Operating on a single time series", "Subsubsection",ExpressionUUID->"c887ef43-e41f-4c97-b90c-0fa50a2d25f9"],

Cell[TextData[{
 "Create a time series starting at time ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "ee911fc0-31e9-45d6-a7cd-07e842d49866"],
 ":"
}], "Text",ExpressionUUID->"370330f7-2d08-4cb2-863c-c87cc78a2949"],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeSeries", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]], "Input",ExpressionUUID->\
"ef3471be-e7b8-4cb9-a94b-b799e12c19e4"],

Cell["Apply some arithmetic operations to the time series:", "Text",ExpressionUUID->"b0d4061d-88ba-40a7-a2ac-d4d5ffbbc490"],

Cell[BoxData[
 RowBox[{"timeSeriesOperations", " ", "=", " ", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{"timeSeries", ",", "\[IndentingNewLine]", 
    RowBox[{"timeSeries", "/", "2"}], ",", "\[IndentingNewLine]", 
    RowBox[{"timeSeries", "-", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "timeSeries"}], "/", "10"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",ExpressionUUID->"cd85393a-4a66-\
4e82-ad24-4d9b229541bd"],

Cell["\<\
Note that the operations are automatically mapped across the time series \
values.\
\>", "Text",ExpressionUUID->"55affae5-d5f0-4aa1-9935-26e700355c47"],

Cell["Visualise the results:", "Text",ExpressionUUID->"ece589e0-1837-40bd-ae5e-ddbc1ad56673"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
  RowBox[{"timeSeriesOperations", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Original\>\"", ",", "\"\<1/2\>\"", ",", "\"\<\[Minus]1\>\"", ",", 
      "\"\<Exp\>\""}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",Expre\
ssionUUID->"12d79a38-370e-4e4d-b6a5-d776a063f6fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combining multiple aligned time series", "Subsubsection",ExpressionUUID->"25de60d0-44a9-4442-a11e-a498e8ff09ed"],

Cell["Create two time series:", "Text",ExpressionUUID->"e85030f7-2e47-44a7-afab-04f31f59c0d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"timeSeries1", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", " ", "6"}], "}"}], ",", 
     
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeSeries2", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "1", ",", " ", "2"}], "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[345]:=",ExpressionUUID->"f5197cfe-6d44-4ff2-b96c-155b24a4b779"],

Cell["Combine the time series in various ways:", "Text",ExpressionUUID->"a374eaa0-bb3e-4d17-8896-70f79eee46d4"],

Cell[BoxData[
 RowBox[{"timeSeriesOperations", " ", "=", " ", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timeSeries1", "+", "timeSeries2"}], ",", "\[IndentingNewLine]", 
    RowBox[{"timeSeries1", "-", "timeSeries2"}], ",", "\[IndentingNewLine]", 
    RowBox[{"timeSeries1", "*", "timeSeries2"}], ",", "\[IndentingNewLine]", 
    RowBox[{"timeSeries1", "/", "timeSeries2"}]}], "\[IndentingNewLine]", 
   "}"}]}]], "Input",
 CellLabel->"",ExpressionUUID->"e8303d50-56dd-47fe-810b-5933baf2d581"],

Cell["Visualise the results:", "Text",ExpressionUUID->"6ce55d30-94fc-4c53-aa0f-d42d02589004"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
  RowBox[{"timeSeriesOperations", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Plus\>\"", ",", "\"\<Minus\>\"", ",", "\"\<Times\>\"", ",", 
      "\"\<Divide\>\""}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"64e6f4d8-662d-48b3-954f-54f5e1e67544"],

Cell["\<\
Note that the 1/0 value which produced an error has been dropped.\
\>", "Text",ExpressionUUID->"56061e18-6c62-44d6-9382-dfb60e25e8ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combining multiple misaligned time series", "Subsubsection",ExpressionUUID->"058de389-a3e7-473b-8e71-eb413bd7e937"],

Cell["Create two time series with misaligned time stamps:", "Text",ExpressionUUID->"bbbe1bbd-cf38-49e9-a908-39afa5f459a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"timeSeries1", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "5", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2", ",", "3.5"}], "}"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeSeries2", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Input",ExpressionUUID->\
"b52e0404-d1bf-4171-b1b3-e5c37a42a86d"],

Cell["Visualise the misalignment:", "Text",ExpressionUUID->"392f1abb-3d25-49ef-a312-4d9b964b5346"],

Cell[BoxData[
 RowBox[{"NumberLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"timeSeries1", "[", "\"\<Times\>\"", "]"}], ",", 
     RowBox[{"timeSeries2", "[", "\"\<Times\>\"", "]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "0.03", "]"}]}]}], "]"}]], "Input",
 CellTags->{
  "NumberLinePlot", 
   "Times"},ExpressionUUID->"7cd635d5-9d6a-40e4-9377-be2dddd7a23f"],

Cell["\<\
Add the time series together and visualise the result (hover your mouse over \
the plot):\
\>", "Text",ExpressionUUID->"eaa7d867-443e-401f-b9e1-33dcfbdff563"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"timeSeriesSum", " ", "=", " ", 
    RowBox[{"timeSeries1", " ", "+", " ", "timeSeries2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Mouseover", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"timeSeries1", ",", " ", "timeSeries2"}], "}"}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List", 
         StyleBox[
         "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["4", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["560", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      {PlotLegends -> {"TS1", "TS2"}, PlotRange -> {Automatic, {0, 15}}, Mesh -> 
       All, Filling -> Bottom},
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "timeSeries1", ",", " ", "timeSeries2", ",", " ", "timeSeriesSum"}], 
      "}"}], ",", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List", 
         StyleBox[
         "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["4", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["600", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      {PlotLegends -> {"TS1", "TS2", "Sum"}, 
       PlotRange -> {Automatic, {0, 15}}, Mesh -> All, Filling -> Bottom},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], "Input",E\
xpressionUUID->"24903eec-9925-4506-af4b-e77a6963b064"],

Cell["\<\
Note that the resulting time series is defined only where the time ranges \
overlap (including interpolated sections).\
\>", "Text",ExpressionUUID->"83ebefc5-5588-41ce-b83f-7c678d734f22"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"6120446e-f855-4e24-a6a2-58c67763a464"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"22831ac0-9655-46dc-bbc9-bee9ce35348c"],

Cell[CellGroupData[{

Cell["Time Series Windows", "Subsection",ExpressionUUID->"4477d6c5-689b-4e25-8d9a-7105adb2fe12"],

Cell[TextData[{
 "A ",
 StyleBox["window",
  FontSlant->"Italic"],
 " of a time series is just a section of it over a specified time interval. \
Windows can be extracted from TimeSeries objects with ",
 StyleBox[ButtonBox["TimeSeriesWindow",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimeSeriesWindow"], "Input"],
 "."
}], "Text",ExpressionUUID->"03f25b27-1516-43c8-8cbf-d6a722b24c46"],

Cell["\<\
Get the daily maximum temperatures for Champaign, IL over the period of one \
year:\
\>", "Text",ExpressionUUID->"d53ba737-94e2-4651-9bae-54f8f1dd9e96"],

Cell[BoxData[
 RowBox[{"champaignYearlyTemps", "=", 
  RowBox[{"TimeSeries", "[", 
   RowBox[{"WeatherData", "[", 
    RowBox[{"\"\<Champaign\>\"", ",", "\"\<MaxTemperature\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2016", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2016", ",", "12", ",", "31"}], "}"}], ",", "\"\<Day\>\""}], 
      "}"}]}], "]"}], "]"}]}]], "Input",
 CellTags->"MaxTemperature",
 CellLabel->
  "In[135]:=",ExpressionUUID->"f7aef56c-e10c-4362-82fd-9e052b30df57"],

Cell["Visualise the temperature distribution throughout the year:", "Text",ExpressionUUID->"71e39bc6-d480-414e-af6c-12635e1af6b3"],

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"TimeSeries", "[", 
    RowBox[{
     RowBox[{"QuantityMagnitude", "[", "champaignYearlyTemps", "]"}], ",", 
     RowBox[{"MissingDataMethod", "\[Rule]", "\"\<Interpolation\>\""}]}], 
    "]"}], ",", " ", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Sequence", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["5", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["616", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Sequence[
    Automatic, "PDF", Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {"Temperature (\[Degree]C)", "Frequency density"}, 
     ImageSize -> 400],
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellTags->"QuantityMagnitude",
 CellLabel->
  "In[156]:=",ExpressionUUID->"8f7f1cc2-a496-4028-9e6c-e826558e995f"],

Cell["Extract the summer temperatures from the time series:", "Text",ExpressionUUID->"bf761057-2bd5-440b-ae80-debb55d7d3bb"],

Cell[BoxData[
 RowBox[{"champaignSummerTemps", "=", 
  RowBox[{"TimeSeriesWindow", "[", 
   RowBox[{"champaignYearlyTemps", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Jun 21 2016\>\"", ",", "\"\<Sep 21 2016\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellTags->"TimeSeriesWindow",
 CellLabel->
  "In[148]:=",ExpressionUUID->"fc5051d6-4e1f-43a5-a475-285c1e3c24a8"],

Cell["\<\
Plotting both time series together shows that summer weather is generally \
warmer and less variable:\
\>", "Text",ExpressionUUID->"4125037d-0192-4eed-98ae-26f28a44973c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SmoothHistogram", "[", 
      RowBox[{"#", ",", "  ", 
       InterpretationBox[
        DynamicModuleBox[{Typeset`open = False}, 
         TemplateBox[{"Expression", 
           StyleBox[
           "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
           GridBox[{{
              RowBox[{
                TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                TagBox["Sequence", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                
                TagBox["5", "IconizedItem"]}]}, {
              RowBox[{
                TagBox["\"Byte count: \"", "IconizedLabel"], 
                "\[InvisibleSpace]", 
                TagBox["616", "IconizedItem"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           Dynamic[Typeset`open]},
          "IconizedObject"]],
        Sequence[
        Automatic, "PDF", Frame -> {{True, False}, {True, False}}, 
         FrameLabel -> {"Temperature (\[Degree]C)", "Frequency density"}, 
         ImageSize -> 400],
        SelectWithContents->True,
        Selectable->False]}], "]"}], "&"}], "/@", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TimeSeries", "[", 
       RowBox[{
        RowBox[{"QuantityMagnitude", "[", "champaignYearlyTemps", "]"}], ",", 
        
        RowBox[{"MissingDataMethod", "\[Rule]", "\"\<Interpolation\>\""}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"TimeSeries", "[", 
       RowBox[{
        RowBox[{"QuantityMagnitude", "[", "champaignSummerTemps", "]"}], ",", 
        
        RowBox[{"MissingDataMethod", "\[Rule]", "\"\<Interpolation\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "}"}]}], " ", "//", " ", 
   "Show"}]}]], "Input",
 CellChangeTimes->{{3.907388938430196*^9, 3.9073889744087296`*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"c8ed3d40-5acd-4f99-b041-6eb430d48126"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"8c6de40c-7442-40b2-8a24-bf6d6bd5c949"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"703c9737-5b54-44d3-8701-a63dbf13ffb4"],

Cell[CellGroupData[{

Cell["Moving Maps", "Subsection",ExpressionUUID->"7a2bee36-d088-445e-883d-11293276c30d"],

Cell[TextData[{
 "A ",
 StyleBox["moving average",
  FontSlant->"Italic"],
 " of a list of data is a series of averages taken over sequential \
sub-sequences of the data, effectively \[OpenCurlyDoubleQuote]smoothing\
\[CloseCurlyDoubleQuote] it. This can be done with ",
 StyleBox[ButtonBox["MovingAverage",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/MovingAverage"], "Input"],
 ":"
}], "Text",ExpressionUUID->"1f794072-99f4-46ca-86dd-09d9472c9338"],

Cell[BoxData[
 RowBox[{"MovingAverage", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", "3"}], 
  "]"}]], "Input",
 CellLabel->
  "In[177]:=",ExpressionUUID->"becd92e0-e3bf-4668-bd2b-8828557c1a86"],

Cell[TextData[{
 StyleBox[ButtonBox["MovingMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/MovingMap"], "Input"],
 " is a generalisation of MovingAverage that is particularly useful for time \
series data:"
}], "Text",ExpressionUUID->"ba6ff6e6-9367-42e6-a721-8195bc5733ec"],

Cell[BoxData[
 RowBox[{"MovingMap", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
   RowBox[{"Quantity", "[", 
    RowBox[{"3", ",", "\"\<Events\>\""}], "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[246]:=",ExpressionUUID->"8ad9430c-493b-42a8-adf1-62826d2d3c6b"],

Cell[TextData[{
 "Note that without the ",
 StyleBox[ButtonBox["Quantity",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Quantity"], "Input"],
 " specification, MovingMap looks at the intervals ",
 StyleBox["between",
  FontSlant->"Italic"],
 " points (i.e. windows), not the points themselves:"
}], "Text",ExpressionUUID->"38cd23e4-4e3b-4dee-9348-8d71f2eedfc4"],

Cell[BoxData[
 RowBox[{"MovingMap", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", "2"}], 
  "]"}]], "Input",
 CellLabel->
  "In[247]:=",ExpressionUUID->"926e981b-b721-4b5b-8dd7-a94216bc77ab"],

Cell[CellGroupData[{

Cell["Window size", "Subsubsection",ExpressionUUID->"e37c59b7-7adf-4eff-b20a-9c9932f809ff"],

Cell["\<\
The size of windows used in a moving map is highly customisable.\
\>", "Text",ExpressionUUID->"fbd35926-1fac-4070-b3f5-095a644adfd0"],

Cell["\<\
Get the daily temperatures for Champaign, IL over the winter period:\
\>", "Text",ExpressionUUID->"9b6da1a2-d8ba-4f58-9461-16f06b680390"],

Cell[BoxData[
 RowBox[{
  RowBox[{"champaignWinterTemps", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{
     RowBox[{"WeatherData", "[", 
      RowBox[{"\"\<Chicago\>\"", ",", "\"\<Temperature\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Dec 2016\>\"", ",", "\"\<Feb 2017\>\""}], "}"}]}], "]"}],
      ",", 
     RowBox[{"MissingDataMethod", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[161]:=",ExpressionUUID->"d831bb18-4756-4746-93ad-204f091d184e"],

Cell["\<\
Take a moving median average over windows of at most one day:\
\>", "Text",ExpressionUUID->"7e16da43-1bb8-4d83-9527-16be628bcca7"],

Cell[BoxData[
 RowBox[{"dailyMedian1", "=", 
  RowBox[{"MovingMap", "[", 
   RowBox[{"Median", ",", "champaignWinterTemps", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "\"\<Day\>\""}], "}"}], "}"}]}], "]"}]}]], "Input",
 CellTags->{"WienerProcess", "MovingMap"},
 CellLabel->
  "In[163]:=",ExpressionUUID->"1a4b043b-5ec6-4a7f-87e0-5f2768a6e2b0"],

Cell["\<\
Take another moving median average over regular 4-hour windows:\
\>", "Text",ExpressionUUID->"127eb481-4a6c-4bbc-9e67-cd251802cf4a"],

Cell[BoxData[
 RowBox[{"dailyMedian2", "=", 
  RowBox[{"MovingMap", "[", 
   RowBox[{"Median", ",", "champaignWinterTemps", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "\"\<Day\>\""}], "}"}], ",", "Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "\"\<Hour\>\""}], "}"}]}], "}"}]}], "]"}]}]], "Input",\

 CellLabel->
  "In[164]:=",ExpressionUUID->"f9be72fc-58a1-419b-8cca-25651c23e1a9"],

Cell["\<\
At first glance, the new time series look similar (hover your mouse over the \
plot):\
\>", "Text",ExpressionUUID->"14f3dbe8-9621-44cf-93c0-6df84afb2d4b"],

Cell[BoxData[
 RowBox[{"Mouseover", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"champaignWinterTemps", ",", " ", "dailyMedian1"}], "}"}], ",", 
     
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", 
         StyleBox[
         "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["Sequence", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["3", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["568", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      Sequence[PlotLegends -> {"Original", "Median 1"}, PlotStyle -> {
         Opacity[0.2], 
         Opacity[1]}, ImageSize -> 600],
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"champaignWinterTemps", ",", " ", "dailyMedian2"}], "}"}], ",", 
     " ", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", 
         StyleBox[
         "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["Sequence", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["3", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["568", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      Sequence[PlotLegends -> {"Original", "Median 2"}, PlotStyle -> {
         Opacity[0.2], 
         Opacity[1]}, ImageSize -> 600],
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[221]:=",ExpressionUUID->"881ca6a6-1cd8-4964-9c95-f6a3878b7fc7"],

Cell["However, only the second set of data is regular:", "Text",ExpressionUUID->"d42ae787-be25-4b54-901d-9b8725117172"],

Cell[BoxData[
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"#", ",", 
      InterpretationBox[
       DynamicModuleBox[{Typeset`open = False}, 
        TemplateBox[{"List", 
          StyleBox[
          "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
          GridBox[{{
             RowBox[{
               TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["List", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["2", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Byte count: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox["184", "IconizedItem"]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          Dynamic[Typeset`open]},
         "IconizedObject"]],
       {Filling -> Bottom, ImageSize -> 400},
       SelectWithContents->True,
       Selectable->False]}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"dailyMedian1", ",", " ", "dailyMedian2"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[220]:=",ExpressionUUID->"8810ac2b-42a8-42d6-a8d2-9d33208fe494"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Window alignment", "Subsubsection",ExpressionUUID->"dac0805e-5d04-438b-8042-1e068d2efd7a"],

Cell["\<\
Windows in a moving map can be aligned right (default), centre or left, \
relative to the time stamps in the data.\
\>", "Text",ExpressionUUID->"2c4f8a2e-f854-4f6f-b849-a21a45bac93b"],

Cell[BoxData[
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MovingMap", "[", 
     RowBox[{"f", ",", 
      RowBox[{"TimeSeries", "[", 
       RowBox[{"Range", "[", "5", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Quantity", "[", 
         RowBox[{"3", ",", "\"\<Events\>\""}], "]"}], ",", " ", "#"}], 
       "}"}]}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Right", ",", " ", "Center", ",", " ", "Left"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"b4631284-5974-4bc7-888e-5864fe1bf9d7"],

Cell["Get stock data for Apple from 2000 to 2017:", "Text",ExpressionUUID->"db168e83-3138-4dbb-a8d7-424716e08c24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"appleStocks", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{"FinancialData", "[", 
     RowBox[{"\"\<AAPL\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<2000\>\"", ",", "\"\<2017\>\""}], "}"}]}], "]"}], "]"}]}],
   ";"}]], "Input",
 CellLabel->
  "In[231]:=",ExpressionUUID->"376b985d-c2fe-4586-8a0a-32e937dc7869"],

Cell["\<\
Take three 6-month moving median averages with different alignments:\
\>", "Text",ExpressionUUID->"cc7cd414-aa3a-4fa3-973c-a1211a52b60f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "appleMedian1", ",", " ", "appleMedian2", ",", " ", "appleMedian3"}], 
    "}"}], "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"MovingMap", "[", 
       RowBox[{"Median", ",", "appleStocks", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Quantity", "[", 
           RowBox[{"6", ",", "\"\<Months\>\""}], "]"}], ",", "#"}], "}"}]}], 
       "]"}], "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Right", ",", "Center", ",", "Left"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellTags->{"Right", "Center", "Left"},
 CellLabel->
  "In[232]:=",ExpressionUUID->"e8adbb7c-9ee1-4586-b48d-fbc6337ad7b2"],

Cell["Visualise the moving averages:", "Text",ExpressionUUID->"353ec1fd-d355-4330-92f2-9129f95fa7d9"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DateListLogPlot", "[", 
    RowBox[{"appleStocks", ",", " ", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List", 
         StyleBox[
         "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["2", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["248", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      {PlotStyle -> GrayLevel[0.9], ImageSize -> 600},
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateListLogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "appleMedian1", ",", " ", "appleMedian2", ",", " ", "appleMedian3"}], 
      "}"}], ",", " ", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List", 
         StyleBox[
         "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["1", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["168", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      {PlotLegends -> {Right, Center, Left}},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[245]:=",ExpressionUUID->"2d6f1796-00d2-43be-9667-d4487dd5a371"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Custom functions", "Subsubsection",ExpressionUUID->"3390f659-89fe-465d-a948-f59546681e34"],

Cell["\<\
While it is typical to use a statistical average in MovingMap (such as Mean \
or Median), it can take arbitrary functions.\
\>", "Text",ExpressionUUID->"9f12438a-4af6-491c-9c5c-73c7d6fbf74f"],

Cell["Get all data for the S&P 500 index:", "Text",ExpressionUUID->"16d01292-26b9-462e-9caa-192074516027"],

Cell[BoxData[
 RowBox[{"sp500AllData", " ", "=", " ", 
  RowBox[{"TimeSeries", "[", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<SP500\>\"", ",", "All"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"5cd37e61-3479-40b8-b4ac-1b3fcbc279e5"],

Cell["Apply and visualise different moving map functions:", "Text",ExpressionUUID->"9789d240-fb26-4be7-93fb-ba8ac8d5718b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sp500StandardDeviation", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"StandardDeviation", ",", "sp500AllData", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"5", "*", "365"}], ",", "\"\<Day\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"sp500InterquartileRange", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{"InterquartileRange", ",", "sp500AllData", ",", "\"\<Year\>\""}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sp500Range", "=", 
   RowBox[{"MovingMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Max", "[", "#", "]"}], "-", 
       RowBox[{"Min", "[", "#", "]"}]}], "&"}], ",", "sp500AllData", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "\"\<Year\>\""}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellTags->"InterquartileRange",
 CellLabel->"In[37]:=",ExpressionUUID->"7e0bedea-fcdb-483b-a5e0-c1874c9674c2"],

Cell[BoxData[
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DateListPlot", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"Filling", " ", "->", " ", "Axis"}]}], "]"}], "&"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
    "sp500AllData", ",", " ", "sp500StandardDeviation", ",", " ", 
     "sp500InterquartileRange", ",", " ", "sp500Range"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"9170e329-bf0f-4810-a029-6fd929b344ab"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"1e893178-e705-4d21-b028-daa58e6af09a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e3a4573b-9215-48bb-9568-bffde18e6d7e"],

Cell[CellGroupData[{

Cell["Resampling", "Subsection",ExpressionUUID->"3efff24e-d567-4c32-a053-6115a6c49c07"],

Cell["\<\
As seen earlier, irregularly sampled time series data can be regularised with \
TimeSeriesResample (or by using TemporalRegularity as an option in \
TimeSeries).\
\>", "Text",ExpressionUUID->"d2a22ec8-d1be-46a2-8474-2024ffa90491"],

Cell[CellGroupData[{

Cell["Business days", "Subsubsection",ExpressionUUID->"20b232bc-632d-4a4c-afba-03c457648273"],

Cell[TextData[{
 "For financial data, it is often useful to resample it according to ",
 Cell[BoxData["\<\"BusinessDay\"\>"], "Input",ExpressionUUID->
  "49c2f951-0554-421c-8d31-ba3513d43c36"],
 "."
}], "Text",ExpressionUUID->"a00243cb-6a57-4fe8-8fb2-77205f505561"],

Cell["Get closing values for Google from December 2016:", "Text",ExpressionUUID->"76722568-3bfa-483e-ad21-835686c09e57"],

Cell[BoxData[
 RowBox[{"googleClosing", "=", 
  RowBox[{"TimeSeries", "[", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<GOOGL\>\"", ",", "\"\<Close\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2016", ",", "12", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2016", ",", "12", ",", "31"}], "}"}]}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[249]:=",
 CellID->497898358,ExpressionUUID->"f3456f64-c2a9-4eaf-a676-9486b98f3223"],

Cell["This time series is not regularly sampled:", "Text",ExpressionUUID->"5202dd15-5fa7-4a02-9030-3563505c771b"],

Cell[BoxData[
 RowBox[{"RegularlySampledQ", "[", "googleClosing", "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"929ee527-b371-4436-8254-7c11399fa73a"],

Cell["Resample the data according to business day:", "Text",ExpressionUUID->"d19ee3ab-481e-400a-aa3a-ce79578713cb"],

Cell[BoxData[
 RowBox[{"googleClosingRegular", "=", 
  RowBox[{"TimeSeriesResample", "[", 
   RowBox[{"googleClosing", ",", "\"\<BusinessDay\>\""}], "]"}]}]], "Input",
 CellTags->"BusinessDay",
 CellLabel->
  "In[255]:=",ExpressionUUID->"881954ea-2ab2-45ce-a673-5f6be89478be"],

Cell[TextData[{
 "(Note that what you consider to be a business day may depend on your \
region. The default ",
 StyleBox[ButtonBox["HolidayCalendar",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/HolidayCalendar"], "Input"],
 " is that of the United States, but you can set a calendar or location of \
your choice.)"
}], "Text",ExpressionUUID->"c6077c33-3c57-403c-b035-12c5890cddef"],

Cell["\<\
The path has not changed, but the time series is now regularly sampled \
(relative to calendar time, at least):\
\>", "Text",ExpressionUUID->"29fc6845-0c5d-4058-a341-c88f14216a02"],

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{
   RowBox[{"googleClosing", "[", "\"\<Path\>\"", "]"}], ",", " ", 
   RowBox[{"googleClosingRegular", "[", "\"\<Path\>\"", "]"}]}], 
  "]"}]], "Input",
 CellTags->"Path",
 CellLabel->
  "In[253]:=",ExpressionUUID->"f51396a1-8127-41b0-adf2-cbfca4746dc8"],

Cell[BoxData[
 RowBox[{"RegularlySampledQ", "[", "googleClosingRegular", "]"}]], "Input",
 CellLabel->
  "In[254]:=",ExpressionUUID->"8643760e-812c-446b-8ffe-33f817778977"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Downsampling", "Subsubsection",
 CellTags->
  "Downsampling",ExpressionUUID->"459c9496-d760-4bfc-a2be-96cbc0f59177"],

Cell[TextData[{
 "When no specification is given, the default resampling setting is the value \
of ",
 StyleBox[ButtonBox["MinimumTimeIncrement",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/MinimumTimeIncrement"], "Input"],
 "\[LongDash]the smallest interval between any two successive time stamps. \
However, you may wish to reduce the data by sampling less frequently\
\[LongDash]a process known as ",
 StyleBox["downsampling",
  FontSlant->"Italic"],
 "."
}], "Text",ExpressionUUID->"db2969f5-fea9-403f-85cf-feef7bbf8f83"],

Cell["Get stock data for Caterpillar Inc. from 2015 to 2020:", "Text",ExpressionUUID->"8c74596e-5450-49b2-89b1-e75fffe27257"],

Cell[BoxData[
 RowBox[{
  RowBox[{"catStocksDaily", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{"FinancialData", "[", 
     RowBox[{"\"\<CAT\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<2015\>\"", ",", " ", "\"\<2020\>\""}], "}"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[335]:=",ExpressionUUID->"b952bad7-587a-4bfc-ae3f-2876df18c0d1"],

Cell["There are lots of points in this dataset:", "Text",ExpressionUUID->"02f623bd-c958-4d47-bc7e-0a297ee56144"],

Cell[BoxData[
 RowBox[{"catStocksDaily", "[", "\"\<PathLength\>\"", "]"}]], "Input",
 CellLabel->
  "In[336]:=",ExpressionUUID->"66bd6a0a-80ce-4d4b-98b5-61db16061da8"],

Cell["Sample the data monthly to reduce the number of points:", "Text",ExpressionUUID->"4f12130e-d6f7-41ac-9840-2c8b45946792"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"catStocksMonthly", "=", 
    RowBox[{"TimeSeriesResample", "[", 
     RowBox[{"catStocksDaily", ",", "\"\<Month\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"catStocksMonthly", "[", "\"\<PathLength\>\"", "]"}]}], "Input",
 CellTags->"False",ExpressionUUID->"3aeb040e-ee40-4566-83ca-7d3994daf826"],

Cell["\<\
Visualise the path differences (hover your mouse over the plot):\
\>", "Text",ExpressionUUID->"823097f2-1fe1-4171-896c-4100f6adf24a"],

Cell[BoxData[
 RowBox[{"Mouseover", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DateListPlot", "[", 
    RowBox[{"catStocksDaily", ",", " ", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List", 
         StyleBox[
         "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["2", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["680", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      {PlotRange -> {{{2015, 1, 1}, {2020, 12, 31}}, {30, 190}}, 
       PlotRangePadding -> {3.942*^6, 10}},
      SelectWithContents->True,
      Selectable->False]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{"catStocksMonthly", ",", " ", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List", 
         StyleBox[
         "\"Plot options\"", "IconizedCustomName", StripOnInput -> False], 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["2", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["680", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      {PlotRange -> {{{2015, 1, 1}, {2020, 12, 31}}, {30, 190}}, 
       PlotRangePadding -> {3.942*^6, 10}},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellTags->"False",
 CellLabel->
  "In[382]:=",ExpressionUUID->"c77e74e0-d659-498e-93cd-4fd8293aaf87"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"2ed3c8a2-1736-4cca-be60-25a2375fd29b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a8a83723-17d3-4e21-a238-edd895da6465"],

Cell[CellGroupData[{

Cell["Mapping", "Subsection",ExpressionUUID->"77900cc3-e4be-492b-a4ad-525323e4271f"],

Cell[TextData[{
 "A common financial calculation is to obtain the log returns of stocks and \
then find the underlying distribution. Getting the log returns can be done \
with ",
 StyleBox[ButtonBox["TimeSeriesMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimeSeriesMap"], "Input"],
 "\[LongDash]the time series equivalent of ",
 StyleBox[ButtonBox["Map",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Map"], "Input"],
 "."
}], "Text",ExpressionUUID->"0633186e-e036-4545-9026-943f3304b57d"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Get log returns data",
 FontColor->RGBColor[
  0.7956664377813382, 0.220004577706569, 0.]]], "Subsubsubsection",
 CellMargins->{{120, Inherited}, {
   Inherited, 30}},ExpressionUUID->"23f6d844-f001-4d8b-af37-856f9d15566e"],

Cell["Get stock data for Apple from 2012:", "Text",ExpressionUUID->"785b0410-8564-4321-8a72-3a9872eca2b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"appleStocks", "=", 
    RowBox[{"TimeSeries", "[", 
     RowBox[{"FinancialData", "[", 
      RowBox[{"\"\<AAPL\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"2012", ",", "1", ",", "1"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"DateListPlot", "[", "appleStocks", "]"}]}], "Input",
 CellLabel->"",ExpressionUUID->"5e5ccb59-8849-4d4d-9041-5750fb7ff52b"],

Cell["\<\
Use direct arithmetic to obtain the log returns of the ratios of the stock \
prices:\
\>", "Text",ExpressionUUID->"4f9d870e-2e9e-4ea6-954e-ae771401790c"],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Ratios", "[", "appleStocks", "]"}], "]"}]], "Input",
 CellLabel->
  "In[463]:=",ExpressionUUID->"55e8e556-20e5-482c-be57-f7f311119dd0"],

Cell["\<\
(Recall that arithmetic operations are mapped across TimeSeries data \
automatically.)\
\>", "Text",ExpressionUUID->"2f8e07f4-11d1-4d63-93ae-5dadbe143da7"],

Cell["Get the same data with TimeSeriesMap in a more readable way:", "Text",ExpressionUUID->"8097abba-805f-4c37-8162-516287fc624d"],

Cell[BoxData[
 RowBox[{"appleLogReturns", "=", 
  RowBox[{"TimeSeriesMap", "[", 
   RowBox[{"Log", ",", 
    RowBox[{"Ratios", "[", "appleStocks", "]"}]}], "]"}]}]], "Input",
 CellTags->
  "TimeSeriesMap",ExpressionUUID->"bb3587ba-61cc-4312-b11a-83ee270ed6ae"],

Cell["Visualise the log returns:", "Text",ExpressionUUID->"3f42f897-9b90-419b-bf6f-6331eedaca94"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "appleLogReturns", "]"}]], "Input",
 CellTags->"TimeSeriesMap",
 CellLabel->
  "In[354]:=",ExpressionUUID->"a41841ba-ad61-4000-8f8f-591a0d9adc02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Fit distributions to the data",
 FontColor->RGBColor[
  0.7956664377813382, 0.220004577706569, 0.]]], "Subsubsubsection",
 CellMargins->{{120, Inherited}, {
   Inherited, 30}},ExpressionUUID->"eb1e2b91-16df-43ff-8d10-169056a515c4"],

Cell[TextData[{
 "Assuming that the data is distributed according to a normal or Tsallis ",
 StyleBox["q",
  FontSlant->"Italic"],
 "-Gaussian distribution, find parameters that best fit these distributions \
to the data:"
}], "Text",ExpressionUUID->"6b101f0f-395e-4028-b142-09d491741992"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"estimatedNormalDist", "=", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"appleLogReturns", "[", "\"\<ValueList\>\"", "]"}], "]"}], ",", 
     
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"estimatedTsallisQGaussianDist", "=", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"appleLogReturns", "[", "\"\<ValueList\>\"", "]"}], "]"}], ",", 
    RowBox[{"TsallisQGaussianDistribution", "[", 
     RowBox[{"\[Mu]", ",", "\[Beta]", ",", "q"}], "]"}]}], "]"}]}]}], "Input",\

 CellTags->{
  "EstimatedDistribution", "Flatten", 
   "NormalDistribution"},ExpressionUUID->"a2a7553c-4de9-4e67-ab3b-\
2f43465e0add"],

Cell["Visualise the distributions against the data:", "Text",ExpressionUUID->"22dd831c-4705-4203-93ad-9dffeb9e59b2"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"QuantityMagnitude", "[", "appleLogReturns", "]"}], ",", 
     "\[IndentingNewLine]", "Automatic", ",", "\[IndentingNewLine]", 
     "\"\<PDF\>\""}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{"estimatedNormalDist", ",", " ", "x"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PDF", "[", 
         RowBox[{"estimatedTsallisQGaussianDist", ",", " ", "x"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "0.05"}], ",", "0.05"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Normal\>\"", ",", "\"\<TsallisQGaussian\>\"", ",", 
        "\"\<SmoothKernel\>\""}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[468]:=",ExpressionUUID->"e82103cf-e3e0-4b65-ac59-d6ec5688d05e"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"dbf94ee3-345c-45ba-9a2e-304265aeb033"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"61d8005f-1795-4206-920b-9780124c5c24"],

Cell[CellGroupData[{

Cell["Threading", "Subsection",ExpressionUUID->"1d66948a-c076-4734-9a50-31a67cbf2020"],

Cell[TextData[{
 StyleBox[ButtonBox["TimeSeriesThread",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimeSeriesThread"], "Input"],
 " is the time series equivalent of ",
 StyleBox[ButtonBox["MapThread",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/MapThread"], "Input"],
 "."
}], "Text",ExpressionUUID->"babd96a8-3960-46ab-b095-56ada17e935f"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Basic example",
 FontColor->RGBColor[
  0.7956664377813382, 0.220004577706569, 0.]]], "Subsubsubsection",
 CellMargins->{{120, Inherited}, {
   Inherited, 30}},ExpressionUUID->"0e77d66b-ae18-4f30-a6fe-e1e1c2a3c543"],

Cell[TextData[{
 "Thread two time series together using a function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "aa3e8c88-c8f8-4a68-977d-9ce5bb06138e"],
 ":"
}], "Text",ExpressionUUID->"0082f824-b0bf-4882-96f5-58799610aacc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ts1", "=", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["x", "2"], ",", 
       SubscriptBox["x", "3"], ",", 
       SubscriptBox["x", "4"], ",", 
       SubscriptBox["x", "5"]}], "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ts2", "=", 
    RowBox[{"TimeSeries", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["y", "1"], ",", 
        SubscriptBox["y", "2"], ",", 
        SubscriptBox["y", "3"], ",", 
        SubscriptBox["y", "4"], ",", 
        SubscriptBox["y", "5"]}], "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TimeSeriesThread", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"ts1", ",", "ts2"}], "}"}]}], "]"}], "[", "\"\<Path\>\"", 
  "]"}]}], "Input",
 CellID->745060400,ExpressionUUID->"b9f45fce-cd4b-4a63-94bc-08b19226074d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["A min-max envelope",
 FontColor->RGBColor[
  0.7956664377813382, 0.220004577706569, 0.]]], "Subsubsubsection",
 CellMargins->{{120, Inherited}, {
   Inherited, 30}},ExpressionUUID->"60b0b265-aa9a-4698-8660-d42f6424da33"],

Cell["\<\
TimeSeriesThread can be useful for computing \[OpenCurlyDoubleQuote]envelopes\
\[CloseCurlyDoubleQuote] for multiple time series paths.\
\>", "Text",ExpressionUUID->"0e53c977-a497-43b1-b28b-3b91c882dc5b"],

Cell["Simulate 100 geometric Brownian motion processes:", "Text",ExpressionUUID->"1a296425-3fe9-4e8d-a0b1-35924e339be7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"geoBrownianMotion", "=", 
   RowBox[{"RandomFunction", "[", 
    RowBox[{
     RowBox[{"GeometricBrownianMotionProcess", "[", 
      RowBox[{"0.0086", ",", "0.0217", ",", "26.88"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0.01"}], "}"}], ",", "100"}], "]"}]}], 
  ";"}]], "Input",
 CellTags->{"GeometricBrownianMotionProcess", "TimeSeriesThread"},
 CellLabel->
  "In[215]:=",ExpressionUUID->"0633d212-2446-4464-b268-aef417510194"],

Cell["\<\
TimeSeriesThread can be useful for calculating confidence intervals.\
\>", "Text",
 CellChangeTimes->{{3.9073888522388315`*^9, 
  3.907388853039178*^9}},ExpressionUUID->"6071482d-6447-488b-ae0d-\
b2aab969c9e0"],

Cell["\<\
Compute the mean and standard deviation of the data over time:\
\>", "Text",ExpressionUUID->"6f4b49fe-e1c5-4610-8052-eba572460741"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", "=", 
   RowBox[{"TimeSeriesThread", "[", 
    RowBox[{"Mean", ",", "geoBrownianMotion"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"TimeSeriesThread", "[", 
    RowBox[{"StandardDeviation", ",", "geoBrownianMotion"}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[216]:=",ExpressionUUID->"deb3782c-d1e5-456d-98f2-2ee5ceff1cad"],

Cell[TextData[{
 "Combine these to calculate a 95% confidence interval using the formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "(", "t", ")"}], "-", 
      RowBox[{"1.95", " ", 
       RowBox[{"\[Sigma]", "(", "t", ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[Mu]", "(", "t", ")"}], "+", 
      RowBox[{"1.95", " ", 
       RowBox[{"\[Sigma]", "(", "t", ")"}]}]}]}], "}"}], TraditionalForm]],
  ExpressionUUID->"dd39ac0e-6a0e-46f5-a991-3440b53d22b4"],
 ":"
}], "Text",ExpressionUUID->"ae32ae53-4440-4155-94ba-b6a33a030abd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"confidenceInterval", "=", 
   RowBox[{"TimeSeriesThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "-", 
         RowBox[{"1.95", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
        ",", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{"1.95", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}]}], 
       "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[218]:=",
 CellID->272630947,ExpressionUUID->"f85ef949-bcb5-4ec6-b17b-1e836778039d"],

Cell["Visualise the result:", "Text",ExpressionUUID->"48039404-abf8-47db-ae37-e22da431c728"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"geoBrownianMotion", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", "0.1", "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"confidenceInterval", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[503]:=",
 CellID->22733565,ExpressionUUID->"e683f918-aca8-4c0b-828b-db8cd3c2df03"],

Cell["", "Text",ExpressionUUID->"2e0d4ccf-7e7c-4b45-bc4f-6cf6586d8694"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"a0891170-c867-40af-999e-3150b3375e56"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9ab8640c-420d-433d-a207-5b0df097f94c"],

Cell[CellGroupData[{

Cell["Exercise 2", "Subsection",ExpressionUUID->"f76d51aa-1c8b-4713-8e86-99f23ed79c63"],

Cell[TextData[{
 "In this exercise, you will explore how to customise resampling using ",
 StyleBox[ButtonBox["TimeSeriesAggregate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimeSeriesAggregate"], "Input"],
 ", essentially converting an irregular time series to a regular time \
series."
}], "Text",ExpressionUUID->"d82be11e-0444-479c-99c8-842129fbe089"],

Cell[TextData[{
 "a) Using the Caterpillar Inc. data from the ",
 ButtonBox["Downsampling section",
  BaseStyle->"Hyperlink",
  ButtonData->"Downsampling"],
 ", apply TimeSeriesAggregate, holding the window to the right and taking the \
maximum value.\nb) Check that the new time series is regularly sampled.\nc) \
Plot the original time series and the new time series together."
}], "Text",ExpressionUUID->"571b6531-3177-4b8c-b257-3d9230764cd5"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"206bdba3-a69e-4cde-9556-bd78ab4ada21"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0859188d-0cce-4e5d-9d9d-3137b3e08cd2"],

Cell[CellGroupData[{

Cell["Summary", "Section",ExpressionUUID->"0205c695-a5c9-4bea-bd9c-6a829d5b7bba"],

Cell["\<\
There are three types of time series object in the Wolfram Language (discrete \
paths, continuous paths, multiple paths).\
\>", "Item",ExpressionUUID->"17193ad9-e5ea-45b5-a0a1-02f95c33aab9"],

Cell["\<\
Time series can be constructed in many ways (data lists, start and end dates, \
external data import, random processes).\
\>", "Item",ExpressionUUID->"5af4ffcc-77cc-4429-8ba9-af6f81de6bc6"],

Cell["\<\
Lots of information can be extracted from a TimeSeries object (dates, times, \
date path, path function, path length, \[Ellipsis]).\
\>", "Item",ExpressionUUID->"4f463522-e84e-4f4e-a36b-e2f1363fb916"],

Cell["\<\
Time series can be modified to make later analysis easier (missing data \
points, irregular time steps).\
\>", "Item",ExpressionUUID->"2188524e-fab6-4cca-95b3-ae62640e058f"],

Cell["\<\
Time series can be operated on in many ways (direct arithmetic, window \
extraction, moving averages, resampling, mapping, threading, \[Ellipsis]).\
\>", "Item",ExpressionUUID->"a5962510-6b50-4788-9aa7-a5ca0ad98cc6"],

Cell[BoxData[""], "EndOfSlide",ExpressionUUID->"98a7de22-75ad-4d38-b987-5e6c53c9a8a8"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1383, 819.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"01 Times series: The Basics",
TaggingRules->{
 "WolframUNotebook" -> True, "SlideshowSettings" -> {"Toolbar" -> True}, 
  "TryRealOnly" -> False},
FontTracking->"Plain",
ButtonBoxOptions->{BaseStyle->None},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (May 26, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], MenuCommandKey :> "-"], 
      Cell[
       StyleData[All, "SlideShow"], MenuCommandKey :> "="]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo", StyleDefinitions -> StyleData["Title"]], 
          CellMargins -> {{120, 0}, {0, 130}}, CellGroupingRules -> 
          "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> True,
           CellAutoOverwrite -> True, ShowCellLabel -> False, 
          CellFrameMargins -> {{0, 0}, {0, 0}}, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
          GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], Thickness -> 
          Medium, Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`BackFaceColor -> 
          GrayLevel[0], $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData[
          "WolframULogo", "SlideShow", StyleDefinitions -> 
           StyleData["WolframULogo"]], 
          CellFrameLabels -> {{None, None}, {None, None}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{120, 0}, {0, 40}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 81, FontWeight -> 
             "Regular", FontSlant -> "Plain", FontTracking -> -0.75, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 81, FontWeight -> "Regular", 
             FontSlant -> "Plain", FontTracking -> -0.75, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData[
             "Title", "Slideshow Working", StyleDefinitions -> 
              StyleData["Title", "SlideShow"]]], 
            Cell[
             StyleData[
             "Title", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Title", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{120, 0}, {0, 12}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 40, FontWeight -> 
             "Regular", FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 12}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subtitle", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TitleGraphic"], CellMargins -> {{120, 0}, {0, 25}}, 
             CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> 
             False, GeneratedCell -> True, CellAutoOverwrite -> True, 
             ShowCellLabel -> False, DefaultFormatType -> 
             DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
             FormatType -> StandardForm, ShowStringCharacters -> False, 
             FrontFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, 
             GraphicsColor -> GrayLevel[0], PointSize -> Absolute[3], 
             Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
             StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
             FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
             1, $CellContext`BackFaceColor -> 
             GrayLevel[0], $CellContext`StripStyleOnPaste -> 
             False, $CellContext`BackFaceOpacity -> 1], 
            Cell[
             StyleData["TitleGraphic", "SlideShow"], 
             CellMargins -> {{120, 0}, {0, 25}}, CellGroupingRules -> 
             "GraphicsGrouping", PageBreakWithin -> False, GeneratedCell -> 
             True, CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, LanguageCategory -> 
             "NaturalLanguage", FormatType -> StandardForm, 
             ShowStringCharacters -> False, FrontFaceColor -> GrayLevel[0], 
             FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
             Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> 
             False, StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 
             10, FontWeight -> "Plain", FontColor -> GrayLevel[0], 
             FontOpacity -> 1, $CellContext`BackFaceColor -> 
             GrayLevel[0], $CellContext`StripStyleOnPaste -> 
             False, $CellContext`BackFaceOpacity -> 1], 
            Cell[
             StyleData[
             "TitleGraphic", "Slideshow Working", StyleDefinitions -> 
              StyleData["TitelGraphic", "SlideShow"]]], 
            Cell[
             StyleData[
             "TitleGraphic", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["WolframULogo", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "TitleGraphic", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["WolframULogo", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, 
             ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}}, 
             FontFamily -> "Source Sans Pro", FontSize -> 70, FontWeight -> 
             "Regular", FontSlant -> "Plain", FontTracking -> -0.5, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Section", "SlideShow"], CellFrame -> {{0, 0}, {0, 0}},
              ShowGroupOpener -> "Inline", CellMargins -> {{120, 0}, {0, 50}},
              LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", 
             FontSize -> 70, FontWeight -> "Regular", FontSlant -> "Plain", 
             FontTracking -> -0.5, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Section", "Slideshow Working", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData["Subsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 40}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
             40, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], ShowGroupOpener -> "Inline", 
             CellMargins -> {{120, 0}, {0, 40}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 30, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], ShowGroupOpener -> 
             "Inline", CellMargins -> {{120, 0}, {0, 40}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Source Sans Pro", FontSize -> 
             30, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsubsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]]}, Open]]}, 
        Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
       StyleData["EndOfSlide"], CellFrame -> {{False, False}, {False, True}}, 
       ShowCellBracket -> False, CellMargins -> {{120, 0}, {100, 15}}, 
       CellFrameColor -> GrayLevel[0.85]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> 
          "Text", MenuSortingValue -> 1400, MenuCommandKey :> "7", FontFamily -> 
          "Source Sans Pro", FontSize -> 22, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeText"], CellMargins -> {{120, 0}, {0, 15}}, 
          LineSpacing -> {1, 3}, TabSpacings -> {2.5}, FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["CodeText", "SlideShow"], 
          CellMargins -> {{120, 0}, {0, 15}}, LineSpacing -> {1, 3}, 
          TabSpacings -> {2.5}, FontFamily -> "Source Sans Pro", FontSize -> 
          22, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Working", StyleDefinitions -> 
           StyleData["CodeText", "SlideShow"]]], 
         Cell[
          StyleData[
          "CodeText", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "CodeText", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["CodeText", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.85]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]], 
          CellMargins -> {{140, 0}, {0, 15}}], 
         Cell[
          StyleData["Item", "SlideShow"], CellMargins -> {{140, 0}, {0, 15}}, 
          CellFrameLabelMargins -> 10, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{140, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], 
            None], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{140, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{140, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
          CellMargins -> {{160, 0}, {0, 15}}], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, CellFrameLabelMargins -> 10, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{160, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            
            CurrentValue[{
             StyleHints, "ColorSet", 
              "Text1"}]], $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], 
          CellMargins -> {{160, 0}, {0, 15}}, FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{160, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Open]], 
      Cell[
       StyleData["Subsubitem"], CellMargins -> {{180, 0}, {0, 15}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{145, 0}, {0, 15}}, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 
          15, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{145, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{180, 0}, {0, 15}}, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5, $CellContext`ReturnCreatesNewCell -> True], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{180, 0}, {0, 15}}, CellFrameLabelMargins -> 6, 
          CellChangeTimes -> {{3.772393378081081*^9, 3.772393382879437*^9}}, 
          FontFamily -> "Source Sans Pro", FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{180, Inherited}, {Inherited, Inherited}}]}, Open]], 
      Cell[
       StyleData["Graphics"], CellMargins -> {{120, Inherited}, {15, 15}}, 
       CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
       GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
       False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
       FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
       AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
       LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
       ShowStringCharacters -> False, NumberMarks -> False, CounterIncrements -> 
       "Graphics", ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
       Arrowheads -> 0.04, Dashing -> None, CapForm -> "Square", 
       JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
       1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
       Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
       EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
       FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
       Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
       StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
       FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
       1, $CellContext`BackFaceColor -> 
       GrayLevel[0], $CellContext`StripStyleOnPaste -> 
       False, $CellContext`BackFaceOpacity -> 1], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Open]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["WolframAlphaShort"], CellMargins -> {{120, 0}, {0, 15}}, 
       MenuSortingValue -> 10000], 
      Cell[
       StyleData["WolframAlphaLong"], CellMargins -> {{117, 0}, {0, 15}}, 
       MenuSortingValue -> 10000], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Program"], CellMargins -> {{120, 10}, {5, 20}}, 
          MenuSortingValue -> 10000, FontSize -> 16], 
         Cell[
          StyleData["Program", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, FontSize -> 20], 
         Cell[
          StyleData[
          "Program", "Slideshow Working", StyleDefinitions -> 
           StyleData["Program", "SlideShow"]]], 
         Cell[
          StyleData[
          "Program", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Program", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Program", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Program", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{120, 10}, {5, 20}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Cell[
                 BoxData[
                  RotationBox[
                  "Experimental", BoxRotation -> 1.5707963267948966`]], 
                 "Text", LineColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FrontFaceColor -> 
                 RGBColor[
                  1., 0.592156862745098, 
                   0.10196078431372549`], $CellContext`BackFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 GraphicsColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FontSize -> 10, FontColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]]]]], 
             None}, {None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 20}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{120, 10}, {5, 10}}, 
          FontSize -> 13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"], CellMargins -> {{120, 10}, {5, 10}}], 
         Cell[
          StyleData["Code", "SlideShow"], CellMargins -> {{120, 10}, {5, 10}},
           LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{120, 10}, {5, 10}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{120, 10}, {5, 10}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Separator"], CellFrame -> {{False, False}, {1.5, False}},
           CellMargins -> {{120, 0}, {0, 0}}, CellFrameColor -> 
          GrayLevel[0.8], MenuSortingValue -> 10000], 
         Cell[
          StyleData[
          "SlideShowNavigationBar", "Slideshow Presentation", 
           StyleDefinitions -> StyleData["SlideShowNavigationBar"]], 
          MenuSortingValue -> 10000, Background -> None]}, Open]]}, Closed]]},
   Visible -> False, FrontEndVersion -> 
  "13.3 for Microsoft Windows (64-bit) (May 26, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"c1e9a330-c187-4c1a-b606-8b0575fe5e04"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Axis"->{
  Cell[135521, 2588, 2206, 58, 218, "Input",ExpressionUUID->"3205fcd9-1ac5-4e14-a629-fd8722e34743",
   CellTags->{"DateListPlot", "Filling", "Axis", "Joined", "True"}]},
 "BusinessDay"->{
  Cell[218051, 4744, 276, 6, 40, "Input",ExpressionUUID->"881954ea-2ab2-45ce-a673-5f6be89478be",
   CellTags->"BusinessDay"]},
 "Center"->{
  Cell[210214, 4533, 776, 22, 98, "Input",ExpressionUUID->"e8adbb7c-9ee1-4586-b48d-fbc6337ad7b2",
   CellTags->{"Right", "Center", "Left"}]},
 "DateListPlot"->{
  Cell[135521, 2588, 2206, 58, 218, "Input",ExpressionUUID->"3205fcd9-1ac5-4e14-a629-fd8722e34743",
   CellTags->{"DateListPlot", "Filling", "Axis", "Joined", "True"}]},
 "DatePlus"->{
  Cell[150864, 3030, 559, 14, 40, "Input",ExpressionUUID->"81828da2-b8e4-4dbe-9363-72682a5dffc1",
   CellTags->{"DateValue", "Today", "Year", "Month", "DatePlus"}]},
 "DateValue"->{
  Cell[150864, 3030, 559, 14, 40, "Input",ExpressionUUID->"81828da2-b8e4-4dbe-9363-72682a5dffc1",
   CellTags->{"DateValue", "Today", "Year", "Month", "DatePlus"}]},
 "Downsampling"->{
  Cell[219425, 4785, 122, 2, 79, "Subsubsection",ExpressionUUID->"459c9496-d760-4bfc-a2be-96cbc0f59177",
   CellTags->"Downsampling"]},
 "EstimatedDistribution"->{
  Cell[227642, 5006, 843, 22, 79, "Input",ExpressionUUID->"a2a7553c-4de9-4e67-ab3b-2f43465e0add",
   CellTags->{"EstimatedDistribution", "Flatten", "NormalDistribution"}]},
 "False"->{
  Cell[220992, 4826, 384, 8, 79, "Input",ExpressionUUID->"3aeb040e-ee40-4566-83ca-7d3994daf826",
   CellTags->"False"],
  Cell[221525, 4840, 2617, 61, 131, "Input",ExpressionUUID->"c77e74e0-d659-498e-93cd-4fd8293aaf87",
   CellTags->"False"]},
 "Filling"->{
  Cell[135521, 2588, 2206, 58, 218, "Input",ExpressionUUID->"3205fcd9-1ac5-4e14-a629-fd8722e34743",
   CellTags->{"DateListPlot", "Filling", "Axis", "Joined", "True"}]},
 "FinancialData"->{
  Cell[141821, 2767, 296, 8, 40, "Input",ExpressionUUID->"55ce1d14-49bb-40fd-8a71-5764406ac379",
   CellTags->"FinancialData"],
  Cell[142705, 2793, 1654, 41, 161, "Input",ExpressionUUID->"726c30d5-6cc2-4628-914c-b31764736442",
   CellTags->"FinancialData"]},
 "Flatten"->{
  Cell[227642, 5006, 843, 22, 79, "Input",ExpressionUUID->"a2a7553c-4de9-4e67-ab3b-2f43465e0add",
   CellTags->{"EstimatedDistribution", "Flatten", "NormalDistribution"}]},
 "GeometricBrownianMotionProcess"->{
  Cell[232856, 5158, 492, 12, 40, "Input",ExpressionUUID->"0633d212-2446-4464-b268-aef417510194",
   CellTags->{"GeometricBrownianMotionProcess", "TimeSeriesThread"}]},
 "ImageSize"->{
  Cell[158653, 3232, 615, 15, 40, "Input",ExpressionUUID->"a3b2fc5c-3ff0-4d60-b139-c5b317be9ad7",
   CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"}],
  Cell[159271, 3249, 1272, 30, 49, "Input",ExpressionUUID->"75807575-bf40-4359-bec5-16e0ff9bd9bf",
   CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"}]},
 "Interpolation"->{
  Cell[152285, 3066, 454, 10, 40, "Input",ExpressionUUID->"9018d979-b85d-4713-8b6b-f797da083027",
   CellTags->{"MissingDataMethod", "Interpolation", "InterpolationOrder"}]},
 "InterpolationOrder"->{
  Cell[152285, 3066, 454, 10, 40, "Input",ExpressionUUID->"9018d979-b85d-4713-8b6b-f797da083027",
   CellTags->{"MissingDataMethod", "Interpolation", "InterpolationOrder"}]},
 "InterquartileRange"->{
  Cell[214521, 4644, 911, 25, 79, "Input",ExpressionUUID->"7e0bedea-fcdb-483b-a5e0-c1874c9674c2",
   CellTags->"InterquartileRange"]},
 "Joined"->{
  Cell[135521, 2588, 2206, 58, 218, "Input",ExpressionUUID->"3205fcd9-1ac5-4e14-a629-fd8722e34743",
   CellTags->{"DateListPlot", "Filling", "Axis", "Joined", "True"}]},
 "Left"->{
  Cell[210214, 4533, 776, 22, 98, "Input",ExpressionUUID->"e8adbb7c-9ee1-4586-b48d-fbc6337ad7b2",
   CellTags->{"Right", "Center", "Left"}]},
 "Log"->{
  Cell[158653, 3232, 615, 15, 40, "Input",ExpressionUUID->"a3b2fc5c-3ff0-4d60-b139-c5b317be9ad7",
   CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"}],
  Cell[159271, 3249, 1272, 30, 49, "Input",ExpressionUUID->"75807575-bf40-4359-bec5-16e0ff9bd9bf",
   CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"}]},
 "Max"->{
  Cell[157711, 3201, 296, 8, 40, "Input",ExpressionUUID->"90bf838e-c87b-4aa8-a9ec-32f87f9dba7b",
   CellTags->{"Min", "Max"}]},
 "MaxTemperature"->{
  Cell[194612, 4108, 550, 14, 40, "Input",ExpressionUUID->"f7aef56c-e10c-4362-82fd-9e052b30df57",
   CellTags->"MaxTemperature"]},
 "Medium"->{
  Cell[158653, 3232, 615, 15, 40, "Input",ExpressionUUID->"a3b2fc5c-3ff0-4d60-b139-c5b317be9ad7",
   CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"}],
  Cell[159271, 3249, 1272, 30, 49, "Input",ExpressionUUID->"75807575-bf40-4359-bec5-16e0ff9bd9bf",
   CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"}]},
 "Min"->{
  Cell[157711, 3201, 296, 8, 40, "Input",ExpressionUUID->"90bf838e-c87b-4aa8-a9ec-32f87f9dba7b",
   CellTags->{"Min", "Max"}]},
 "MissingDataMethod"->{
  Cell[152285, 3066, 454, 10, 40, "Input",ExpressionUUID->"9018d979-b85d-4713-8b6b-f797da083027",
   CellTags->{"MissingDataMethod", "Interpolation", "InterpolationOrder"}]},
 "Month"->{
  Cell[150864, 3030, 559, 14, 40, "Input",ExpressionUUID->"81828da2-b8e4-4dbe-9363-72682a5dffc1",
   CellTags->{"DateValue", "Today", "Year", "Month", "DatePlus"}]},
 "MovingMap"->{
  Cell[203096, 4344, 368, 9, 40, "Input",ExpressionUUID->"1a4b043b-5ec6-4a7f-87e0-5f2768a6e2b0",
   CellTags->{"WienerProcess", "MovingMap"}]},
 "NormalDistribution"->{
  Cell[227642, 5006, 843, 22, 79, "Input",ExpressionUUID->"a2a7553c-4de9-4e67-ab3b-2f43465e0add",
   CellTags->{"EstimatedDistribution", "Flatten", "NormalDistribution"}]},
 "NumberLinePlot"->{
  Cell[189931, 3980, 426, 11, 40, "Input",ExpressionUUID->"7cd635d5-9d6a-40e4-9377-be2dddd7a23f",
   CellTags->{"NumberLinePlot", "Times"}]},
 "Path"->{
  Cell[218911, 4767, 302, 8, 40, "Input",ExpressionUUID->"f51396a1-8127-41b0-adf2-cbfca4746dc8",
   CellTags->"Path"]},
 "QuantityMagnitude"->{
  Cell[195298, 4126, 1534, 38, 49, "Input",ExpressionUUID->"8f7f1cc2-a496-4028-9e6c-e826558e995f",
   CellTags->"QuantityMagnitude"]},
 "RandomInteger"->{
  Cell[133340, 2522, 192, 5, 35, "Text",ExpressionUUID->"7b450fee-efd3-4f3e-9890-429ff64436f1",
   CellTags->{"RandomInteger", "TimeSeries"}]},
 "Right"->{
  Cell[210214, 4533, 776, 22, 98, "Input",ExpressionUUID->"e8adbb7c-9ee1-4586-b48d-fbc6337ad7b2",
   CellTags->{"Right", "Center", "Left"}]},
 "SlideShowHeader"->{
  Cell[463, 16, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
   CellTags->"SlideShowHeader"],
  Cell[39808, 706, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5e1b7bef-b164-4a48-99aa-6bd141aae90a",
   CellTags->"SlideShowHeader"],
  Cell[42854, 790, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a4834203-c5b6-4ebc-9a63-fa4db5773568",
   CellTags->"SlideShowHeader"],
  Cell[132646, 2501, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e3d5cc3e-09c9-48d3-82fb-afe337bf20e3",
   CellTags->"SlideShowHeader"],
  Cell[141471, 2757, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9d9bf01e-40e7-49d3-9f83-04124b8c0ae9",
   CellTags->"SlideShowHeader"],
  Cell[144497, 2842, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7b36dab4-26a0-45a1-973c-59f6cdc72cb1",
   CellTags->"SlideShowHeader"],
  Cell[145833, 2886, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"85efc2cf-7a44-4dd5-ace8-735d30548226",
   CellTags->"SlideShowHeader"],
  Cell[148665, 2967, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"decc1872-a35a-484f-957c-96a009c3ec86",
   CellTags->"SlideShowHeader"],
  Cell[149985, 3004, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6c16df9d-b92b-431b-b9bc-feb682a0cd67",
   CellTags->"SlideShowHeader"],
  Cell[158157, 3218, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6af3f4c4-dff6-46f5-b2aa-0f1e17ba6d5a",
   CellTags->"SlideShowHeader"],
  Cell[183189, 3794, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c2f96c6a-f231-4189-960d-f2cc99f98120",
   CellTags->"SlideShowHeader"],
  Cell[193808, 4083, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"22831ac0-9655-46dc-bbc9-bee9ce35348c",
   CellTags->"SlideShowHeader"],
  Cell[199849, 4245, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"703c9737-5b54-44d3-8701-a63dbf13ffb4",
   CellTags->"SlideShowHeader"],
  Cell[216171, 4694, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e3a4573b-9215-48bb-9568-bffde18e6d7e",
   CellTags->"SlideShowHeader"],
  Cell[224292, 4910, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a8a83723-17d3-4e21-a238-edd895da6465",
   CellTags->"SlideShowHeader"],
  Cell[230077, 5072, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"61d8005f-1795-4206-920b-9780124c5c24",
   CellTags->"SlideShowHeader"],
  Cell[236467, 5268, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9ab8640c-420d-433d-a207-5b0df097f94c",
   CellTags->"SlideShowHeader"],
  Cell[237651, 5301, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0859188d-0cce-4e5d-9d9d-3137b3e08cd2",
   CellTags->"SlideShowHeader"]},
 "TemporalRegularity"->{
  Cell[161954, 3321, 301, 7, 40, "Input",ExpressionUUID->"fce97705-047a-476a-81a4-c5267095e5ed",
   CellTags->"TemporalRegularity"]},
 "Times"->{
  Cell[189931, 3980, 426, 11, 40, "Input",ExpressionUUID->"7cd635d5-9d6a-40e4-9377-be2dddd7a23f",
   CellTags->{"NumberLinePlot", "Times"}]},
 "TimeSeries"->{
  Cell[133340, 2522, 192, 5, 35, "Text",ExpressionUUID->"7b450fee-efd3-4f3e-9890-429ff64436f1",
   CellTags->{"RandomInteger", "TimeSeries"}]},
 "TimeSeriesMap"->{
  Cell[158653, 3232, 615, 15, 40, "Input",ExpressionUUID->"a3b2fc5c-3ff0-4d60-b139-c5b317be9ad7",
   CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"}],
  Cell[159271, 3249, 1272, 30, 49, "Input",ExpressionUUID->"75807575-bf40-4359-bec5-16e0ff9bd9bf",
   CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"}],
  Cell[226502, 4973, 260, 6, 40, "Input",ExpressionUUID->"bb3587ba-61cc-4312-b11a-83ee270ed6ae",
   CellTags->"TimeSeriesMap"],
  Cell[226865, 4983, 190, 4, 40, "Input",ExpressionUUID->"a41841ba-ad61-4000-8f8f-591a0d9adc02",
   CellTags->"TimeSeriesMap"]},
 "TimeSeriesResample"->{
  Cell[163908, 3375, 264, 5, 40, "Input",ExpressionUUID->"d40658b1-8822-4e0f-9178-50156600a770",
   CellTags->"TimeSeriesResample"]},
 "TimeSeriesThread"->{
  Cell[232856, 5158, 492, 12, 40, "Input",ExpressionUUID->"0633d212-2446-4464-b268-aef417510194",
   CellTags->{"GeometricBrownianMotionProcess", "TimeSeriesThread"}]},
 "TimeSeriesWindow"->{
  Cell[196962, 4168, 359, 9, 40, "Input",ExpressionUUID->"fc5051d6-4e1f-43a5-a475-285c1e3c24a8",
   CellTags->"TimeSeriesWindow"]},
 "Today"->{
  Cell[150864, 3030, 559, 14, 40, "Input",ExpressionUUID->"81828da2-b8e4-4dbe-9363-72682a5dffc1",
   CellTags->{"DateValue", "Today", "Year", "Month", "DatePlus"}]},
 "True"->{
  Cell[135521, 2588, 2206, 58, 218, "Input",ExpressionUUID->"3205fcd9-1ac5-4e14-a629-fd8722e34743",
   CellTags->{"DateListPlot", "Filling", "Axis", "Joined", "True"}]},
 "WienerProcess"->{
  Cell[203096, 4344, 368, 9, 40, "Input",ExpressionUUID->"1a4b043b-5ec6-4a7f-87e0-5f2768a6e2b0",
   CellTags->{"WienerProcess", "MovingMap"}]},
 "Year"->{
  Cell[150864, 3030, 559, 14, 40, "Input",ExpressionUUID->"81828da2-b8e4-4dbe-9363-72682a5dffc1",
   CellTags->{"DateValue", "Today", "Year", "Month", "DatePlus"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Axis", 274178, 6104},
 {"BusinessDay", 274366, 6107},
 {"Center", 274506, 6110},
 {"DateListPlot", 274667, 6113},
 {"DatePlus", 274852, 6116},
 {"DateValue", 275034, 6119},
 {"Downsampling", 275219, 6122},
 {"EstimatedDistribution", 275383, 6125},
 {"False", 275568, 6128},
 {"Filling", 275826, 6133},
 {"FinancialData", 276016, 6136},
 {"Flatten", 276290, 6141},
 {"GeometricBrownianMotionProcess", 276500, 6144},
 {"ImageSize", 276685, 6147},
 {"Interpolation", 277029, 6152},
 {"InterpolationOrder", 277229, 6155},
 {"InterquartileRange", 277429, 6158},
 {"Joined", 277577, 6161},
 {"Left", 277758, 6164},
 {"Log", 277910, 6167},
 {"Max", 278244, 6172},
 {"MaxTemperature", 278393, 6175},
 {"Medium", 278537, 6178},
 {"Min", 278871, 6183},
 {"MissingDataMethod", 279023, 6186},
 {"Month", 279210, 6189},
 {"MovingMap", 279392, 6192},
 {"NormalDistribution", 279561, 6195},
 {"NumberLinePlot", 279755, 6198},
 {"Path", 279908, 6201},
 {"QuantityMagnitude", 280052, 6204},
 {"RandomInteger", 280207, 6207},
 {"Right", 280363, 6210},
 {"SlideShowHeader", 280527, 6213},
 {"TemporalRegularity", 283190, 6250},
 {"Times", 283336, 6253},
 {"TimeSeries", 283495, 6256},
 {"TimeSeriesMap", 283659, 6259},
 {"TimeSeriesResample", 284264, 6268},
 {"TimeSeriesThread", 284421, 6271},
 {"TimeSeriesWindow", 284613, 6274},
 {"Today", 284757, 6277},
 {"True", 284934, 6280},
 {"WienerProcess", 285124, 6283},
 {"Year", 285279, 6286}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[463, 16, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
 CellTags->"SlideShowHeader"],
Cell[602, 20, 15061, 253, 134, "Title",ExpressionUUID->"059f49ae-49fc-4f44-80e6-ab700841b96e"],
Cell[15666, 275, 125, 1, 143, "Title",ExpressionUUID->"1243965a-40ce-482a-9c91-36878f955d76"],
Cell[15794, 278, 85, 0, 63, "Subtitle",ExpressionUUID->"abd2714b-c40b-491d-9b98-1f3d249655e3"],
Cell[15882, 280, 81, 0, 40, "Input",ExpressionUUID->"3f05ebf1-e1d1-40c2-8c71-4ec5435a69a2"],
Cell[15966, 282, 23716, 417, 471, "Text",ExpressionUUID->"7397c74f-fd3f-4818-b16a-88faac3abecf"],
Cell[39685, 701, 86, 0, 138, "EndOfSlide",ExpressionUUID->"d7d6d0b3-d203-40df-afc6-25eef238649e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39808, 706, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5e1b7bef-b164-4a48-99aa-6bd141aae90a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[39955, 712, 401, 6, 139, "Section",ExpressionUUID->"84dc8a8f-439c-4a50-a8af-5aefc862d9fd"],
Cell[CellGroupData[{
Cell[40381, 722, 99, 0, 91, "Subsection",ExpressionUUID->"abdc45a6-e948-46bc-9530-147ca5395de1"],
Cell[40483, 724, 99, 0, 35, "Item",ExpressionUUID->"813f243c-e7a4-4ee0-8414-c331deb7b656"],
Cell[CellGroupData[{
Cell[40607, 728, 107, 0, 35, "Item",ExpressionUUID->"8d35fb59-4127-4c86-baa7-b5c72a106963"],
Cell[40717, 730, 84, 0, 33, "Subitem",ExpressionUUID->"03df6af6-53d7-4947-b196-09da21ad770c"],
Cell[40804, 732, 86, 0, 33, "Subitem",ExpressionUUID->"e891f57c-05e2-4483-b31d-1a97d01d1891"],
Cell[40893, 734, 85, 0, 33, "Subitem",ExpressionUUID->"3143b847-ba5b-4e33-933c-084f74b33d06"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41027, 740, 101, 0, 91, "Subsection",ExpressionUUID->"1aba4352-b863-4a77-932c-35583e2760b0"],
Cell[41131, 742, 96, 0, 35, "Item",ExpressionUUID->"d6a7cf52-7d56-4f43-82f7-fa2582030223"],
Cell[41230, 744, 76, 0, 35, "Item",ExpressionUUID->"2a8e0f2c-31ec-47ec-8d02-cc643d809d4a"],
Cell[41309, 746, 84, 0, 35, "Item",ExpressionUUID->"f420079f-3c5d-4dbf-bb41-ac71fe86fac4"],
Cell[41396, 748, 87, 0, 35, "Item",ExpressionUUID->"0af3c7f3-6a6c-4245-85e1-2891e38e5b80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41520, 753, 109, 0, 91, "Subsection",ExpressionUUID->"41ed0197-fb5a-4ad4-85ab-99a21bbc7da0"],
Cell[41632, 755, 92, 0, 35, "Item",ExpressionUUID->"4af6fbff-d9a4-4308-a77b-468d9a40ee91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41761, 760, 97, 0, 91, "Subsection",ExpressionUUID->"dfe5073b-5c3e-4519-9876-c18b4eee1140"],
Cell[41861, 762, 83, 0, 35, "Item",ExpressionUUID->"95a9483a-08b0-4d96-9a15-d99593f786c8"],
Cell[41947, 764, 85, 0, 35, "Item",ExpressionUUID->"93264688-3769-441d-8031-72ec60ab16d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42069, 769, 102, 0, 91, "Subsection",ExpressionUUID->"3c5d7cf0-6bc7-4afe-88d0-978e76d32e52"],
Cell[42174, 771, 88, 0, 35, "Item",ExpressionUUID->"ad38ac04-cfdd-4e22-8c4a-41bcc65f377e"],
Cell[42265, 773, 87, 0, 35, "Item",ExpressionUUID->"078eb629-dfa9-4d57-ae3f-73535a517322"],
Cell[42355, 775, 80, 0, 35, "Item",ExpressionUUID->"e1e53d40-22c7-466c-aa8f-973f7dc6f613"],
Cell[42438, 777, 89, 0, 35, "Item",ExpressionUUID->"37174ec3-4168-4c1e-8a75-7dc5143493fc"],
Cell[42530, 779, 84, 0, 35, "Item",ExpressionUUID->"4b5431df-c127-48b2-b994-f08493bdfb0a"],
Cell[42617, 781, 87, 0, 35, "Item",ExpressionUUID->"8c7b91e3-23b8-4284-a058-437b7b6e8730"],
Cell[42707, 783, 86, 0, 138, "EndOfSlide",ExpressionUUID->"1ba8e886-9754-4254-ab1b-9841e8dc0396"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42854, 790, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a4834203-c5b6-4ebc-9a63-fa4db5773568",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[43001, 796, 96, 0, 139, "Section",ExpressionUUID->"00702c5e-711a-4916-8ac8-17827ecfb5f6"],
Cell[43100, 798, 576, 8, 81, "Text",ExpressionUUID->"29eb7540-21df-4729-9c03-7afa23bec2c8"],
Cell[43679, 808, 188, 6, 35, "Text",ExpressionUUID->"9790fa2b-cefa-41af-a2dc-b67aa8bb7873"],
Cell[43870, 816, 86492, 1620, 247, "Output",ExpressionUUID->"62f26a7e-563b-4244-bb7d-e722e5637bfc"],
Cell[CellGroupData[{
Cell[130387, 2440, 90, 0, 79, "Subsubsection",ExpressionUUID->"b0f3346f-6a9f-4448-9814-7eb8149e1da5"],
Cell[130480, 2442, 206, 5, 35, "Text",ExpressionUUID->"187f3b47-4d91-4948-8401-87d40665eed0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130723, 2452, 115, 0, 79, "Subsubsection",ExpressionUUID->"101db6e9-722e-4f6f-b41f-9a3591e279b6"],
Cell[130841, 2454, 313, 8, 35, "Text",ExpressionUUID->"43b2f3be-2cb3-49f7-a302-cc8659ca4f31"],
Cell[131157, 2464, 502, 9, 56, "Item",ExpressionUUID->"ad9fb8a7-23cf-416e-ac10-b4e025af8e89"],
Cell[131662, 2475, 544, 9, 56, "Item",ExpressionUUID->"44239f9c-9a29-41c1-b8d3-18e7672eae92"],
Cell[132209, 2486, 287, 6, 35, "Item",ExpressionUUID->"d7b01c0d-ca43-4c90-b236-29566dd2b058"],
Cell[132499, 2494, 86, 0, 138, "EndOfSlide",ExpressionUUID->"653e10c0-2d4a-4055-9286-fe028aa0d43b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132646, 2501, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e3d5cc3e-09c9-48d3-82fb-afe337bf20e3",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[132793, 2507, 98, 0, 139, "Section",ExpressionUUID->"aefba4ef-e3e8-46e1-b493-c8324c9d0c27"],
Cell[132894, 2509, 192, 3, 35, "Text",ExpressionUUID->"7ef73502-dc86-4214-8528-b1d1414c6d31"],
Cell[CellGroupData[{
Cell[133111, 2516, 96, 0, 91, "Subsection",ExpressionUUID->"d5097763-2914-48cf-a6c8-894ea2e0a2b5"],
Cell[CellGroupData[{
Cell[133232, 2520, 105, 0, 79, "Subsubsection",ExpressionUUID->"212132be-442b-4769-9ac7-9a08418c9d9f"],
Cell[133340, 2522, 192, 5, 35, "Text",ExpressionUUID->"7b450fee-efd3-4f3e-9890-429ff64436f1",
 CellTags->{"RandomInteger", "TimeSeries"}],
Cell[133535, 2529, 770, 23, 136, "Input",ExpressionUUID->"e0e710bb-a359-4054-b29a-b5b0f9399b22"],
Cell[134308, 2554, 115, 0, 35, "Text",ExpressionUUID->"c9fe3842-a47e-463f-b27e-eb7592c03f3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134460, 2559, 106, 0, 79, "Subsubsection",ExpressionUUID->"771665d5-210f-4949-9963-61c4bb808fd1"],
Cell[134569, 2561, 123, 0, 35, "Text",ExpressionUUID->"f33e5b09-63b2-4979-81dc-08907e249abb"],
Cell[134695, 2563, 528, 14, 117, "Input",ExpressionUUID->"bcb3411e-b00d-4230-b839-d63f7ca69352",
 CellID->658325024]
}, Open  ]],
Cell[CellGroupData[{
Cell[135260, 2582, 114, 0, 79, "Subsubsection",ExpressionUUID->"d945f4ef-fe6f-4412-a4b5-578a72c012a9"],
Cell[135377, 2584, 141, 2, 35, "Text",ExpressionUUID->"b010cbd9-5560-4d34-9f7c-e9ebf9d0bc64"],
Cell[135521, 2588, 2206, 58, 218, "Input",ExpressionUUID->"3205fcd9-1ac5-4e14-a629-fd8722e34743",
 CellTags->{"DateListPlot", "Filling", "Axis", "Joined", "True"}],
Cell[137730, 2648, 594, 15, 58, "Text",ExpressionUUID->"3a2f9d08-ce2f-468e-8a6c-b4da061491f4"],
Cell[138327, 2665, 186, 3, 35, "Text",ExpressionUUID->"81844721-10c0-4aaa-b6a2-429619b7238f"],
Cell[138516, 2670, 166, 3, 40, "Input",ExpressionUUID->"da918eb2-b178-4828-bfe9-94853a2c071f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138719, 2678, 118, 0, 79, "Subsubsection",ExpressionUUID->"6cded341-aec9-47e5-ba32-bc956f860264"],
Cell[138840, 2680, 151, 2, 35, "Text",ExpressionUUID->"ee96f071-71e1-485a-8e97-d820b449aa67"],
Cell[138994, 2684, 1641, 44, 106, "Input",ExpressionUUID->"b71f4ca5-db23-434f-8200-817f28b3b9c1",
 CellID->11419477],
Cell[140638, 2730, 220, 3, 35, "Text",ExpressionUUID->"7b6052b0-6d9e-4987-9f2d-fbf60b962b97"],
Cell[140861, 2735, 161, 3, 40, "Input",ExpressionUUID->"94ea711d-0bd6-4678-b203-bda123fb26bf"],
Cell[141025, 2740, 284, 7, 40, "Input",ExpressionUUID->"563a2890-f699-495e-8a11-8332dab44dd3"],
Cell[141312, 2749, 86, 0, 138, "EndOfSlide",ExpressionUUID->"3674a43b-fb49-4d3b-b869-8d5932043749"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[141471, 2757, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9d9bf01e-40e7-49d3-9f83-04124b8c0ae9",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[141618, 2763, 90, 0, 91, "Subsection",ExpressionUUID->"de30355a-94d7-4365-a707-c4a7661eb53d"],
Cell[141711, 2765, 107, 0, 35, "Text",ExpressionUUID->"db72d870-5cf8-4567-8715-1dd420eb97d1"],
Cell[141821, 2767, 296, 8, 40, "Input",ExpressionUUID->"55ce1d14-49bb-40fd-8a71-5764406ac379",
 CellTags->"FinancialData"],
Cell[142120, 2777, 259, 4, 35, "Text",ExpressionUUID->"f330adf3-9f3b-409d-85a9-fd1689dd95f3"],
Cell[142382, 2783, 171, 4, 40, "Input",ExpressionUUID->"5cc05717-3a9c-4bc2-91f7-2203fa6f5ffd"],
Cell[142556, 2789, 146, 2, 35, "Text",ExpressionUUID->"e3dd7b29-62ab-4e13-888c-0be9d69f78e1"],
Cell[142705, 2793, 1654, 41, 161, "Input",ExpressionUUID->"726c30d5-6cc2-4628-914c-b31764736442",
 CellTags->"FinancialData"],
Cell[144362, 2836, 86, 0, 138, "EndOfSlide",ExpressionUUID->"88474b0a-939a-4fbb-87df-3ce8c479cda7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144497, 2842, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7b36dab4-26a0-45a1-973c-59f6cdc72cb1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[144644, 2848, 93, 0, 91, "Subsection",ExpressionUUID->"6874d386-1149-4f80-9363-0e6b2da5da7d"],
Cell[144740, 2850, 269, 6, 35, "Text",ExpressionUUID->"4740eab7-2d23-47f8-9602-f612e4e8031c"],
Cell[145012, 2858, 361, 10, 40, "Input",ExpressionUUID->"9f5c49b4-881e-486e-be20-ac1bff204509"],
Cell[145376, 2870, 319, 8, 40, "Input",ExpressionUUID->"bcd14706-53d4-4ef8-a81e-cc598fe2afad"],
Cell[145698, 2880, 86, 0, 138, "EndOfSlide",ExpressionUUID->"ba8e41fb-e8e8-4ed4-aee4-2bd86d19ad0c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145833, 2886, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"85efc2cf-7a44-4dd5-ace8-735d30548226",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[145980, 2892, 106, 0, 139, "Section",ExpressionUUID->"425d7d9e-ee9b-4773-9f2c-cfb1d10c1dde"],
Cell[146089, 2894, 150, 2, 35, "Text",ExpressionUUID->"de8fa702-80fa-4438-bc6a-58ec7072c87b"],
Cell[146242, 2898, 113, 0, 35, "Text",ExpressionUUID->"fc661e58-aa65-499d-9774-c4bdc1ce0230"],
Cell[146358, 2900, 456, 12, 40, "Input",ExpressionUUID->"36c46544-f113-4016-94b6-3fa92c7197e8"],
Cell[146817, 2914, 90, 0, 35, "Text",ExpressionUUID->"009cfca7-f56e-4800-a97c-3faa11094740"],
Cell[146910, 2916, 165, 3, 40, "Input",ExpressionUUID->"d2281598-0f01-48a8-8f50-e7b3859a9ec8"],
Cell[147078, 2921, 116, 0, 35, "Text",ExpressionUUID->"8408faab-929f-4b1c-88c9-eed9b3c311eb"],
Cell[147197, 2923, 407, 10, 98, "Input",ExpressionUUID->"92fa5ab3-b9a1-47fe-8b74-c85eba9f459c"],
Cell[147607, 2935, 192, 4, 35, "Text",ExpressionUUID->"60f1f4da-7e2d-4800-86c8-637ca9f290b4"],
Cell[147802, 2941, 198, 4, 40, "Input",ExpressionUUID->"712ada33-de03-4d3b-a6c3-c0588990868c"],
Cell[148003, 2947, 122, 0, 35, "Text",ExpressionUUID->"3c075a95-d742-4796-906c-a47e80619e17"],
Cell[148128, 2949, 399, 10, 98, "Input",ExpressionUUID->"63207406-a954-4e97-8095-33c63fc65510"],
Cell[148530, 2961, 86, 0, 138, "EndOfSlide",ExpressionUUID->"d1698cb2-c9f0-4bd4-99e1-b175c81bc870"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148665, 2967, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"decc1872-a35a-484f-957c-96a009c3ec86",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[148812, 2973, 87, 0, 91, "Subsection",ExpressionUUID->"79ef280e-1fa6-4336-9aa5-2b3cfcce9e66"],
Cell[148902, 2975, 373, 7, 58, "Text",ExpressionUUID->"831cf194-a2f6-4c62-9007-79ed4ee1dd35"],
Cell[149278, 2984, 569, 12, 104, "Text",ExpressionUUID->"be52f87d-e862-4055-9c4d-30942d6e2d39"],
Cell[149850, 2998, 86, 0, 138, "EndOfSlide",ExpressionUUID->"ff94b68f-8d53-46d7-baf1-c7d15155da01"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149985, 3004, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6c16df9d-b92b-431b-b9bc-feb682a0cd67",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[150132, 3010, 94, 0, 139, "Section",ExpressionUUID->"3741569d-faef-4325-81cf-53c7e9d429ff"],
Cell[150229, 3012, 262, 4, 35, "Text",ExpressionUUID->"e39f507c-6e02-42b4-a1c3-4590b98c0abf"],
Cell[CellGroupData[{
Cell[150516, 3020, 89, 0, 91, "Subsection",ExpressionUUID->"8b2f6281-bab9-4717-847c-00e81b3bf11a"],
Cell[150608, 3022, 253, 6, 35, "Text",ExpressionUUID->"d0b8eb6f-3e50-4c02-9049-95e348d56e53"],
Cell[150864, 3030, 559, 14, 40, "Input",ExpressionUUID->"81828da2-b8e4-4dbe-9363-72682a5dffc1",
 CellTags->{"DateValue", "Today", "Year", "Month", "DatePlus"}],
Cell[151426, 3046, 110, 0, 35, "Text",ExpressionUUID->"4ed300cd-f072-471d-9788-65f536609e35"],
Cell[151539, 3048, 267, 5, 40, "Input",ExpressionUUID->"aa3de47c-937a-4e15-95db-ed69322283e6"],
Cell[151809, 3055, 354, 7, 35, "Text",ExpressionUUID->"d149591f-155e-4f2d-9d3b-0de6cd8818d9"],
Cell[152166, 3064, 116, 0, 35, "Text",ExpressionUUID->"a6c76017-96ab-40aa-bbe3-265dc323e1e6"],
Cell[152285, 3066, 454, 10, 40, "Input",ExpressionUUID->"9018d979-b85d-4713-8b6b-f797da083027",
 CellTags->{"MissingDataMethod", "Interpolation", "InterpolationOrder"}],
Cell[152742, 3078, 130, 0, 35, "Text",ExpressionUUID->"fb53f064-5f80-4051-9600-ee084dc1e1bd"],
Cell[152875, 3080, 4726, 117, 98, "Input",ExpressionUUID->"72731b2f-2c30-442d-984d-d4b087b4a184"],
Cell[157604, 3199, 104, 0, 35, "Text",ExpressionUUID->"0c20afb4-7518-4eaa-a5d5-c4202b3ae0ac"],
Cell[157711, 3201, 296, 8, 40, "Input",ExpressionUUID->"90bf838e-c87b-4aa8-a9ec-32f87f9dba7b",
 CellTags->{"Min", "Max"}],
Cell[158010, 3211, 86, 0, 138, "EndOfSlide",ExpressionUUID->"30306d95-766d-4427-b70f-70190ecb5c5c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158157, 3218, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"6af3f4c4-dff6-46f5-b2aa-0f1e17ba6d5a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[158304, 3224, 91, 0, 91, "Subsection",ExpressionUUID->"4b1c613d-5a71-4a38-a531-724ab0e2bd21"],
Cell[CellGroupData[{
Cell[158420, 3228, 97, 0, 79, "Subsubsection",ExpressionUUID->"ecc5980e-179a-469f-b999-2581147df952"],
Cell[158520, 3230, 130, 0, 35, "Text",ExpressionUUID->"148f9436-f123-419b-b5e0-79111e4cdc3d"],
Cell[158653, 3232, 615, 15, 40, "Input",ExpressionUUID->"a3b2fc5c-3ff0-4d60-b139-c5b317be9ad7",
 CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"}],
Cell[159271, 3249, 1272, 30, 49, "Input",ExpressionUUID->"75807575-bf40-4359-bec5-16e0ff9bd9bf",
 CellTags->{"TimeSeriesMap", "Log", "ImageSize", "Medium"}],
Cell[160546, 3281, 279, 6, 35, "Text",ExpressionUUID->"167e8fa6-af50-425a-a509-0ed49cc52a86"],
Cell[160828, 3289, 157, 2, 40, "Input",ExpressionUUID->"44951212-131d-47b2-9d60-90e833fb3187"],
Cell[160988, 3293, 211, 5, 40, "Input",ExpressionUUID->"0a9018aa-f31b-43f9-87d6-e24e161e4efc"],
Cell[161202, 3300, 324, 7, 35, "Text",ExpressionUUID->"ca87a834-b8eb-4585-bbd5-73408143d304"],
Cell[CellGroupData[{
Cell[161551, 3311, 254, 4, 52, "Subsubsubsection",ExpressionUUID->"4e2925e1-622a-4a04-9865-4e931512d532"],
Cell[161808, 3317, 143, 2, 35, "Text",ExpressionUUID->"72e79adb-098c-455f-8c82-7f563266a501"],
Cell[161954, 3321, 301, 7, 40, "Input",ExpressionUUID->"fce97705-047a-476a-81a4-c5267095e5ed",
 CellTags->"TemporalRegularity"],
Cell[162258, 3330, 118, 0, 35, "Text",ExpressionUUID->"41ce0458-758e-4fc3-a9d5-d7b5857b4397"],
Cell[162379, 3332, 355, 8, 79, "Input",ExpressionUUID->"4d98c93b-21c4-4e21-b308-c9cc11c644b3"],
Cell[162737, 3342, 227, 3, 35, "Text",ExpressionUUID->"2c64d770-07c5-47bd-a033-e691f828bee8"],
Cell[162967, 3347, 242, 6, 40, "Input",ExpressionUUID->"da830b5b-e538-4a51-95e8-883b86301f6d"],
Cell[163212, 3355, 294, 7, 35, "Text",ExpressionUUID->"df15fcf1-0194-4a3b-a9c0-ad501f058045"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163543, 3367, 255, 4, 52, "Subsubsubsection",ExpressionUUID->"ed0325e6-61e8-4dde-a53b-220b98d96de7"],
Cell[163801, 3373, 104, 0, 35, "Text",ExpressionUUID->"c81a9303-45f0-42ff-98ba-bf64b85bc46f"],
Cell[163908, 3375, 264, 5, 40, "Input",ExpressionUUID->"d40658b1-8822-4e0f-9178-50156600a770",
 CellTags->"TimeSeriesResample"],
Cell[164175, 3382, 125, 0, 35, "Text",ExpressionUUID->"760c52a4-b4b6-4ef4-82da-d8103277f50d"],
Cell[164303, 3384, 377, 8, 79, "Input",ExpressionUUID->"5ccfd9b0-6ebf-4eff-9c4b-6ff0f70664a1"],
Cell[164683, 3394, 109, 0, 35, "Text",ExpressionUUID->"2130f105-0ba4-429a-9ee9-24e7f4a830f3"],
Cell[164795, 3396, 1273, 31, 49, "Input",ExpressionUUID->"50402446-e790-4821-9969-0eea9eeca433"],
Cell[166071, 3429, 121, 0, 35, "Text",ExpressionUUID->"2322d325-000c-4bba-92db-0015f87af427"],
Cell[166195, 3431, 242, 6, 40, "Input",ExpressionUUID->"3c1f8757-9033-4b74-b4f8-8e3649ac29cd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166486, 3443, 99, 0, 79, "Subsubsection",ExpressionUUID->"8b57cbe8-2416-4023-b978-451f0339c9ab"],
Cell[166588, 3445, 223, 3, 35, "Text",ExpressionUUID->"1fe13dc2-5898-44e1-a00b-b09e264a7c39"],
Cell[166814, 3450, 125, 0, 35, "Text",ExpressionUUID->"a19b6066-bb49-4de3-b587-5bd4bf123218"],
Cell[166942, 3452, 14445, 288, 70, "Input",ExpressionUUID->"7bd7d575-6d38-44b8-af1b-ce7a50b11322"],
Cell[181390, 3742, 179, 3, 35, "Text",ExpressionUUID->"11d4b9d8-7251-468a-b410-65473b3073d5"],
Cell[181572, 3747, 1157, 29, 49, "Input",ExpressionUUID->"eccecc76-ca68-4888-a16e-94ea24f5443d"],
Cell[182732, 3778, 143, 2, 35, "Text",ExpressionUUID->"f996fa84-db3b-43cd-b8b5-ea3ac0a658b0"],
Cell[182878, 3782, 161, 3, 40, "Input",ExpressionUUID->"acfce80a-0553-4315-9f2b-62a836c795bc"],
Cell[183042, 3787, 86, 0, 138, "EndOfSlide",ExpressionUUID->"8b8341aa-ad99-4e14-8fce-1d72dae4c90e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183189, 3794, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c2f96c6a-f231-4189-960d-f2cc99f98120",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[183336, 3800, 99, 0, 139, "Section",ExpressionUUID->"c9962473-6704-4de4-93ae-4dc674e70361"],
Cell[183438, 3802, 758, 20, 58, "Text",ExpressionUUID->"66c5688a-085d-40dd-a20c-727979ccf3e3"],
Cell[184199, 3824, 119, 0, 35, "Text",ExpressionUUID->"7c1c684c-a198-4d68-a4ed-30ef09e34611"],
Cell[184321, 3826, 145, 3, 40, "Input",ExpressionUUID->"5a8e5061-ff34-410f-aabc-b32cb660f871"],
Cell[CellGroupData[{
Cell[184491, 3833, 94, 0, 91, "Subsection",ExpressionUUID->"c7296bae-b493-433e-a7df-6dbaf7f1625f"],
Cell[184588, 3835, 166, 3, 35, "Text",ExpressionUUID->"822b8034-a279-4c5e-8898-4bf2fd5c166c"],
Cell[CellGroupData[{
Cell[184779, 3842, 113, 0, 79, "Subsubsection",ExpressionUUID->"c887ef43-e41f-4c97-b90c-0fa50a2d25f9"],
Cell[184895, 3844, 262, 7, 35, "Text",ExpressionUUID->"370330f7-2d08-4cb2-863c-c87cc78a2949"],
Cell[185160, 3853, 295, 8, 40, "Input",ExpressionUUID->"ef3471be-e7b8-4cb9-a94b-b799e12c19e4"],
Cell[185458, 3863, 123, 0, 35, "Text",ExpressionUUID->"b0d4061d-88ba-40a7-a2ac-d4d5ffbbc490"],
Cell[185584, 3865, 488, 10, 136, "Input",ExpressionUUID->"cd85393a-4a66-4e82-ad24-4d9b229541bd"],
Cell[186075, 3877, 161, 3, 35, "Text",ExpressionUUID->"55affae5-d5f0-4aa1-9935-26e700355c47"],
Cell[186239, 3882, 93, 0, 35, "Text",ExpressionUUID->"ece589e0-1837-40bd-ae5e-ddbc1ad56673"],
Cell[186335, 3884, 408, 8, 98, "Input",ExpressionUUID->"12d79a38-370e-4e4d-b6a5-d776a063f6fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186780, 3897, 118, 0, 79, "Subsubsection",ExpressionUUID->"25de60d0-44a9-4442-a11e-a498e8ff09ed"],
Cell[186901, 3899, 94, 0, 35, "Text",ExpressionUUID->"e85030f7-2e47-44a7-afab-04f31f59c0d3"],
Cell[186998, 3901, 646, 19, 60, "Input",ExpressionUUID->"f5197cfe-6d44-4ff2-b96c-155b24a4b779"],
Cell[187647, 3922, 111, 0, 35, "Text",ExpressionUUID->"a374eaa0-bb3e-4d17-8896-70f79eee46d4"],
Cell[187761, 3924, 515, 9, 136, "Input",ExpressionUUID->"e8303d50-56dd-47fe-810b-5933baf2d581"],
Cell[188279, 3935, 93, 0, 35, "Text",ExpressionUUID->"6ce55d30-94fc-4c53-aa0f-d42d02589004"],
Cell[188375, 3937, 419, 8, 98, "Input",ExpressionUUID->"64e6f4d8-662d-48b3-954f-54f5e1e67544"],
Cell[188797, 3947, 144, 2, 35, "Text",ExpressionUUID->"56061e18-6c62-44d6-9382-dfb60e25e8ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188978, 3954, 121, 0, 79, "Subsubsection",ExpressionUUID->"058de389-a3e7-473b-8e71-eb413bd7e937"],
Cell[189102, 3956, 122, 0, 35, "Text",ExpressionUUID->"bbbe1bbd-cf38-49e9-a908-39afa5f459a9"],
Cell[189227, 3958, 600, 18, 60, "Input",ExpressionUUID->"b52e0404-d1bf-4171-b1b3-e5c37a42a86d"],
Cell[189830, 3978, 98, 0, 35, "Text",ExpressionUUID->"392f1abb-3d25-49ef-a312-4d9b964b5346"],
Cell[189931, 3980, 426, 11, 40, "Input",ExpressionUUID->"7cd635d5-9d6a-40e4-9377-be2dddd7a23f",
 CellTags->{"NumberLinePlot", "Times"}],
Cell[190360, 3993, 168, 3, 35, "Text",ExpressionUUID->"eaa7d867-443e-401f-b9e1-33dcfbdff563"],
Cell[190531, 3998, 2915, 70, 169, "Input",ExpressionUUID->"24903eec-9925-4506-af4b-e77a6963b064"],
Cell[193449, 4070, 197, 3, 35, "Text",ExpressionUUID->"83ebefc5-5588-41ce-b83f-7c678d734f22"],
Cell[193649, 4075, 86, 0, 138, "EndOfSlide",ExpressionUUID->"6120446e-f855-4e24-a6a2-58c67763a464"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193808, 4083, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"22831ac0-9655-46dc-bbc9-bee9ce35348c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[193955, 4089, 96, 0, 91, "Subsection",ExpressionUUID->"4477d6c5-689b-4e25-8d9a-7105adb2fe12"],
Cell[194054, 4091, 390, 10, 35, "Text",ExpressionUUID->"03f25b27-1516-43c8-8cbf-d6a722b24c46"],
Cell[194447, 4103, 162, 3, 35, "Text",ExpressionUUID->"d53ba737-94e2-4651-9bae-54f8f1dd9e96"],
Cell[194612, 4108, 550, 14, 40, "Input",ExpressionUUID->"f7aef56c-e10c-4362-82fd-9e052b30df57",
 CellTags->"MaxTemperature"],
Cell[195165, 4124, 130, 0, 35, "Text",ExpressionUUID->"71e39bc6-d480-414e-af6c-12635e1af6b3"],
Cell[195298, 4126, 1534, 38, 49, "Input",ExpressionUUID->"8f7f1cc2-a496-4028-9e6c-e826558e995f",
 CellTags->"QuantityMagnitude"],
Cell[196835, 4166, 124, 0, 35, "Text",ExpressionUUID->"bf761057-2bd5-440b-ae80-debb55d7d3bb"],
Cell[196962, 4168, 359, 9, 40, "Input",ExpressionUUID->"fc5051d6-4e1f-43a5-a475-285c1e3c24a8",
 CellTags->"TimeSeriesWindow"],
Cell[197324, 4179, 180, 3, 35, "Text",ExpressionUUID->"4125037d-0192-4eed-98ae-26f28a44973c"],
Cell[197507, 4184, 2204, 53, 125, "Input",ExpressionUUID->"c8ed3d40-5acd-4f99-b041-6eb430d48126"],
Cell[199714, 4239, 86, 0, 138, "EndOfSlide",ExpressionUUID->"8c6de40c-7442-40b2-8a24-bf6d6bd5c949"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199849, 4245, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"703c9737-5b54-44d3-8701-a63dbf13ffb4",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[199996, 4251, 88, 0, 91, "Subsection",ExpressionUUID->"7a2bee36-d088-445e-883d-11293276c30d"],
Cell[200087, 4253, 453, 11, 35, "Text",ExpressionUUID->"1f794072-99f4-46ca-86dd-09d9472c9338"],
Cell[200543, 4266, 254, 7, 40, "Input",ExpressionUUID->"becd92e0-e3bf-4668-bd2b-8828557c1a86"],
Cell[200800, 4275, 278, 6, 35, "Text",ExpressionUUID->"ba6ff6e6-9367-42e6-a721-8195bc5733ec"],
Cell[201081, 4283, 331, 8, 40, "Input",ExpressionUUID->"8ad9430c-493b-42a8-adf1-62826d2d3c6b"],
Cell[201415, 4293, 363, 9, 35, "Text",ExpressionUUID->"38cd23e4-4e3b-4dee-9348-8d71f2eedfc4"],
Cell[201781, 4304, 260, 7, 40, "Input",ExpressionUUID->"926e981b-b721-4b5b-8dd7-a94216bc77ab"],
Cell[CellGroupData[{
Cell[202066, 4315, 91, 0, 79, "Subsubsection",ExpressionUUID->"e37c59b7-7adf-4eff-b20a-9c9932f809ff"],
Cell[202160, 4317, 143, 2, 35, "Text",ExpressionUUID->"fbd35926-1fac-4070-b3f5-095a644adfd0"],
Cell[202306, 4321, 147, 2, 35, "Text",ExpressionUUID->"9b6da1a2-d8ba-4f58-9461-16f06b680390"],
Cell[202456, 4325, 494, 13, 40, "Input",ExpressionUUID->"d831bb18-4756-4746-93ad-204f091d184e"],
Cell[202953, 4340, 140, 2, 35, "Text",ExpressionUUID->"7e16da43-1bb8-4d83-9527-16be628bcca7"],
Cell[203096, 4344, 368, 9, 40, "Input",ExpressionUUID->"1a4b043b-5ec6-4a7f-87e0-5f2768a6e2b0",
 CellTags->{"WienerProcess", "MovingMap"}],
Cell[203467, 4355, 142, 2, 35, "Text",ExpressionUUID->"127eb481-4a6c-4bbc-9e67-cd251802cf4a"],
Cell[203612, 4359, 439, 12, 40, "Input",ExpressionUUID->"f9be72fc-58a1-419b-8cca-25651c23e1a9"],
Cell[204054, 4373, 164, 3, 35, "Text",ExpressionUUID->"14f3dbe8-9621-44cf-93c0-6df84afb2d4b"],
Cell[204221, 4378, 2824, 68, 131, "Input",ExpressionUUID->"881ca6a6-1cd8-4964-9c95-f6a3878b7fc7"],
Cell[207048, 4448, 119, 0, 35, "Text",ExpressionUUID->"d42ae787-be25-4b54-901d-9b8725117172"],
Cell[207170, 4450, 1448, 35, 123, "Input",ExpressionUUID->"8810ac2b-42a8-42d6-a8d2-9d33208fe494"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208655, 4490, 96, 0, 79, "Subsubsection",ExpressionUUID->"dac0805e-5d04-438b-8042-1e068d2efd7a"],
Cell[208754, 4492, 193, 3, 35, "Text",ExpressionUUID->"2c4f8a2e-f854-4f6f-b849-a21a45bac93b"],
Cell[208950, 4497, 634, 16, 98, "Input",ExpressionUUID->"b4631284-5974-4bc7-888e-5864fe1bf9d7"],
Cell[209587, 4515, 114, 0, 35, "Text",ExpressionUUID->"db168e83-3138-4dbb-a8d7-424716e08c24"],
Cell[209704, 4517, 357, 10, 40, "Input",ExpressionUUID->"376b985d-c2fe-4586-8a0a-32e937dc7869"],
Cell[210064, 4529, 147, 2, 35, "Text",ExpressionUUID->"cc7cd414-aa3a-4fa3-973c-a1211a52b60f"],
Cell[210214, 4533, 776, 22, 98, "Input",ExpressionUUID->"e8adbb7c-9ee1-4586-b48d-fbc6337ad7b2",
 CellTags->{"Right", "Center", "Left"}],
Cell[210993, 4557, 101, 0, 35, "Text",ExpressionUUID->"353ec1fd-d355-4330-92f2-9129f95fa7d9"],
Cell[211097, 4559, 2581, 62, 131, "Input",ExpressionUUID->"2d6f1796-00d2-43be-9667-d4487dd5a371"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213715, 4626, 96, 0, 79, "Subsubsection",ExpressionUUID->"3390f659-89fe-465d-a948-f59546681e34"],
Cell[213814, 4628, 201, 3, 35, "Text",ExpressionUUID->"9f12438a-4af6-491c-9c5c-73c7d6fbf74f"],
Cell[214018, 4633, 106, 0, 35, "Text",ExpressionUUID->"16d01292-26b9-462e-9caa-192074516027"],
Cell[214127, 4635, 266, 5, 40, "Input",ExpressionUUID->"5cd37e61-3479-40b8-b4ac-1b3fcbc279e5"],
Cell[214396, 4642, 122, 0, 35, "Text",ExpressionUUID->"9789d240-fb26-4be7-93fb-ba8ac8d5718b"],
Cell[214521, 4644, 911, 25, 79, "Input",ExpressionUUID->"7e0bedea-fcdb-483b-a5e0-c1874c9674c2",
 CellTags->"InterquartileRange"],
Cell[215435, 4671, 586, 14, 98, "Input",ExpressionUUID->"9170e329-bf0f-4810-a029-6fd929b344ab"],
Cell[216024, 4687, 86, 0, 138, "EndOfSlide",ExpressionUUID->"1e893178-e705-4d21-b028-daa58e6af09a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[216171, 4694, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e3a4573b-9215-48bb-9568-bffde18e6d7e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[216318, 4700, 87, 0, 91, "Subsection",ExpressionUUID->"3efff24e-d567-4c32-a053-6115a6c49c07"],
Cell[216408, 4702, 240, 4, 35, "Text",ExpressionUUID->"d2a22ec8-d1be-46a2-8474-2024ffa90491"],
Cell[CellGroupData[{
Cell[216673, 4710, 93, 0, 79, "Subsubsection",ExpressionUUID->"20b232bc-632d-4a4c-afba-03c457648273"],
Cell[216769, 4712, 265, 5, 35, "Text",ExpressionUUID->"a00243cb-6a57-4fe8-8fb2-77205f505561"],
Cell[217037, 4719, 120, 0, 35, "Text",ExpressionUUID->"76722568-3bfa-483e-ad21-835686c09e57"],
Cell[217160, 4721, 498, 13, 40, "Input",ExpressionUUID->"f3456f64-c2a9-4eaf-a676-9486b98f3223",
 CellID->497898358],
Cell[217661, 4736, 113, 0, 35, "Text",ExpressionUUID->"5202dd15-5fa7-4a02-9030-3563505c771b"],
Cell[217777, 4738, 153, 2, 40, "Input",ExpressionUUID->"929ee527-b371-4436-8254-7c11399fa73a"],
Cell[217933, 4742, 115, 0, 35, "Text",ExpressionUUID->"d19ee3ab-481e-400a-aa3a-ce79578713cb"],
Cell[218051, 4744, 276, 6, 40, "Input",ExpressionUUID->"881954ea-2ab2-45ce-a673-5f6be89478be",
 CellTags->"BusinessDay"],
Cell[218330, 4752, 385, 8, 35, "Text",ExpressionUUID->"c6077c33-3c57-403c-b035-12c5890cddef"],
Cell[218718, 4762, 190, 3, 35, "Text",ExpressionUUID->"29fc6845-0c5d-4058-a341-c88f14216a02"],
Cell[218911, 4767, 302, 8, 40, "Input",ExpressionUUID->"f51396a1-8127-41b0-adf2-cbfca4746dc8",
 CellTags->"Path"],
Cell[219216, 4777, 172, 3, 40, "Input",ExpressionUUID->"8643760e-812c-446b-8ffe-33f817778977"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219425, 4785, 122, 2, 79, "Subsubsection",ExpressionUUID->"459c9496-d760-4bfc-a2be-96cbc0f59177",
 CellTags->"Downsampling"],
Cell[219550, 4789, 528, 12, 58, "Text",ExpressionUUID->"db2969f5-fea9-403f-85cf-feef7bbf8f83"],
Cell[220081, 4803, 125, 0, 35, "Text",ExpressionUUID->"8c74596e-5450-49b2-89b1-e75fffe27257"],
Cell[220209, 4805, 366, 10, 40, "Input",ExpressionUUID->"b952bad7-587a-4bfc-ae3f-2876df18c0d1"],
Cell[220578, 4817, 112, 0, 35, "Text",ExpressionUUID->"02f623bd-c958-4d47-bc7e-0a297ee56144"],
Cell[220693, 4819, 167, 3, 40, "Input",ExpressionUUID->"66bd6a0a-80ce-4d4b-98b5-61db16061da8"],
Cell[220863, 4824, 126, 0, 35, "Text",ExpressionUUID->"4f12130e-d6f7-41ac-9840-2c8b45946792"],
Cell[220992, 4826, 384, 8, 79, "Input",ExpressionUUID->"3aeb040e-ee40-4566-83ca-7d3994daf826",
 CellTags->"False"],
Cell[221379, 4836, 143, 2, 35, "Text",ExpressionUUID->"823097f2-1fe1-4171-896c-4100f6adf24a"],
Cell[221525, 4840, 2617, 61, 131, "Input",ExpressionUUID->"c77e74e0-d659-498e-93cd-4fd8293aaf87",
 CellTags->"False"],
Cell[224145, 4903, 86, 0, 138, "EndOfSlide",ExpressionUUID->"2ed3c8a2-1736-4cca-be60-25a2375fd29b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[224292, 4910, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a8a83723-17d3-4e21-a238-edd895da6465",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[224439, 4916, 84, 0, 91, "Subsection",ExpressionUUID->"77900cc3-e4be-492b-a4ad-525323e4271f"],
Cell[224526, 4918, 498, 12, 58, "Text",ExpressionUUID->"0633186e-e036-4545-9026-943f3304b57d"],
Cell[CellGroupData[{
Cell[225049, 4934, 246, 4, 52, "Subsubsubsection",ExpressionUUID->"23f6d844-f001-4d8b-af37-856f9d15566e"],
Cell[225298, 4940, 106, 0, 35, "Text",ExpressionUUID->"785b0410-8564-4321-8a72-3a9872eca2b2"],
Cell[225407, 4942, 439, 11, 79, "Input",ExpressionUUID->"5e5ccb59-8849-4d4d-9041-5750fb7ff52b"],
Cell[225849, 4955, 163, 3, 35, "Text",ExpressionUUID->"4f9d870e-2e9e-4ea6-954e-ae771401790c"],
Cell[226015, 4960, 182, 4, 40, "Input",ExpressionUUID->"55e8e556-20e5-482c-be57-f7f311119dd0"],
Cell[226200, 4966, 165, 3, 35, "Text",ExpressionUUID->"2f8e07f4-11d1-4d63-93ae-5dadbe143da7"],
Cell[226368, 4971, 131, 0, 35, "Text",ExpressionUUID->"8097abba-805f-4c37-8162-516287fc624d"],
Cell[226502, 4973, 260, 6, 40, "Input",ExpressionUUID->"bb3587ba-61cc-4312-b11a-83ee270ed6ae",
 CellTags->"TimeSeriesMap"],
Cell[226765, 4981, 97, 0, 35, "Text",ExpressionUUID->"3f42f897-9b90-419b-bf6f-6331eedaca94"],
Cell[226865, 4983, 190, 4, 40, "Input",ExpressionUUID->"a41841ba-ad61-4000-8f8f-591a0d9adc02",
 CellTags->"TimeSeriesMap"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227092, 4992, 255, 4, 52, "Subsubsubsection",ExpressionUUID->"eb1e2b91-16df-43ff-8d10-169056a515c4"],
Cell[227350, 4998, 289, 6, 35, "Text",ExpressionUUID->"6b101f0f-395e-4028-b142-09d491741992"],
Cell[227642, 5006, 843, 22, 79, "Input",ExpressionUUID->"a2a7553c-4de9-4e67-ab3b-2f43465e0add",
 CellTags->{"EstimatedDistribution", "Flatten", "NormalDistribution"}],
Cell[228488, 5030, 116, 0, 35, "Text",ExpressionUUID->"22dd831c-4705-4203-93ad-9dffeb9e59b2"],
Cell[228607, 5032, 1320, 31, 326, "Input",ExpressionUUID->"e82103cf-e3e0-4b65-ac59-d6ec5688d05e"],
Cell[229930, 5065, 86, 0, 138, "EndOfSlide",ExpressionUUID->"dbf94ee3-345c-45ba-9a2e-304265aeb033"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230077, 5072, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"61d8005f-1795-4206-920b-9780124c5c24",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[230224, 5078, 86, 0, 91, "Subsection",ExpressionUUID->"1d66948a-c076-4734-9a50-31a67cbf2020"],
Cell[230313, 5080, 346, 9, 35, "Text",ExpressionUUID->"babd96a8-3960-46ab-b095-56ada17e935f"],
Cell[CellGroupData[{
Cell[230684, 5093, 239, 4, 52, "Subsubsubsection",ExpressionUUID->"0e77d66b-ae18-4f30-a6fe-e1e1c2a3c543"],
Cell[230926, 5099, 249, 6, 35, "Text",ExpressionUUID->"0082f824-b0bf-4882-96f5-58799610aacc"],
Cell[231178, 5107, 1054, 33, 98, "Input",ExpressionUUID->"b9f45fce-cd4b-4a63-94bc-08b19226074d",
 CellID->745060400]
}, Open  ]],
Cell[CellGroupData[{
Cell[232269, 5145, 244, 4, 52, "Subsubsubsection",ExpressionUUID->"60b0b265-aa9a-4698-8660-d42f6424da33"],
Cell[232516, 5151, 214, 3, 35, "Text",ExpressionUUID->"0e53c977-a497-43b1-b28b-3b91c882dc5b"],
Cell[232733, 5156, 120, 0, 35, "Text",ExpressionUUID->"1a296425-3fe9-4e8d-a0b1-35924e339be7"],
Cell[232856, 5158, 492, 12, 40, "Input",ExpressionUUID->"0633d212-2446-4464-b268-aef417510194",
 CellTags->{"GeometricBrownianMotionProcess", "TimeSeriesThread"}],
Cell[233351, 5172, 220, 5, 35, "Text",ExpressionUUID->"6071482d-6447-488b-ae0d-b2aab969c9e0"],
Cell[233574, 5179, 141, 2, 35, "Text",ExpressionUUID->"6f4b49fe-e1c5-4610-8052-eba572460741"],
Cell[233718, 5183, 426, 12, 60, "Input",ExpressionUUID->"deb3782c-d1e5-456d-98f2-2ee5ceff1cad"],
Cell[234147, 5197, 589, 16, 35, "Text",ExpressionUUID->"ae32ae53-4440-4155-94ba-b6a33a030abd"],
Cell[234739, 5215, 864, 25, 40, "Input",ExpressionUUID->"f85ef949-bcb5-4ec6-b17b-1e836778039d",
 CellID->272630947],
Cell[235606, 5242, 92, 0, 35, "Text",ExpressionUUID->"48039404-abf8-47db-ae37-e22da431c728"],
Cell[235701, 5244, 542, 13, 98, "Input",ExpressionUUID->"e683f918-aca8-4c0b-828b-db8cd3c2df03",
 CellID->22733565],
Cell[236246, 5259, 71, 0, 35, "Text",ExpressionUUID->"2e0d4ccf-7e7c-4b45-bc4f-6cf6586d8694"],
Cell[236320, 5261, 86, 0, 138, "EndOfSlide",ExpressionUUID->"a0891170-c867-40af-999e-3150b3375e56"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236467, 5268, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9ab8640c-420d-433d-a207-5b0df097f94c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[236614, 5274, 87, 0, 91, "Subsection",ExpressionUUID->"f76d51aa-1c8b-4713-8e86-99f23ed79c63"],
Cell[236704, 5276, 360, 7, 35, "Text",ExpressionUUID->"d82be11e-0444-479c-99c8-842129fbe089"],
Cell[237067, 5285, 446, 8, 81, "Text",ExpressionUUID->"571b6531-3177-4b8c-b257-3d9230764cd5"],
Cell[237516, 5295, 86, 0, 138, "EndOfSlide",ExpressionUUID->"206bdba3-a69e-4cde-9556-bd78ab4ada21"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237651, 5301, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0859188d-0cce-4e5d-9d9d-3137b3e08cd2",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[237798, 5307, 81, 0, 139, "Section",ExpressionUUID->"0205c695-a5c9-4bea-bd9c-6a829d5b7bba"],
Cell[237882, 5309, 200, 3, 35, "Item",ExpressionUUID->"17193ad9-e5ea-45b5-a0a1-02f95c33aab9"],
Cell[238085, 5314, 199, 3, 35, "Item",ExpressionUUID->"5af4ffcc-77cc-4429-8ba9-af6f81de6bc6"],
Cell[238287, 5319, 210, 3, 35, "Item",ExpressionUUID->"4f463522-e84e-4f4e-a36b-e2f1363fb916"],
Cell[238500, 5324, 183, 3, 35, "Item",ExpressionUUID->"2188524e-fab6-4cca-95b3-ae62640e058f"],
Cell[238686, 5329, 226, 3, 35, "Item",ExpressionUUID->"a5962510-6b50-4788-9aa7-a5ca0ad98cc6"],
Cell[238915, 5334, 86, 0, 138, "EndOfSlide",ExpressionUUID->"98a7de22-75ad-4d38-b987-5e6c53c9a8a8"]
}, Open  ]]
}, Open  ]]
}
]
*)

