doctype html
html(lang='en')
    head
        meta(charset='utf-8')
        meta(name='viewport' content='user-scalable=no, width=device-width, initial-scale=1, shrink-to-fit=no')
        title Payment Form
    body
        div(style="text-align:center; margin-top: 40px; margin-bottom: 40px; width: 100%; height: 100%;")
            <img style="width: 50%;" src="#{dataForPage.logo}">
        #container
            p#expiryCardText(style="margin-left:12px; display:none;") Your card is expiring or has already expired, to use your replacement card, please enter the new expiry date and security code. To continue using your old card, just enter the current security code, leaving the expiry date blank.
            hr(id="topLine")
            p(style="margin: 0px 12px;") Amount: 
                b Â£#{dataForPage.amount}
            p(style="margin-left:12px;") Card Number: 
                b #{dataForPage.activeCardToken}
            hr(id="bottomLine")
            p(style="margin-left: 12px;")
                b Debit Cards Only
            <img style="width: 40%; margin-left: 12px;" src="#{dataForPage.acceptedPaymentLogos}">
            form(id="paymentForm" action="", method="post")
                div#expiryCardBlock(style="margin: 5px; display:none;")
                    label(for="card-expiry" style="width: 40%; padding: 10px 12px;") Card Expiry
                    input#card-expiry(type="text" placeholder="MM / YYYY" maxlength="7" style="width:60%; padding: 10px 12px; border-radius: 4px; border: 1px solid black;")
                div(style="margin: 5px; display: flex;")
                    label(for="card-cvc" style="width: 40%; padding: 10px 12px;") Security Code
                    #card-cvc(style="width:60%; padding: 10px 12px; border-radius: 4px; border: 1px solid black; height: 20px; height: 20px;")
                p(id="errorMessage" style="color:red;") #{errorMessage}
                div(style="text-align: center; margin: 0 auto;")
                    a(id="cancel" href="" style="font-size: 16px; text-decoration: none; padding: 4px 10px; float: left; margin-left: 12px; background-color: #c1555b; color: white; border-radius: 4px;") Cancel
                    button(id="submitButton" type="submit" style="font-size: 16px; border: none; background-color:#1e2d40; color: white; float: right; margin-right: 12px; border-radius: 4px; padding: 4px 10px;") Submit Payment
            form(id="submitForm" action="/v3/cyberSourceDeviceDataCollection" method="post")
                input#transactionToken(type='hidden' name="transactionToken")
                input#paymentCard(type='hidden' name="paymentCard")
                input#transientToken(type='hidden' name="transientToken")
                input#captureContext(type='hidden' name="captureContext")
                input#colourScheme(type='hidden' name="colourScheme")
            form(id="cancelForm" action="/v3/cancelDepositFundsIntoWalletFromCard" method="post")
                input#playerTokenCancel(type='hidden' name="playerToken")
                input#transactionTokenCancel(type='hidden' name="transactionToken")
                input#cancelReason(type='hidden' name="cancelReason")
                input#colourSchemeCancel(type='hidden' name="colourScheme")
        p(id="loader" style="display:none; text-align:center; margin:30;")
            b Processing Payment, please wait....
        p(id="cancelLoader" style="display:none; text-align:center; margin:30;")
            b Processing Payment, please wait....
        br
        br
        br
        br

        script(src="https://flex.cybersource.com/cybersource/assets/microform/0.11/flex-microform.min.js")
        script.
            if('#{dataForPage.expiredCard}' != 'false') {

                var cardExpiryText = document.getElementById('expiryCardText');
                cardExpiryText.style.color = "#{dataForPage.text}"
                var cardExpiryBlock = document.getElementById('expiryCardBlock');
                cardExpiryText.style.display = 'block';
                cardExpiryBlock.style.display = 'flex';

                var cardExpField = document.getElementById('card-expiry');
                cardExpField.style.backgroundColor = "#{dataForPage.background}";
                cardExpField.style.borderColor = "#{dataForPage.text}";
                cardExpField.style.color = "#{dataForPage.text}"

                //handle card expiry field
                let previousDelimiterPosition = -1;
                let expiryDateField = document.getElementById('card-expiry')
                expiryDateField.addEventListener('keyup', event => {
                    let expiryDateLengthBeforeReplace = expiryDateField.value.length;
                    let cursorPosition = expiryDateField.selectionStart;
                    expiryDateField.value = expiryDateField.value.replace(/[^0-9]/g, '');
                    if(expiryDateField.value.length == 2) {
                        if(previousDelimiterPosition == -1 || expiryDateLengthBeforeReplace == 3) {
                            expiryDateField.value = expiryDateField.value + '/';
                            expiryDateField.setSelectionRange(cursorPosition + 1, cursorPosition + 1);
                        } else {
                            expiryDateField.value = expiryDateField.value.substring(0,1);
                            expiryDateField.setSelectionRange(cursorPosition, cursorPosition);
                        }
                    } else if(expiryDateField.value.length == 3) {
                        expiryDateField.value = expiryDateField.value.substring(0, previousDelimiterPosition) + '/' + expiryDateField.value.substring(previousDelimiterPosition);
                        expiryDateField.setSelectionRange(cursorPosition, cursorPosition);
                    } else if(expiryDateField.value.length >= 4) {
                        expiryDateField.setSelectionRange(cursorPosition, cursorPosition);
                        expiryDateField.value = expiryDateField.value.substring(0,2) + '/' + expiryDateField.value.substring(2);
                    }
                    
                    previousDelimiterPosition = expiryDateField.value.indexOf('/');
                });

                expiryDateField.addEventListener('paste', event => {
                    event.preventDefault();
                });
            }

            document.getElementById('container').style.color = "#{dataForPage.text}";
            document.getElementById('topLine').style.borderColor = "#{dataForPage.text}";
            document.getElementById('bottomLine').style.borderColor = "#{dataForPage.text}";
            document.getElementById('loader').style.color = "#{dataForPage.text}";
            document.getElementById('cancelLoader').style.color = "#{dataForPage.text}";
            document.getElementById('errorMessage').style.color = '#{dataForPage.errorMessage}';

            /*const {sheet} = Object.assign(document.head.appendChild(document.createElement("style")), {type: "text/css" });
            const placeholderStyle = sheet.rules[sheet.insertRule("::placeholder {}")].style;
            placeholderStyle.color = '#{dataForPage.placeholder}';*/

            
            document.body.style.backgroundColor = "#{dataForPage.background}";

            var cardSecField = document.getElementById('card-cvc');
            cardSecField.style.borderColor = "#{dataForPage.text}";

            var paymentCancelButton = document.getElementById('cancel');
            paymentCancelButton.style.color = "#{dataForPage.buttonText}";
            paymentCancelButton.style.backgroundColor = "#{dataForPage.two}";
            
            var paymentSubmitButton = document.getElementById('submitButton');
            paymentSubmitButton.style.color = "#{dataForPage.buttonText}";
            paymentSubmitButton.style.backgroundColor = "#{dataForPage.five}";

            let captureContext = '#{dataForPage.captureContext}';
            let flexStyles = {
                'input': {
                    'font-size': '14px',
                    'font-family': 'helvetica, tahoma, calibri, sans-serif',
                    'color': '#{dataForPage.text}'
                },
                ':focus': { 'color': '#{dataForPage.text}' },
                ':disabled': {'cursor': 'not-allowed'},
                'valid': {'color': '#{dataForPage.text}'},
                'invalid': {'color': '#{dataForPage.errorMessage}'}
            };

            let flex = new Flex(captureContext);
            let microform = flex.microform({ styles: flexStyles });
            let securityCode = microform.createField('securityCode', { placeholder: 'CVC'});

            securityCode.load('#card-cvc');

            let cardCvcComplete;
            securityCode.on('change', function (evt) {
                if(evt.valid) {
                    cardCvcComplete = true;
                    document.getElementById('errorMessage').innerHTML = '';
                } else {
                    cardCvcComplete = false;
                }
            });

            securityCode.on('inputSubmitRequest', function(evt) {
                window.scrollTo(0,document.body.scrollHeight);
                document.getElementById('submitButton').focus();
            });

            let timeout = setTimeout(() => {
                securityCode.unload();
                document.getElementById("playerTokenCancel").value = "#{dataForPage.userToken}";
                document.getElementById("transactionTokenCancel").value = "#{dataForPage.transactionToken}";
                document.getElementById("cancelReason").value = "transactionTimeout";
                document.getElementById("colourSchemeCancel").value="#{dataForPage.colourScheme}";
                document.getElementById("cancelForm").submit();   

            }, 300000);

            const cancel = document.getElementById('cancel');
            cancel.addEventListener('click', event => {
                event.preventDefault();

                let hideContainer = document.getElementById('container');
                    hideContainer.style.display = "none";
                    let showLoader = document.getElementById('cancelLoader');
                    showLoader.style.display = "block";

                securityCode.unload();
                document.getElementById("playerTokenCancel").value = "#{dataForPage.userToken}";
                document.getElementById("transactionTokenCancel").value = "#{dataForPage.transactionToken}";
                document.getElementById("cancelReason").value = "Cancelled By Player";
                document.getElementById("colourSchemeCancel").value="#{dataForPage.colourScheme}";
                document.getElementById("cancelForm").submit(); 

            });

            var submitForm = true;

            const element = document.getElementById('paymentForm');
            element.addEventListener('submit', event => {
                event.preventDefault();

                let expiryDate = document.getElementById('card-expiry').value;
                if(expiryDate && !/^(0[1-9]|1[0-2])\/\d{4}$/.test(expiryDate)){
                    document.getElementById('errorMessage').innerHTML = 'Card expiry date is invalid, it must be in a mm/yyyy format.';
                    return false;
                }

                let expiryMonth = (expiryDate ? expiryDate.substring(0,2) : null);
                let expiryYear = (expiryDate ? expiryDate.substring(3) : null);

                let date = new Date();
                let dateMonth = date.getMonth() + 1;
                let dateYear = date.getFullYear();

                if(dateMonth < 10) { 
                    dateMonth = '0' + dateMonth;
                }

                if ((expiryYear && expiryYear < dateYear) || ((expiryYear && expiryYear == dateYear) && (expiryMonth && expiryMonth < dateMonth))) {
                    document.getElementById('errorMessage').innerHTML = 'Card expiry date is invalid, date must be in the future.';
                    return false;
                }

                if(submitForm) {
                    if(cardCvcComplete) {
                        let hideContainer = document.getElementById('container');
                        hideContainer.style.display = "none";
                        let showLoader = document.getElementById('loader');
                        showLoader.style.display = "block";

                        let options;          
                        if(expiryMonth && expiryYear) {
                            options = {
                            expirationMonth: expiryMonth.toString(),
                            expirationYear: expiryYear.toString()
                            }
                        } else {
                            options= {};
                        }
                        
                        submitForm = false;

                        try{
                            microform.createToken(options, function(err, token) {
                                if(err) {
                                    let hideContainer = document.getElementById('container');
                                    hideContainer.style.display = "block";
                                    let showLoader = document.getElementById('loader');
                                    showLoader.style.display = "none";
                                    submitForm = true;
                                    document.getElementById('errorMessage').innerHTML = 'Error has occured. No payment has been taken, please try again.';
                                    return false;
                                }

                                securityCode.unload();

                                document.getElementById("transactionToken").value = "#{dataForPage.transactionToken}";
                                document.getElementById("paymentCard").value = "#{dataForPage.paymentCard}";
                                document.getElementById("transientToken").value = token;
                                document.getElementById("captureContext").value = '#{dataForPage.captureContext}';
                                document.getElementById("colourScheme").value = '#{dataForPage.colourScheme}';
                                document.getElementById("submitForm").submit();  
                            }) 
                        } catch(err) {
                            document.getElementById('errorMessage').innerHTML = 'Error has occured. No payment has been taken, please try again.';
                            return false;
                        }                    
  
                    } else {
                        document.getElementById('errorMessage').innerHTML = 'Card details are invalid, please fix the errors and try again.';
                    }
                }
            });
            