# Can be multiple clusters clusters= cluster1, cluster2, cluster3, cluster5
clusters=kafka-source, kafka-destination
kafka-source.bootstrap.servers = kafka-source:9092
kafka-destination.bootstrap.servers = kafka-destination:9093

#---------------------------------------------------------------------------------------
# Use below config for SSL based Authentication
# kafka-source.bootstrap.servers=b-3.test-v2-kafka-mtls.t8fo5s.c2.kafka.eu-west-1.amazonaws.com:9094,b-1.test-v2-kafka-mtls.t8fo5s.c2.kafka.eu-west-1.amazonaws.com:9094,b-2.test-v2-kafka-mtls.t8fo5s.c2.kafka.eu-west-1.amazonaws.com:9094
# kafka-source.security.protocol=SSL
# kafka-source.ssl.keystore.type=PKCS12
# kafka-source.ssl.keystore.location=/kafka-cluster-configs/kafka-source/mirror-maker-secret.p12
# kafka-source.ssl.keystore.password=

# kafka-destination.bootstrap.servers=b-1.test-kafka-regional.jqnz8p.c5.kafka.us-east-1.amazonaws.com:9094,b-2.test-kafka-regional.jqnz8p.c5.kafka.us-east-1.amazonaws.com:9094,b-3.test-kafka-regional.jqnz8p.c5.kafka.us-east-1.amazonaws.com:9094
# kafka-destination.security.protocol=SSL
# kafka-destination.ssl.keystore.type=PKCS12
# kafka-destination.ssl.keystore.location=/kafka-cluster-configs/kafka-destination/mirror-maker-secret.p12
# kafka-destination.ssl.keystore.password=

#-----------------------------------------------------------------------------------------
# Use below config for Username and Password based Authentication
# kafka-source.sasl.mechanism=PLAIN
# kafka-source.security.protocol=SASL_SSL
# kafka-source.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username=<Username> password=<Password>;

# kafka-destination.sasl.mechanism=PLAIN
# kafka-destination.security.protocol=SASL_SSL
# kafka-destination.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username=<Username> password=<Password>;

#-----------------------------------------------------------------------------------------
# destination.security.protocol=SASL_SSL
# destination.ssl.truststore.password=<password>
# destination.ssl.truststore.location=/path/to/kafka.server.truststore.jks
# #keystore location in case client.auth is set to required
# destination.ssl.keystore.password=<password>
# destination.ssl.keystore.location=/path/to/kafka.server.keystore.jks
# destination.sasl.mechanism=GSSAPI

#-----------------------------------------------------------------------------------------
# For anynomous access, SSL configuration is not required
#Comma separated list of topics
kafka-source->kafka-destination.topics=source-topic
kafka-source->kafka-destination.enabled=true
kafka-source->kafka-destination.topics.blacklist=".*\.internal,.*\.heartbeats"
kafka-source->kafka-destination.sync.group.offsets.enabled=true
kafka-source->kafka-destination.sync.group.offsets.interval.seconds=10
kafka-source->kafka-destination.refresh.groups.enabled=true
kafka-source->kafka-destination.refresh.groups.interval.seconds=10
kafka-source->kafka-destination.sync.topic.configs.enabled=true
kafka-source->kafka-destination.refresh.topics.enabled=true
kafka-source->kafka-destination.refresh.topics.interval.seconds=10
kafka-source->kafka-destination.sync.topic.acls.enabled=false
kafka-source->kafka-destination.emit.checkpoints.enabled=true
kafka-source->kafka-destination.emit.checkpoints.interval.seconds=5
kafka-source->kafka-destination.emit.heartbeats.enabled=true
kafka-source->kafka-destination.emit.heartbeats.interval.seconds=5
kafka-source->kafka-destination.checkpoints.topic.replication.factor.enabled=true

# Common for all the clusters and replication
tasks.max =1
replication.factor=1
enable.auto.commit=true
checkpoints.topic.replication.factor=1
heartbeats.topic.replication.factor=1
offset-syncs.topic.replication.factor=1
offset.storage.replication.factor=1
status.storage.replication.factor=1
config.storage.replication.factor=1
task.shutdown.graceful.timeout.ms=15000
connector.shutdown.graceful.timeout.ms=15000
session.timeout.ms=60000
