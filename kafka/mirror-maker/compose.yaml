version: "2"
services:
  kafka-source:
    image: bitnami/kafka:latest
    hostname: kafka-source
    restart: "no"
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_KRAFT_MODE: true
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: CLIENT://:9092,CONTROLLER://:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka-source:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-source:29092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop-source:
    image: obsidiandynamics/kafdrop:latest
    restart: no
    ports:
      - 9005:9005
    environment:
      KAFKA_BROKERCONNECT: CLIENT://kafka-source:9092
      SERVER_PORT: 9005
      MANAGEMENT_SERVER_PORT: 9005
    depends_on:
      - kafka-source

  kafka-destination:
    image: bitnami/kafka:latest
    hostname: kafka-destination
    restart: "no"
    ports:
      - "9093"
      - "9095"
    environment:
      # KRAFT
      KAFKA_CFG_KRAFT_MODE: true
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-destination:29093,2@kafka-destination-1:29093
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv
      # Listeners
      KAFKA_CFG_LISTENERS: CLIENT://:9093,INTERNAL://:9095,CONTROLLER://:29093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:SASL_PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka-destination:9093,INTERNAL://kafka-destination:9095
      KAFKA_CFG_EARLY_START_LISTENERS: CONTROLLER
      # SASL
      KAFKA_CFG_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_CFG_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_CFG_LISTENER_NAME_CLIENT_SASL_ENABLED_MECHANISMS: PLAIN
      # ACL
      KAFKA_CFG_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_CFG_SUPER_USERS: User:admin;User:ANONYMOUS # ANONYMOUS is here to avoid configuring authentication for the internal communications.
      KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND: true # Set to true so initialisation works. Will need to add ACLs for everything though, to secure the broker - probably wont' be needed if we break controller from broker.
      KAFKA_CFG_LISTENER_NAME_CLIENT_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="this_is_the_admin_secret" user_admin="this_is_the_admin_secret" user_mirror="this_is_the_mirror_secret";
      # Clustering
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # General Settings
      BITNAMI_DEBUG: true
  kafka-destination-1:
    image: bitnami/kafka:latest
    hostname: kafka-destination-1
    restart: "no"
    ports:
      - "9093"
      - "9095"
    environment:
      # KRAFT
      KAFKA_CFG_KRAFT_MODE: true
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-destination:29093,2@kafka-destination-1:29093
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv
      # Listeners
      KAFKA_CFG_LISTENERS: CLIENT://:9093,INTERNAL://:9095,CONTROLLER://:29093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:SASL_PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka-destination-1:9093,INTERNAL://kafka-destination-1:9095
      KAFKA_CFG_EARLY_START_LISTENERS: CONTROLLER
      # SASL
      KAFKA_CFG_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_CFG_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_CFG_LISTENER_NAME_CLIENT_SASL_ENABLED_MECHANISMS: PLAIN
      # ACL
      KAFKA_CFG_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_CFG_SUPER_USERS: User:admin;User:ANONYMOUS # ANONYMOUS is here to avoid configuring authentication for the internal communications.
      KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND: true # Set to true so initialisation works. Will need to add ACLs for everything though, to secure the broker - probably wont' be needed if we break controller from broker.
      KAFKA_CFG_LISTENER_NAME_CLIENT_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="this_is_the_admin_secret" user_admin="this_is_the_admin_secret" user_mirror="this_is_the_mirror_secret";
      # Clustering
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # General Settings
      BITNAMI_DEBUG: true

  kafdrop-destination:
    image: obsidiandynamics/kafdrop:latest
    restart: no
    ports:
      - 9009:9009
    environment:
      KAFKA_BROKERCONNECT: INTERNAL://kafka-destination:9095,INTERNAL://kafka-destination-1:9095
      SERVER_PORT: 9009
      MANAGEMENT_SERVER_PORT: 9009
    depends_on:
      - kafka-destination
      - kafka-destination-1

  topic-creation:
    build: ./init
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      while ! nc -z kafka-source 9092; do
        echo 'Waiting for Source to be ready...'
        sleep 1
      done
      while ! nc -z kafka-destination 9095; do
        echo 'Waiting for Destination to be ready...'
        sleep 1
      done
      while ! nc -z kafka-destination-1 9095; do
        echo 'Waiting for Destination to be ready...'
        sleep 1
      done

      echo 'Creating source topic...'
      kafka-topics.sh --bootstrap-server kafka-source:9092 --create --if-not-exists --topic source-topic --partitions 1 --replication-factor 1
      kafka-topics.sh --bootstrap-server kafka-source:9092 --list

      echo 'Creating destination topic...'
      kafka-topics.sh --bootstrap-server kafka-destination:9095 --create --if-not-exists --topic destination-topic --partitions 2 --replication-factor 1
      kafka-topics.sh --bootstrap-server kafka-destination:9095 --list

      echo 'Waiting 30 sec to send test messages...'
      sleep 30

      echo 'Sending test messages...'
      seq 1 10 | kafka-console-producer.sh --broker-list kafka-source:9092 --topic source-topic
      seq 1 10 | kafka-console-producer.sh --broker-list kafka-destination:9095 --topic destination-topic

      echo 'Creating ACLs on destination...'
      kafka-acls.sh --bootstrap-server kafka-destination:9095 --add --allow-principal User:mirror --operation All --topic mm2 --topic source --resource-pattern-type prefixed
      kafka-acls.sh --bootstrap-server kafka-destination-1:9095 --add --allow-principal User:mirror --operation All --topic mm2 --topic source --resource-pattern-type prefixed
      kafka-acls.sh --bootstrap-server kafka-destination:9095 --add --allow-principal User:mirror --operation Read --operation Write --operation Describe --operation DescribeConfigs --topic destination --resource-pattern-type prefixed
      kafka-acls.sh --bootstrap-server kafka-destination-1:9095 --add --allow-principal User:mirror --operation Read --operation Write --operation Describe --operation DescribeConfigs --topic destination --resource-pattern-type prefixed

      echo 'done...'
      "
    depends_on:
      - kafka-source
      - kafdrop-source
      - kafka-destination
      - kafka-destination-1
      - kafdrop-destination

  mirror-maker:
    build: ./mirror/
    entrypoint: ["/bin/bash", "-c"]
    command: ["echo Starting MirrorMaker; connect-mirror-maker.sh /etc/kafka/mirror-maker.properties"]
    depends_on:
      - kafka-source
      - kafka-destination
